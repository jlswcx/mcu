

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 21 01:32:47 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	intentry,global,class=CODE,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.10
    56                           ; Generated 31/07/2019 GMT
    57                           ; 
    58                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F1823 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000E                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  008C                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  010C                     	;# 
   132  010E                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  018C                     	;# 
   147  018E                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020E                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0291                     	;# 
   186  0291                     	;# 
   187  0292                     	;# 
   188  0293                     	;# 
   189  0294                     	;# 
   190  0295                     	;# 
   191  0295                     	;# 
   192  0296                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  039A                     	;# 
   197  039C                     	;# 
   198  039D                     	;# 
   199  039E                     	;# 
   200  039F                     	;# 
   201  0FE4                     	;# 
   202  0FE5                     	;# 
   203  0FE6                     	;# 
   204  0FE7                     	;# 
   205  0FE8                     	;# 
   206  0FE9                     	;# 
   207  0FEA                     	;# 
   208  0FEB                     	;# 
   209  0FED                     	;# 
   210  0FEE                     	;# 
   211  0FEF                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000E                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  008C                     	;# 
   240  008E                     	;# 
   241  0091                     	;# 
   242  0092                     	;# 
   243  0095                     	;# 
   244  0096                     	;# 
   245  0097                     	;# 
   246  0098                     	;# 
   247  0099                     	;# 
   248  009A                     	;# 
   249  009B                     	;# 
   250  009B                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  010C                     	;# 
   255  010E                     	;# 
   256  0111                     	;# 
   257  0112                     	;# 
   258  0113                     	;# 
   259  0114                     	;# 
   260  0115                     	;# 
   261  0116                     	;# 
   262  0117                     	;# 
   263  0118                     	;# 
   264  0119                     	;# 
   265  011A                     	;# 
   266  011B                     	;# 
   267  011D                     	;# 
   268  011D                     	;# 
   269  018C                     	;# 
   270  018E                     	;# 
   271  0191                     	;# 
   272  0191                     	;# 
   273  0192                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0193                     	;# 
   277  0194                     	;# 
   278  0195                     	;# 
   279  0196                     	;# 
   280  0199                     	;# 
   281  019A                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019C                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  020E                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0391                     	;# 
   317  0392                     	;# 
   318  0393                     	;# 
   319  039A                     	;# 
   320  039C                     	;# 
   321  039D                     	;# 
   322  039E                     	;# 
   323  039F                     	;# 
   324  0FE4                     	;# 
   325  0FE5                     	;# 
   326  0FE6                     	;# 
   327  0FE7                     	;# 
   328  0FE8                     	;# 
   329  0FE9                     	;# 
   330  0FEA                     	;# 
   331  0FEB                     	;# 
   332  0FED                     	;# 
   333  0FEE                     	;# 
   334  0FEF                     	;# 
   335  0000                     	;# 
   336  0001                     	;# 
   337  0002                     	;# 
   338  0003                     	;# 
   339  0004                     	;# 
   340  0005                     	;# 
   341  0006                     	;# 
   342  0007                     	;# 
   343  0008                     	;# 
   344  0009                     	;# 
   345  000A                     	;# 
   346  000B                     	;# 
   347  000C                     	;# 
   348  000E                     	;# 
   349  0011                     	;# 
   350  0012                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0016                     	;# 
   354  0017                     	;# 
   355  0018                     	;# 
   356  0019                     	;# 
   357  001A                     	;# 
   358  001B                     	;# 
   359  001C                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  008C                     	;# 
   363  008E                     	;# 
   364  0091                     	;# 
   365  0092                     	;# 
   366  0095                     	;# 
   367  0096                     	;# 
   368  0097                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009A                     	;# 
   372  009B                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  010C                     	;# 
   378  010E                     	;# 
   379  0111                     	;# 
   380  0112                     	;# 
   381  0113                     	;# 
   382  0114                     	;# 
   383  0115                     	;# 
   384  0116                     	;# 
   385  0117                     	;# 
   386  0118                     	;# 
   387  0119                     	;# 
   388  011A                     	;# 
   389  011B                     	;# 
   390  011D                     	;# 
   391  011D                     	;# 
   392  018C                     	;# 
   393  018E                     	;# 
   394  0191                     	;# 
   395  0191                     	;# 
   396  0192                     	;# 
   397  0193                     	;# 
   398  0193                     	;# 
   399  0193                     	;# 
   400  0194                     	;# 
   401  0195                     	;# 
   402  0196                     	;# 
   403  0199                     	;# 
   404  019A                     	;# 
   405  019B                     	;# 
   406  019B                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019C                     	;# 
   410  019C                     	;# 
   411  019D                     	;# 
   412  019E                     	;# 
   413  019F                     	;# 
   414  020C                     	;# 
   415  020E                     	;# 
   416  0211                     	;# 
   417  0211                     	;# 
   418  0212                     	;# 
   419  0212                     	;# 
   420  0213                     	;# 
   421  0213                     	;# 
   422  0214                     	;# 
   423  0214                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0215                     	;# 
   427  0216                     	;# 
   428  0216                     	;# 
   429  0217                     	;# 
   430  0217                     	;# 
   431  0291                     	;# 
   432  0291                     	;# 
   433  0292                     	;# 
   434  0293                     	;# 
   435  0294                     	;# 
   436  0295                     	;# 
   437  0295                     	;# 
   438  0296                     	;# 
   439  0391                     	;# 
   440  0392                     	;# 
   441  0393                     	;# 
   442  039A                     	;# 
   443  039C                     	;# 
   444  039D                     	;# 
   445  039E                     	;# 
   446  039F                     	;# 
   447  0FE4                     	;# 
   448  0FE5                     	;# 
   449  0FE6                     	;# 
   450  0FE7                     	;# 
   451  0FE8                     	;# 
   452  0FE9                     	;# 
   453  0FEA                     	;# 
   454  0FEB                     	;# 
   455  0FED                     	;# 
   456  0FEE                     	;# 
   457  0FEF                     	;# 
   458  0000                     	;# 
   459  0001                     	;# 
   460  0002                     	;# 
   461  0003                     	;# 
   462  0004                     	;# 
   463  0005                     	;# 
   464  0006                     	;# 
   465  0007                     	;# 
   466  0008                     	;# 
   467  0009                     	;# 
   468  000A                     	;# 
   469  000B                     	;# 
   470  000C                     	;# 
   471  000E                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0016                     	;# 
   477  0017                     	;# 
   478  0018                     	;# 
   479  0019                     	;# 
   480  001A                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  008C                     	;# 
   486  008E                     	;# 
   487  0091                     	;# 
   488  0092                     	;# 
   489  0095                     	;# 
   490  0096                     	;# 
   491  0097                     	;# 
   492  0098                     	;# 
   493  0099                     	;# 
   494  009A                     	;# 
   495  009B                     	;# 
   496  009B                     	;# 
   497  009C                     	;# 
   498  009D                     	;# 
   499  009E                     	;# 
   500  010C                     	;# 
   501  010E                     	;# 
   502  0111                     	;# 
   503  0112                     	;# 
   504  0113                     	;# 
   505  0114                     	;# 
   506  0115                     	;# 
   507  0116                     	;# 
   508  0117                     	;# 
   509  0118                     	;# 
   510  0119                     	;# 
   511  011A                     	;# 
   512  011B                     	;# 
   513  011D                     	;# 
   514  011D                     	;# 
   515  018C                     	;# 
   516  018E                     	;# 
   517  0191                     	;# 
   518  0191                     	;# 
   519  0192                     	;# 
   520  0193                     	;# 
   521  0193                     	;# 
   522  0193                     	;# 
   523  0194                     	;# 
   524  0195                     	;# 
   525  0196                     	;# 
   526  0199                     	;# 
   527  019A                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019C                     	;# 
   533  019C                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536  019F                     	;# 
   537  020C                     	;# 
   538  020E                     	;# 
   539  0211                     	;# 
   540  0211                     	;# 
   541  0212                     	;# 
   542  0212                     	;# 
   543  0213                     	;# 
   544  0213                     	;# 
   545  0214                     	;# 
   546  0214                     	;# 
   547  0215                     	;# 
   548  0215                     	;# 
   549  0215                     	;# 
   550  0216                     	;# 
   551  0216                     	;# 
   552  0217                     	;# 
   553  0217                     	;# 
   554  0291                     	;# 
   555  0291                     	;# 
   556  0292                     	;# 
   557  0293                     	;# 
   558  0294                     	;# 
   559  0295                     	;# 
   560  0295                     	;# 
   561  0296                     	;# 
   562  0391                     	;# 
   563  0392                     	;# 
   564  0393                     	;# 
   565  039A                     	;# 
   566  039C                     	;# 
   567  039D                     	;# 
   568  039E                     	;# 
   569  039F                     	;# 
   570  0FE4                     	;# 
   571  0FE5                     	;# 
   572  0FE6                     	;# 
   573  0FE7                     	;# 
   574  0FE8                     	;# 
   575  0FE9                     	;# 
   576  0FEA                     	;# 
   577  0FEB                     	;# 
   578  0FED                     	;# 
   579  0FEE                     	;# 
   580  0FEF                     	;# 
   581  0000                     	;# 
   582  0001                     	;# 
   583  0002                     	;# 
   584  0003                     	;# 
   585  0004                     	;# 
   586  0005                     	;# 
   587  0006                     	;# 
   588  0007                     	;# 
   589  0008                     	;# 
   590  0009                     	;# 
   591  000A                     	;# 
   592  000B                     	;# 
   593  000C                     	;# 
   594  000E                     	;# 
   595  0011                     	;# 
   596  0012                     	;# 
   597  0015                     	;# 
   598  0016                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001B                     	;# 
   605  001C                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  008C                     	;# 
   609  008E                     	;# 
   610  0091                     	;# 
   611  0092                     	;# 
   612  0095                     	;# 
   613  0096                     	;# 
   614  0097                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  010C                     	;# 
   624  010E                     	;# 
   625  0111                     	;# 
   626  0112                     	;# 
   627  0113                     	;# 
   628  0114                     	;# 
   629  0115                     	;# 
   630  0116                     	;# 
   631  0117                     	;# 
   632  0118                     	;# 
   633  0119                     	;# 
   634  011A                     	;# 
   635  011B                     	;# 
   636  011D                     	;# 
   637  011D                     	;# 
   638  018C                     	;# 
   639  018E                     	;# 
   640  0191                     	;# 
   641  0191                     	;# 
   642  0192                     	;# 
   643  0193                     	;# 
   644  0193                     	;# 
   645  0193                     	;# 
   646  0194                     	;# 
   647  0195                     	;# 
   648  0196                     	;# 
   649  0199                     	;# 
   650  019A                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019B                     	;# 
   654  019B                     	;# 
   655  019C                     	;# 
   656  019C                     	;# 
   657  019D                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  020C                     	;# 
   661  020E                     	;# 
   662  0211                     	;# 
   663  0211                     	;# 
   664  0212                     	;# 
   665  0212                     	;# 
   666  0213                     	;# 
   667  0213                     	;# 
   668  0214                     	;# 
   669  0214                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0215                     	;# 
   673  0216                     	;# 
   674  0216                     	;# 
   675  0217                     	;# 
   676  0217                     	;# 
   677  0291                     	;# 
   678  0291                     	;# 
   679  0292                     	;# 
   680  0293                     	;# 
   681  0294                     	;# 
   682  0295                     	;# 
   683  0295                     	;# 
   684  0296                     	;# 
   685  0391                     	;# 
   686  0392                     	;# 
   687  0393                     	;# 
   688  039A                     	;# 
   689  039C                     	;# 
   690  039D                     	;# 
   691  039E                     	;# 
   692  039F                     	;# 
   693  0FE4                     	;# 
   694  0FE5                     	;# 
   695  0FE6                     	;# 
   696  0FE7                     	;# 
   697  0FE8                     	;# 
   698  0FE9                     	;# 
   699  0FEA                     	;# 
   700  0FEB                     	;# 
   701  0FED                     	;# 
   702  0FEE                     	;# 
   703  0FEF                     	;# 
   704  0000                     	;# 
   705  0001                     	;# 
   706  0002                     	;# 
   707  0003                     	;# 
   708  0004                     	;# 
   709  0005                     	;# 
   710  0006                     	;# 
   711  0007                     	;# 
   712  0008                     	;# 
   713  0009                     	;# 
   714  000A                     	;# 
   715  000B                     	;# 
   716  000C                     	;# 
   717  000E                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  008C                     	;# 
   732  008E                     	;# 
   733  0091                     	;# 
   734  0092                     	;# 
   735  0095                     	;# 
   736  0096                     	;# 
   737  0097                     	;# 
   738  0098                     	;# 
   739  0099                     	;# 
   740  009A                     	;# 
   741  009B                     	;# 
   742  009B                     	;# 
   743  009C                     	;# 
   744  009D                     	;# 
   745  009E                     	;# 
   746  010C                     	;# 
   747  010E                     	;# 
   748  0111                     	;# 
   749  0112                     	;# 
   750  0113                     	;# 
   751  0114                     	;# 
   752  0115                     	;# 
   753  0116                     	;# 
   754  0117                     	;# 
   755  0118                     	;# 
   756  0119                     	;# 
   757  011A                     	;# 
   758  011B                     	;# 
   759  011D                     	;# 
   760  011D                     	;# 
   761  018C                     	;# 
   762  018E                     	;# 
   763  0191                     	;# 
   764  0191                     	;# 
   765  0192                     	;# 
   766  0193                     	;# 
   767  0193                     	;# 
   768  0193                     	;# 
   769  0194                     	;# 
   770  0195                     	;# 
   771  0196                     	;# 
   772  0199                     	;# 
   773  019A                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019C                     	;# 
   779  019C                     	;# 
   780  019D                     	;# 
   781  019E                     	;# 
   782  019F                     	;# 
   783  020C                     	;# 
   784  020E                     	;# 
   785  0211                     	;# 
   786  0211                     	;# 
   787  0212                     	;# 
   788  0212                     	;# 
   789  0213                     	;# 
   790  0213                     	;# 
   791  0214                     	;# 
   792  0214                     	;# 
   793  0215                     	;# 
   794  0215                     	;# 
   795  0215                     	;# 
   796  0216                     	;# 
   797  0216                     	;# 
   798  0217                     	;# 
   799  0217                     	;# 
   800  0291                     	;# 
   801  0291                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0294                     	;# 
   805  0295                     	;# 
   806  0295                     	;# 
   807  0296                     	;# 
   808  0391                     	;# 
   809  0392                     	;# 
   810  0393                     	;# 
   811  039A                     	;# 
   812  039C                     	;# 
   813  039D                     	;# 
   814  039E                     	;# 
   815  039F                     	;# 
   816  0FE4                     	;# 
   817  0FE5                     	;# 
   818  0FE6                     	;# 
   819  0FE7                     	;# 
   820  0FE8                     	;# 
   821  0FE9                     	;# 
   822  0FEA                     	;# 
   823  0FEB                     	;# 
   824  0FED                     	;# 
   825  0FEE                     	;# 
   826  0FEF                     	;# 
   827  0000                     	;# 
   828  0001                     	;# 
   829  0002                     	;# 
   830  0003                     	;# 
   831  0004                     	;# 
   832  0005                     	;# 
   833  0006                     	;# 
   834  0007                     	;# 
   835  0008                     	;# 
   836  0009                     	;# 
   837  000A                     	;# 
   838  000B                     	;# 
   839  000C                     	;# 
   840  000E                     	;# 
   841  0011                     	;# 
   842  0012                     	;# 
   843  0015                     	;# 
   844  0016                     	;# 
   845  0016                     	;# 
   846  0017                     	;# 
   847  0018                     	;# 
   848  0019                     	;# 
   849  001A                     	;# 
   850  001B                     	;# 
   851  001C                     	;# 
   852  001E                     	;# 
   853  001F                     	;# 
   854  008C                     	;# 
   855  008E                     	;# 
   856  0091                     	;# 
   857  0092                     	;# 
   858  0095                     	;# 
   859  0096                     	;# 
   860  0097                     	;# 
   861  0098                     	;# 
   862  0099                     	;# 
   863  009A                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  010C                     	;# 
   870  010E                     	;# 
   871  0111                     	;# 
   872  0112                     	;# 
   873  0113                     	;# 
   874  0114                     	;# 
   875  0115                     	;# 
   876  0116                     	;# 
   877  0117                     	;# 
   878  0118                     	;# 
   879  0119                     	;# 
   880  011A                     	;# 
   881  011B                     	;# 
   882  011D                     	;# 
   883  011D                     	;# 
   884  018C                     	;# 
   885  018E                     	;# 
   886  0191                     	;# 
   887  0191                     	;# 
   888  0192                     	;# 
   889  0193                     	;# 
   890  0193                     	;# 
   891  0193                     	;# 
   892  0194                     	;# 
   893  0195                     	;# 
   894  0196                     	;# 
   895  0199                     	;# 
   896  019A                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019D                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  020C                     	;# 
   907  020E                     	;# 
   908  0211                     	;# 
   909  0211                     	;# 
   910  0212                     	;# 
   911  0212                     	;# 
   912  0213                     	;# 
   913  0213                     	;# 
   914  0214                     	;# 
   915  0214                     	;# 
   916  0215                     	;# 
   917  0215                     	;# 
   918  0215                     	;# 
   919  0216                     	;# 
   920  0216                     	;# 
   921  0217                     	;# 
   922  0217                     	;# 
   923  0291                     	;# 
   924  0291                     	;# 
   925  0292                     	;# 
   926  0293                     	;# 
   927  0294                     	;# 
   928  0295                     	;# 
   929  0295                     	;# 
   930  0296                     	;# 
   931  0391                     	;# 
   932  0392                     	;# 
   933  0393                     	;# 
   934  039A                     	;# 
   935  039C                     	;# 
   936  039D                     	;# 
   937  039E                     	;# 
   938  039F                     	;# 
   939  0FE4                     	;# 
   940  0FE5                     	;# 
   941  0FE6                     	;# 
   942  0FE7                     	;# 
   943  0FE8                     	;# 
   944  0FE9                     	;# 
   945  0FEA                     	;# 
   946  0FEB                     	;# 
   947  0FED                     	;# 
   948  0FEE                     	;# 
   949  0FEF                     	;# 
   950  0000                     	;# 
   951  0001                     	;# 
   952  0002                     	;# 
   953  0003                     	;# 
   954  0004                     	;# 
   955  0005                     	;# 
   956  0006                     	;# 
   957  0007                     	;# 
   958  0008                     	;# 
   959  0009                     	;# 
   960  000A                     	;# 
   961  000B                     	;# 
   962  000C                     	;# 
   963  000E                     	;# 
   964  0011                     	;# 
   965  0012                     	;# 
   966  0015                     	;# 
   967  0016                     	;# 
   968  0016                     	;# 
   969  0017                     	;# 
   970  0018                     	;# 
   971  0019                     	;# 
   972  001A                     	;# 
   973  001B                     	;# 
   974  001C                     	;# 
   975  001E                     	;# 
   976  001F                     	;# 
   977  008C                     	;# 
   978  008E                     	;# 
   979  0091                     	;# 
   980  0092                     	;# 
   981  0095                     	;# 
   982  0096                     	;# 
   983  0097                     	;# 
   984  0098                     	;# 
   985  0099                     	;# 
   986  009A                     	;# 
   987  009B                     	;# 
   988  009B                     	;# 
   989  009C                     	;# 
   990  009D                     	;# 
   991  009E                     	;# 
   992  010C                     	;# 
   993  010E                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011A                     	;# 
  1004  011B                     	;# 
  1005  011D                     	;# 
  1006  011D                     	;# 
  1007  018C                     	;# 
  1008  018E                     	;# 
  1009  0191                     	;# 
  1010  0191                     	;# 
  1011  0192                     	;# 
  1012  0193                     	;# 
  1013  0193                     	;# 
  1014  0193                     	;# 
  1015  0194                     	;# 
  1016  0195                     	;# 
  1017  0196                     	;# 
  1018  0199                     	;# 
  1019  019A                     	;# 
  1020  019B                     	;# 
  1021  019B                     	;# 
  1022  019B                     	;# 
  1023  019B                     	;# 
  1024  019C                     	;# 
  1025  019C                     	;# 
  1026  019D                     	;# 
  1027  019E                     	;# 
  1028  019F                     	;# 
  1029  020C                     	;# 
  1030  020E                     	;# 
  1031  0211                     	;# 
  1032  0211                     	;# 
  1033  0212                     	;# 
  1034  0212                     	;# 
  1035  0213                     	;# 
  1036  0213                     	;# 
  1037  0214                     	;# 
  1038  0214                     	;# 
  1039  0215                     	;# 
  1040  0215                     	;# 
  1041  0215                     	;# 
  1042  0216                     	;# 
  1043  0216                     	;# 
  1044  0217                     	;# 
  1045  0217                     	;# 
  1046  0291                     	;# 
  1047  0291                     	;# 
  1048  0292                     	;# 
  1049  0293                     	;# 
  1050  0294                     	;# 
  1051  0295                     	;# 
  1052  0295                     	;# 
  1053  0296                     	;# 
  1054  0391                     	;# 
  1055  0392                     	;# 
  1056  0393                     	;# 
  1057  039A                     	;# 
  1058  039C                     	;# 
  1059  039D                     	;# 
  1060  039E                     	;# 
  1061  039F                     	;# 
  1062  0FE4                     	;# 
  1063  0FE5                     	;# 
  1064  0FE6                     	;# 
  1065  0FE7                     	;# 
  1066  0FE8                     	;# 
  1067  0FE9                     	;# 
  1068  0FEA                     	;# 
  1069  0FEB                     	;# 
  1070  0FED                     	;# 
  1071  0FEE                     	;# 
  1072  0FEF                     	;# 
  1073  0000                     	;# 
  1074  0001                     	;# 
  1075  0002                     	;# 
  1076  0003                     	;# 
  1077  0004                     	;# 
  1078  0005                     	;# 
  1079  0006                     	;# 
  1080  0007                     	;# 
  1081  0008                     	;# 
  1082  0009                     	;# 
  1083  000A                     	;# 
  1084  000B                     	;# 
  1085  000C                     	;# 
  1086  000E                     	;# 
  1087  0011                     	;# 
  1088  0012                     	;# 
  1089  0015                     	;# 
  1090  0016                     	;# 
  1091  0016                     	;# 
  1092  0017                     	;# 
  1093  0018                     	;# 
  1094  0019                     	;# 
  1095  001A                     	;# 
  1096  001B                     	;# 
  1097  001C                     	;# 
  1098  001E                     	;# 
  1099  001F                     	;# 
  1100  008C                     	;# 
  1101  008E                     	;# 
  1102  0091                     	;# 
  1103  0092                     	;# 
  1104  0095                     	;# 
  1105  0096                     	;# 
  1106  0097                     	;# 
  1107  0098                     	;# 
  1108  0099                     	;# 
  1109  009A                     	;# 
  1110  009B                     	;# 
  1111  009B                     	;# 
  1112  009C                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  010C                     	;# 
  1116  010E                     	;# 
  1117  0111                     	;# 
  1118  0112                     	;# 
  1119  0113                     	;# 
  1120  0114                     	;# 
  1121  0115                     	;# 
  1122  0116                     	;# 
  1123  0117                     	;# 
  1124  0118                     	;# 
  1125  0119                     	;# 
  1126  011A                     	;# 
  1127  011B                     	;# 
  1128  011D                     	;# 
  1129  011D                     	;# 
  1130  018C                     	;# 
  1131  018E                     	;# 
  1132  0191                     	;# 
  1133  0191                     	;# 
  1134  0192                     	;# 
  1135  0193                     	;# 
  1136  0193                     	;# 
  1137  0193                     	;# 
  1138  0194                     	;# 
  1139  0195                     	;# 
  1140  0196                     	;# 
  1141  0199                     	;# 
  1142  019A                     	;# 
  1143  019B                     	;# 
  1144  019B                     	;# 
  1145  019B                     	;# 
  1146  019B                     	;# 
  1147  019C                     	;# 
  1148  019C                     	;# 
  1149  019D                     	;# 
  1150  019E                     	;# 
  1151  019F                     	;# 
  1152  020C                     	;# 
  1153  020E                     	;# 
  1154  0211                     	;# 
  1155  0211                     	;# 
  1156  0212                     	;# 
  1157  0212                     	;# 
  1158  0213                     	;# 
  1159  0213                     	;# 
  1160  0214                     	;# 
  1161  0214                     	;# 
  1162  0215                     	;# 
  1163  0215                     	;# 
  1164  0215                     	;# 
  1165  0216                     	;# 
  1166  0216                     	;# 
  1167  0217                     	;# 
  1168  0217                     	;# 
  1169  0291                     	;# 
  1170  0291                     	;# 
  1171  0292                     	;# 
  1172  0293                     	;# 
  1173  0294                     	;# 
  1174  0295                     	;# 
  1175  0295                     	;# 
  1176  0296                     	;# 
  1177  0391                     	;# 
  1178  0392                     	;# 
  1179  0393                     	;# 
  1180  039A                     	;# 
  1181  039C                     	;# 
  1182  039D                     	;# 
  1183  039E                     	;# 
  1184  039F                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196                           
  1197                           	psect	idataBANK0
  1198  00B7                     __pidataBANK0:	
  1199                           
  1200                           ;initializer for _tx_addr
  1201  00B7  340F               	retlw	15
  1202  00B8  340E               	retlw	14
  1203  00B9  340D               	retlw	13
  1204  00BA  340C               	retlw	12
  1205  00BB  340B               	retlw	11
  1206                           
  1207                           ;initializer for NRF_Check@F2228
  1208  00BC  34E1               	retlw	225
  1209  00BD  34E2               	retlw	226
  1210  00BE  34E3               	retlw	227
  1211  00BF  34E4               	retlw	228
  1212  00C0  3405               	retlw	5
  1213                           
  1214                           ;initializer for _TX_ADDRESS
  1215  00C1  340F               	retlw	15
  1216  00C2  340E               	retlw	14
  1217  00C3  340D               	retlw	13
  1218  00C4  340C               	retlw	12
  1219  00C5  340B               	retlw	11
  1220                           
  1221                           ;initializer for _rx_addr_0
  1222  00C6  340F               	retlw	15
  1223  00C7  340E               	retlw	14
  1224  00C8  340D               	retlw	13
  1225  00C9  340C               	retlw	12
  1226  00CA  340B               	retlw	11
  1227                           
  1228                           ;initializer for _RX_ADDRESS_P5
  1229  00CB  340E               	retlw	14
  1230  00CC  3410               	retlw	16
  1231  00CD  3409               	retlw	9
  1232  00CE  3408               	retlw	8
  1233  00CF  3407               	retlw	7
  1234                           
  1235                           ;initializer for _RX_ADDRESS_P4
  1236  00D0  340D               	retlw	13
  1237  00D1  3410               	retlw	16
  1238  00D2  3409               	retlw	9
  1239  00D3  3408               	retlw	8
  1240  00D4  3407               	retlw	7
  1241                           
  1242                           ;initializer for _RX_ADDRESS_P3
  1243  00D5  340C               	retlw	12
  1244  00D6  3410               	retlw	16
  1245  00D7  3409               	retlw	9
  1246  00D8  3408               	retlw	8
  1247  00D9  3407               	retlw	7
  1248                           
  1249                           ;initializer for _RX_ADDRESS_P2
  1250  00DA  340B               	retlw	11
  1251  00DB  3410               	retlw	16
  1252  00DC  3409               	retlw	9
  1253  00DD  3408               	retlw	8
  1254  00DE  3407               	retlw	7
  1255                           
  1256                           ;initializer for _RX_ADDRESS_P1
  1257  00DF  340A               	retlw	10
  1258  00E0  3410               	retlw	16
  1259  00E1  3409               	retlw	9
  1260  00E2  3408               	retlw	8
  1261  00E3  3407               	retlw	7
  1262                           
  1263                           ;initializer for _RX_ADDRESS_P0
  1264  00E4  340F               	retlw	15
  1265  00E5  340E               	retlw	14
  1266  00E6  340D               	retlw	13
  1267  00E7  340C               	retlw	12
  1268  00E8  340B               	retlw	11
  1269                           
  1270                           	psect	idataBANK1
  1271  0155                     __pidataBANK1:	
  1272                           
  1273                           ;initializer for _rx_addr_5
  1274  0155  3455               	retlw	85
  1275  0156  348E               	retlw	142
  1276  0157  3429               	retlw	41
  1277  0158  34F3               	retlw	243
  1278  0159  34A5               	retlw	165
  1279                           
  1280                           ;initializer for _rx_addr_4
  1281  015A  3488               	retlw	136
  1282  015B  348E               	retlw	142
  1283  015C  3429               	retlw	41
  1284  015D  34F3               	retlw	243
  1285  015E  34A5               	retlw	165
  1286                           
  1287                           ;initializer for _rx_addr_3
  1288  015F  3433               	retlw	51
  1289  0160  348E               	retlw	142
  1290  0161  3429               	retlw	41
  1291  0162  34F3               	retlw	243
  1292  0163  34A5               	retlw	165
  1293                           
  1294                           ;initializer for _rx_addr_2
  1295  0164  3499               	retlw	153
  1296  0165  348E               	retlw	142
  1297  0166  3429               	retlw	41
  1298  0167  34F3               	retlw	243
  1299  0168  34A5               	retlw	165
  1300                           
  1301                           ;initializer for _rx_addr_1
  1302  0169  3466               	retlw	102
  1303  016A  348E               	retlw	142
  1304  016B  3429               	retlw	41
  1305  016C  34F3               	retlw	243
  1306  016D  34A5               	retlw	165
  1307                           
  1308                           	psect	stringtext1
  1309  0262                     __pstringtext1:	
  1310  0262                     _pad_aux_off:	
  1311  0262  3403               	retlw	3
  1312  0263  3403               	retlw	3
  1313  0264                     __end_of_pad_aux_off:	
  1314                           
  1315                           	psect	stringtext2
  1316  0264                     __pstringtext2:	
  1317  0264                     _pad_aux_on:	
  1318  0264  3402               	retlw	2
  1319  0265  3402               	retlw	2
  1320  0266                     __end_of_pad_aux_on:	
  1321                           
  1322                           	psect	stringtext3
  1323  0266                     __pstringtext3:	
  1324  0266                     _pad_aux_ok:	
  1325  0266  3401               	retlw	1
  1326  0267  3401               	retlw	1
  1327  0268                     __end_of_pad_aux_ok:	
  1328                           
  1329                           	psect	stringtext4
  1330  0268                     __pstringtext4:	
  1331  0268                     _tx_pad_bed:	
  1332  0268  3498               	retlw	152
  1333  0269  3458               	retlw	88
  1334  026A                     __end_of_tx_pad_bed:	
  1335                           
  1336                           	psect	stringtext5
  1337  026A                     __pstringtext5:	
  1338  026A                     _tx_pad_potty:	
  1339  026A  3488               	retlw	136
  1340  026B  3468               	retlw	104
  1341  026C                     __end_of_tx_pad_potty:	
  1342                           
  1343                           	psect	stringtext6
  1344  026C                     __pstringtext6:	
  1345  026C                     _tx_pad_nci:	
  1346  026C  3486               	retlw	134
  1347  026D  3466               	retlw	102
  1348  026E                     __end_of_tx_pad_nci:	
  1349                           
  1350                           	psect	stringtext7
  1351  026E                     __pstringtext7:	
  1352  026E                     _tx_pad_chair:	
  1353  026E  3468               	retlw	104
  1354  026F  3486               	retlw	134
  1355  0270                     __end_of_tx_pad_chair:	
  1356                           
  1357                           	psect	stringtext8
  1358  0270                     __pstringtext8:	
  1359  0270                     _tx_pad_aux:	
  1360  0270  3466               	retlw	102
  1361  0271  3488               	retlw	136
  1362  0272                     __end_of_tx_pad_aux:	
  1363  000E                     _PORTC	set	14
  1364  000C                     _PORTA	set	12
  1365  005E                     _PEIE	set	94
  1366  0064                     _RA4	set	100
  1367  005B                     _IOCIE	set	91
  1368  0058                     _IOCIF	set	88
  1369  0073                     _RC3	set	115
  1370  008B                     _SSP1IF	set	139
  1371  0065                     _RA5	set	101
  1372  0062                     _RA2	set	98
  1373  0060                     _RA0	set	96
  1374  0099                     _OSCCON	set	153
  1375  009D                     _ADCON0	set	157
  1376  009E                     _ADCON1	set	158
  1377  008E                     _TRISC	set	142
  1378  008C                     _TRISA	set	140
  1379  0473                     _TRISC3	set	1139
  1380  0460                     _TRISA0	set	1120
  1381  0462                     _TRISA2	set	1122
  1382  0470                     _TRISC0	set	1136
  1383  0472                     _TRISC2	set	1138
  1384  0471                     _TRISC1	set	1137
  1385  0117                     _FVRCON	set	279
  1386  010E                     _LATC	set	270
  1387  010C                     _LATA	set	268
  1388  08EA                     _TXCKSEL	set	2282
  1389  0873                     _LATC3	set	2163
  1390  019A                     _TXREG	set	410
  1391  019B                     _SPBRGL	set	411
  1392  019C                     _SPBRGH	set	412
  1393  018E                     _ANSELC	set	398
  1394  018C                     _ANSELA	set	396
  1395  0CF1                     _TRMT	set	3313
  1396  0CEF                     _SPEN	set	3311
  1397  0CF2                     _BRGH	set	3314
  1398  0CFB                     _BRG16	set	3323
  1399  0CF4                     _SYNC	set	3316
  1400  0CF5                     _TXEN	set	3317
  1401  0215                     _SSP1CON1	set	533
  1402  0211                     _SSP1BUF	set	529
  1403  0214                     _SSP1STATbits	set	532
  1404  0214                     _SSP1STAT	set	532
  1405  1C9C                     _IOCAF4	set	7324
  1406                           
  1407                           ; #config settings
  1408  0000                     
  1409                           	psect	cinit
  1410  0012                     start_initialization:	
  1411  0012                     __initialization:	
  1412                           
  1413                           ; Initialize objects allocated to BANK0
  1414  0012  30B7               	movlw	low __pidataBANK0
  1415  0013  0084               	movwf	4
  1416  0014  3080               	movlw	(high __pidataBANK0)| (0+128)
  1417  0015  0085               	movwf	5
  1418  0016  3020               	movlw	low __pdataBANK0
  1419  0017  0086               	movwf	6
  1420  0018  3000               	movlw	high __pdataBANK0
  1421  0019  0087               	movwf	7
  1422  001A  3032               	movlw	50
  1423  001B  223C               	fcall	init_ram
  1424                           
  1425                           ; Initialize objects allocated to BANK1
  1426  001C  3055               	movlw	low __pidataBANK1
  1427  001D  0084               	movwf	4
  1428  001E  3081               	movlw	(high __pidataBANK1)| (0+128)
  1429  001F  0085               	movwf	5
  1430  0020  30A0               	movlw	low __pdataBANK1
  1431  0021  0086               	movwf	6
  1432  0022  3000               	movlw	high __pdataBANK1
  1433  0023  0087               	movwf	7
  1434  0024  3019               	movlw	25
  1435  0025  223C               	fcall	init_ram
  1436                           
  1437                           ; Clear objects allocated to BANK0
  1438  0026  01E5               	clrf	__pbssBANK0& (0+127)
  1439  0027  01E6               	clrf	(__pbssBANK0+1)& (0+127)
  1440  0028  01E7               	clrf	(__pbssBANK0+2)& (0+127)
  1441  0029  01E8               	clrf	(__pbssBANK0+3)& (0+127)
  1442  002A  01E9               	clrf	(__pbssBANK0+4)& (0+127)
  1443  002B  01EA               	clrf	(__pbssBANK0+5)& (0+127)
  1444  002C  01EB               	clrf	(__pbssBANK0+6)& (0+127)
  1445  002D  01EC               	clrf	(__pbssBANK0+7)& (0+127)
  1446  002E  01ED               	clrf	(__pbssBANK0+8)& (0+127)
  1447  002F  01EE               	clrf	(__pbssBANK0+9)& (0+127)
  1448  0030                     end_of_initialization:	
  1449                           ;End of C runtime variable initialization code
  1450                           
  1451  0030                     __end_of__initialization:	
  1452  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1453  0031  0020               	movlb	0
  1454  0032  2A2D               	ljmp	_main	;jump to C main() function
  1455                           
  1456                           	psect	bssBANK0
  1457  0065                     __pbssBANK0:	
  1458  0065                     NRF_Check@F2230:	
  1459  0065                     	ds	5
  1460  006A                     WirelessPad@F2247:	
  1461  006A                     	ds	2
  1462  006C                     _pad_aux_dat:	
  1463  006C                     	ds	2
  1464  006E                     _PAD_MODE:	
  1465  006E                     	ds	1
  1466                           
  1467                           	psect	dataBANK0
  1468  0020                     __pdataBANK0:	
  1469  0020                     _tx_addr:	
  1470  0020                     	ds	5
  1471  0025                     NRF_Check@F2228:	
  1472  0025                     	ds	5
  1473  002A                     _TX_ADDRESS:	
  1474  002A                     	ds	5
  1475  002F                     _rx_addr_0:	
  1476  002F                     	ds	5
  1477  0034                     _RX_ADDRESS_P5:	
  1478  0034                     	ds	5
  1479  0039                     _RX_ADDRESS_P4:	
  1480  0039                     	ds	5
  1481  003E                     _RX_ADDRESS_P3:	
  1482  003E                     	ds	5
  1483  0043                     _RX_ADDRESS_P2:	
  1484  0043                     	ds	5
  1485  0048                     _RX_ADDRESS_P1:	
  1486  0048                     	ds	5
  1487  004D                     _RX_ADDRESS_P0:	
  1488  004D                     	ds	5
  1489                           
  1490                           	psect	dataBANK1
  1491  00A0                     __pdataBANK1:	
  1492  00A0                     _rx_addr_5:	
  1493  00A0                     	ds	5
  1494  00A5                     _rx_addr_4:	
  1495  00A5                     	ds	5
  1496  00AA                     _rx_addr_3:	
  1497  00AA                     	ds	5
  1498  00AF                     _rx_addr_2:	
  1499  00AF                     	ds	5
  1500  00B4                     _rx_addr_1:	
  1501  00B4                     	ds	5
  1502                           
  1503                           	psect	inittext
  1504  023C                     init_ram:	
  1505  023C  00FE               	movwf	126
  1506  023D                     initloop:	
  1507  023D  0012               	moviw fsr0++
  1508  023E  001E               	movwi fsr1++
  1509  023F  0BFE               	decfsz	126,f
  1510  0240  2A3D               	goto	initloop
  1511  0241  3400               	retlw	0
  1512                           
  1513                           	psect	cstackCOMMON
  1514  0070                     __pcstackCOMMON:	
  1515  0070                     ?_NRF_Get_Status:	
  1516  0070                     ?_NRF_Read_RX_Pload:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_NRF_Flush_RX:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_PORTA_Init:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ??_PORTA_Init:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_PORTC_Init:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ??_PORTC_Init:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_FOSC_Init:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ??_FOSC_Init:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_LED_Init:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ??_LED_Init:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_EUSART_Init:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ??_EUSART_Init:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_WirelessPad:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_LEDx:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ??_LEDx:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561  0070                     ?_EUSART_Send:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ??_EUSART_Send:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567  0070                     ?_NRF_Port_Init:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     ??_NRF_Port_Init:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573  0070                     ?_NRF_On:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576  0070                     ??_NRF_On:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0070                     ?_NRF_SPI_Init:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582  0070                     ??_NRF_SPI_Init:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585  0070                     ?_NRF_SPI_RW:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588  0070                     ??_NRF_SPI_RW:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591  0070                     ?_NRF_Read_Reg:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594  0070                     ?_NRF_Check:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597  0070                     ?_NRF_RxPacket:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600  0070                     ?_NRF_Get_Current_Pipenum:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603  0070                     ?_NRF_Clear_IRQ:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606  0070                     ?_NRF_Rx_Receive:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609  0070                     ?_PORT_Init:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612  0070                     ??_PORT_Init:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615  0070                     ?_BEEP_Init:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618  0070                     ??_BEEP_Init:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621  0070                     ?_ADC_Init:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624  0070                     ??_ADC_Init:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627  0070                     ?_ISR:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630  0070                     ??_ISR:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633  0070                     ?_main:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636  0070                     ?_EUSART_Tx:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639  0070                     ??_EUSART_Tx:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642  0070                     NRF_SPI_RW@dat:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645  0070                     EUSART_Send@dat:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x0
  1650  0070                     	ds	1
  1651  0071                     ??_NRF_Read_Reg:	
  1652  0071                     ?_NRF_Write_Reg:	
  1653                           ; 1 bytes @ 0x1
  1654                           
  1655  0071                     ?_NRF_Read_Buf:	
  1656                           ; 1 bytes @ 0x1
  1657                           
  1658  0071                     ?_NRF_Write_Buf:	
  1659                           ; 1 bytes @ 0x1
  1660                           
  1661  0071                     NRF_Write_Reg@value:	
  1662                           ; 1 bytes @ 0x1
  1663                           
  1664  0071                     NRF_Read_Buf@pBuf:	
  1665                           ; 1 bytes @ 0x1
  1666                           
  1667  0071                     NRF_Write_Buf@pBuf:	
  1668                           ; 1 bytes @ 0x1
  1669                           
  1670  0071                     LEDx@num:	
  1671                           ; 1 bytes @ 0x1
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x1
  1675  0071                     	ds	1
  1676  0072                     ??_NRF_Write_Reg:	
  1677  0072                     NRF_Read_Reg@reg:	
  1678                           ; 1 bytes @ 0x2
  1679                           
  1680  0072                     NRF_Read_Buf@len:	
  1681                           ; 1 bytes @ 0x2
  1682                           
  1683  0072                     NRF_Write_Buf@len:	
  1684                           ; 1 bytes @ 0x2
  1685                           
  1686                           
  1687                           ; 1 bytes @ 0x2
  1688  0072                     	ds	1
  1689  0073                     ??_NRF_Read_Buf:	
  1690  0073                     ??_NRF_Write_Buf:	
  1691                           ; 1 bytes @ 0x3
  1692                           
  1693  0073                     NRF_Read_Reg@status:	
  1694                           ; 1 bytes @ 0x3
  1695                           
  1696  0073                     NRF_Write_Reg@reg:	
  1697                           ; 1 bytes @ 0x3
  1698                           
  1699                           
  1700                           ; 1 bytes @ 0x3
  1701  0073                     	ds	1
  1702  0074                     ??_NRF_Get_Status:	
  1703  0074                     ??_NRF_Get_Current_Pipenum:	
  1704                           ; 1 bytes @ 0x4
  1705                           
  1706  0074                     NRF_Write_Reg@status:	
  1707                           ; 1 bytes @ 0x4
  1708                           
  1709                           
  1710                           ; 1 bytes @ 0x4
  1711  0074                     	ds	1
  1712  0075                     ??_NRF_Flush_RX:	
  1713  0075                     ??_NRF_Clear_IRQ:	
  1714                           ; 1 bytes @ 0x5
  1715                           
  1716  0075                     ?_NRF_Rx_Set:	
  1717                           ; 1 bytes @ 0x5
  1718                           
  1719  0075                     ??_NRF_Rx_Receive:	
  1720                           ; 1 bytes @ 0x5
  1721                           
  1722  0075                     NRF_Write_Buf@reg:	
  1723                           ; 1 bytes @ 0x5
  1724                           
  1725  0075                     NRF_Rx_Set@pipe:	
  1726                           ; 1 bytes @ 0x5
  1727                           
  1728                           
  1729                           ; 1 bytes @ 0x5
  1730  0075                     	ds	1
  1731  0076                     ??_NRF_Rx_Set:	
  1732  0076                     NRF_Read_Buf@reg:	
  1733                           ; 1 bytes @ 0x6
  1734                           
  1735  0076                     NRF_Write_Buf@i:	
  1736                           ; 1 bytes @ 0x6
  1737                           
  1738                           
  1739                           ; 1 bytes @ 0x6
  1740  0076                     	ds	1
  1741  0077                     ?_NRF_Rx_Set_P0:	
  1742  0077                     NRF_Read_Buf@i:	
  1743                           ; 1 bytes @ 0x7
  1744                           
  1745  0077                     NRF_Rx_Set@ack:	
  1746                           ; 1 bytes @ 0x7
  1747                           
  1748  0077                     NRF_Rx_Set_P0@buf_len:	
  1749                           ; 1 bytes @ 0x7
  1750                           
  1751                           
  1752                           ; 1 bytes @ 0x7
  1753  0077                     	ds	1
  1754  0078                     ??_NRF_Read_RX_Pload:	
  1755  0078                     ??_NRF_Check:	
  1756                           ; 1 bytes @ 0x8
  1757                           
  1758  0078                     ??_NRF_Rx_Set_P0:	
  1759                           ; 1 bytes @ 0x8
  1760                           
  1761  0078                     NRF_Clear_IRQ@temp:	
  1762                           ; 1 bytes @ 0x8
  1763                           
  1764                           
  1765                           ; 1 bytes @ 0x8
  1766  0078                     	ds	2
  1767  007A                     NRF_Read_RX_Pload@width:	
  1768  007A                     NRF_Rx_Set_P0@addr:	
  1769                           ; 1 bytes @ 0xA
  1770                           
  1771                           
  1772                           ; 1 bytes @ 0xA
  1773  007A                     	ds	1
  1774  007B                     NRF_Read_RX_Pload@pBuf:	
  1775                           
  1776                           ; 1 bytes @ 0xB
  1777  007B                     	ds	1
  1778  007C                     NRF_Read_RX_Pload@pipe:	
  1779                           
  1780                           ; 1 bytes @ 0xC
  1781  007C                     	ds	1
  1782  007D                     ??_NRF_RxPacket:	
  1783                           
  1784                           ; 1 bytes @ 0xD
  1785  007D                     	ds	1
  1786  007E                     ??_main:	
  1787                           
  1788                           	psect	cstackBANK0
  1789  0052                     __pcstackBANK0:	
  1790                           ; 1 bytes @ 0xE
  1791                           
  1792  0052                     NRF_RxPacket@rxbuf:	
  1793  0052                     NRF_Check@tuf:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796                           
  1797                           ; 5 bytes @ 0x0
  1798  0052                     	ds	1
  1799  0053                     NRF_RxPacket@status:	
  1800                           
  1801                           ; 1 bytes @ 0x1
  1802  0053                     	ds	4
  1803  0057                     NRF_Check@buf:	
  1804                           
  1805                           ; 5 bytes @ 0x5
  1806  0057                     	ds	5
  1807  005C                     NRF_Check@i:	
  1808                           
  1809                           ; 1 bytes @ 0xA
  1810  005C                     	ds	1
  1811  005D                     ??_WirelessPad:	
  1812                           
  1813                           ; 1 bytes @ 0xB
  1814  005D                     	ds	6
  1815  0063                     WirelessPad@rxbuf:	
  1816                           
  1817                           ; 2 bytes @ 0x11
  1818  0063                     	ds	2
  1819                           
  1820                           	psect	maintext
  1821  022D                     __pmaintext:	
  1822 ;;
  1823 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1824 ;;
  1825 ;; *************** function _main *****************
  1826 ;; Defined at:
  1827 ;;		line 157 in file "main.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : B1F/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1
  1841 ;;      Params:         0       0       0
  1842 ;;      Locals:         0       0       0
  1843 ;;      Temps:          0       0       0
  1844 ;;      Totals:         0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels required when called:    8
  1847 ;; This function calls:
  1848 ;;		_ADC_Init
  1849 ;;		_BEEP_Init
  1850 ;;		_EUSART_Init
  1851 ;;		_FOSC_Init
  1852 ;;		_LED_Init
  1853 ;;		_PORT_Init
  1854 ;;		_WirelessPad
  1855 ;; This function is called by:
  1856 ;;		Startup code after reset
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           
  1861                           ;psect for function _main
  1862  022D                     _main:	
  1863                           
  1864                           ;main.c: 159:     FOSC_Init();
  1865                           
  1866                           ;incstack = 0
  1867                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1868  022D  2258               	fcall	_FOSC_Init
  1869                           
  1870                           ;main.c: 161:     PORT_Init();
  1871  022E  225F               	fcall	_PORT_Init
  1872                           
  1873                           ;main.c: 163:     LED_Init();
  1874  022F  2254               	fcall	_LED_Init
  1875                           
  1876                           ;main.c: 165:     BEEP_Init();
  1877  0230  2247               	fcall	_BEEP_Init
  1878                           
  1879                           ;main.c: 167:     ADC_Init();
  1880  0231  2224               	fcall	_ADC_Init
  1881                           
  1882                           ;main.c: 169:     EUSART_Init();
  1883  0232  2208               	fcall	_EUSART_Init
  1884                           
  1885                           ;main.c: 173:     WirelessPad();
  1886  0233  207C               	fcall	_WirelessPad
  1887  0234                     l410:	
  1888                           ;main.c: 177:     while(1);
  1889                           
  1890  0234  2A34               	goto	l410
  1891  0235                     __end_of_main:	
  1892                           
  1893                           	psect	text1
  1894  007C                     __ptext1:	
  1895 ;; *************** function _WirelessPad *****************
  1896 ;; Defined at:
  1897 ;;		line 180 in file "main.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  i               2    0        unsigned int 
  1902 ;;  adc             1    0        unsigned char 
  1903 ;;  rxbuf           2   17[BANK0 ] unsigned char [2]
  1904 ;;  ledx            1    0        unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 1F/3
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1
  1914 ;;      Params:         0       0       0
  1915 ;;      Locals:         0       6       0
  1916 ;;      Temps:          0       2       0
  1917 ;;      Totals:         0       8       0
  1918 ;;Total ram usage:        8 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    7
  1921 ;; This function calls:
  1922 ;;		_EUSART_Send
  1923 ;;		_LEDx
  1924 ;;		_NRF_Check
  1925 ;;		_NRF_Clear_IRQ
  1926 ;;		_NRF_On
  1927 ;;		_NRF_Port_Init
  1928 ;;		_NRF_RxPacket
  1929 ;;		_NRF_Rx_Receive
  1930 ;;		_NRF_Rx_Set
  1931 ;;		_NRF_Rx_Set_P0
  1932 ;;		_NRF_SPI_Init
  1933 ;; This function is called by:
  1934 ;;		_main
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _WirelessPad
  1940  007C                     _WirelessPad:	
  1941                           
  1942                           ;main.c: 182:     unsigned char ledx;;main.c: 183:     unsigned char rxbuf[2] ={0, 0};
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _WirelessPad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1946  007C  0020               	movlb	0	; select bank0
  1947  007D  01E3               	clrf	WirelessPad@rxbuf
  1948  007E  01E4               	clrf	WirelessPad@rxbuf+1
  1949                           
  1950                           ;main.c: 187:     NRF_On();
  1951  007F  2272               	fcall	_NRF_On
  1952                           
  1953                           ;main.c: 188:     NRF_Port_Init();
  1954  0080  21FE               	fcall	_NRF_Port_Init
  1955                           
  1956                           ;main.c: 189:     NRF_SPI_Init();
  1957  0081  21F4               	fcall	_NRF_SPI_Init
  1958                           
  1959                           ;main.c: 191:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1960  0082  3003               	movlw	3
  1961  0083  0020               	movlb	0	; select bank0
  1962  0084  00DE               	movwf	??_WirelessPad+1
  1963  0085  308A               	movlw	138
  1964  0086  00DD               	movwf	??_WirelessPad
  1965  0087  3055               	movlw	85
  1966  0088                     u337:	
  1967  0088  0B89               	decfsz	9,f
  1968  0089  2888               	goto	u337
  1969  008A  0BDD               	decfsz	??_WirelessPad,f
  1970  008B  2888               	goto	u337
  1971  008C  0BDE               	decfsz	??_WirelessPad+1,f
  1972  008D  2888               	goto	u337
  1973  008E  3200               	nop2
  1974                           
  1975                           ;main.c: 193:     if(NRF_Check()) {
  1976  008F  2033               	fcall	_NRF_Check
  1977  0090  3A00               	xorlw	0
  1978  0091  1903               	skipnz
  1979  0092  2896               	goto	l1569
  1980  0093                     l1567:	
  1981                           
  1982                           ;main.c: 195:             LEDx(1);
  1983  0093  3001               	movlw	1
  1984  0094  216E               	fcall	_LEDx
  1985  0095  2893               	goto	l1567
  1986  0096                     l1569:	
  1987                           
  1988                           ;main.c: 199:     NRF_Rx_Set(0x00, 0x01);
  1989  0096  01F5               	clrf	NRF_Rx_Set@pipe
  1990  0097  0AF5               	incf	NRF_Rx_Set@pipe,f
  1991  0098  3000               	movlw	0
  1992  0099  2105               	fcall	_NRF_Rx_Set
  1993                           
  1994                           ;main.c: 200:     NRF_Rx_Set_P0(rx_addr_0, 1);
  1995  009A  01F7               	clrf	NRF_Rx_Set_P0@buf_len
  1996  009B  0AF7               	incf	NRF_Rx_Set_P0@buf_len,f
  1997  009C  302F               	movlw	(low (_rx_addr_0| 0))& (0+255)
  1998  009D  219E               	fcall	_NRF_Rx_Set_P0
  1999                           
  2000                           ;main.c: 201:     NRF_Rx_Receive();
  2001  009E  21C1               	fcall	_NRF_Rx_Receive
  2002  009F                     l1575:	
  2003                           
  2004                           ;main.c: 208:         rxbuf[0] = 0;
  2005  009F  0020               	movlb	0	; select bank0
  2006  00A0  01E3               	clrf	WirelessPad@rxbuf
  2007  00A1  3063               	movlw	(low (WirelessPad@rxbuf| 0))& (0+255)
  2008  00A2  213B               	fcall	_NRF_RxPacket
  2009                           
  2010                           ;main.c: 210:         NRF_Clear_IRQ();
  2011  00A3  21B1               	fcall	_NRF_Clear_IRQ
  2012                           
  2013                           ;main.c: 212:         LEDx(1);
  2014  00A4  3001               	movlw	1
  2015  00A5  216E               	fcall	_LEDx
  2016                           
  2017                           ;main.c: 214:         EUSART_Send(rxbuf[0]);
  2018  00A6  0020               	movlb	0	; select bank0
  2019  00A7  0863               	movf	WirelessPad@rxbuf,w
  2020  00A8  2235               	fcall	_EUSART_Send
  2021                           
  2022                           ;main.c: 241:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  2023  00A9  3006               	movlw	6
  2024  00AA  0020               	movlb	0	; select bank0
  2025  00AB  00DE               	movwf	??_WirelessPad+1
  2026  00AC  3013               	movlw	19
  2027  00AD  00DD               	movwf	??_WirelessPad
  2028  00AE  30AD               	movlw	173
  2029  00AF                     u347:	
  2030  00AF  0B89               	decfsz	9,f
  2031  00B0  28AF               	goto	u347
  2032  00B1  0BDD               	decfsz	??_WirelessPad,f
  2033  00B2  28AF               	goto	u347
  2034  00B3  0BDE               	decfsz	??_WirelessPad+1,f
  2035  00B4  28AF               	goto	u347
  2036  00B5  3200               	nop2
  2037  00B6  289F               	goto	l1575
  2038  00B7                     __end_of_WirelessPad:	
  2039                           
  2040                           	psect	text2
  2041  01F4                     __ptext2:	
  2042 ;; *************** function _NRF_SPI_Init *****************
  2043 ;; Defined at:
  2044 ;;		line 70 in file "../library/nrf24l01.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;		None
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2
  2053 ;; Tracked objects:
  2054 ;;		On entry : 1F/0
  2055 ;;		On exit  : 1F/4
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1
  2058 ;;      Params:         0       0       0
  2059 ;;      Locals:         0       0       0
  2060 ;;      Temps:          0       0       0
  2061 ;;      Totals:         0       0       0
  2062 ;;Total ram usage:        0 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_WirelessPad
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _NRF_SPI_Init
  2074  01F4                     _NRF_SPI_Init:	
  2075                           
  2076                           ;../library/nrf24l01.c: 71:     SSP1STAT = 0x00;
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in _NRF_SPI_Init: [wreg+status,2]
  2080  01F4  0024               	movlb	4	; select bank4
  2081  01F5  0194               	clrf	20	;volatile
  2082                           
  2083                           ;../library/nrf24l01.c: 72:     SSP1STATbits.CKE = 1;
  2084  01F6  1714               	bsf	20,6	;volatile
  2085                           
  2086                           ;../library/nrf24l01.c: 74:     SSP1BUF = 0;
  2087  01F7  0191               	clrf	17	;volatile
  2088                           
  2089                           ;../library/nrf24l01.c: 75:     SSP1IF = 0;
  2090  01F8  0020               	movlb	0	; select bank0
  2091  01F9  1191               	bcf	17,3	;volatile
  2092                           
  2093                           ;../library/nrf24l01.c: 76:     SSP1CON1 = 0x20;
  2094  01FA  3020               	movlw	32
  2095  01FB  0024               	movlb	4	; select bank4
  2096  01FC  0095               	movwf	21	;volatile
  2097  01FD  0008               	return
  2098  01FE                     __end_of_NRF_SPI_Init:	
  2099                           
  2100                           	psect	text3
  2101  019E                     __ptext3:	
  2102 ;; *************** function _NRF_Rx_Set_P0 *****************
  2103 ;; Defined at:
  2104 ;;		line 426 in file "../library/nrf24l01.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  addr            1    wreg     PTR unsigned char 
  2107 ;;		 -> rx_addr_0(5), 
  2108 ;;  buf_len         1    7[COMMON] unsigned char 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  addr            1   10[COMMON] PTR unsigned char 
  2111 ;;		 -> rx_addr_0(5), 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 1F/0
  2118 ;;		On exit  : 1F/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1
  2121 ;;      Params:         1       0       0
  2122 ;;      Locals:         1       0       0
  2123 ;;      Temps:          2       0       0
  2124 ;;      Totals:         4       0       0
  2125 ;;Total ram usage:        4 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    3
  2128 ;; This function calls:
  2129 ;;		_NRF_Write_Buf
  2130 ;;		_NRF_Write_Reg
  2131 ;; This function is called by:
  2132 ;;		_WirelessPad
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           
  2137                           ;psect for function _NRF_Rx_Set_P0
  2138  019E                     _NRF_Rx_Set_P0:	
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _NRF_Rx_Set_P0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2142                           ;NRF_Rx_Set_P0@addr stored from wreg
  2143  019E  00FA               	movwf	NRF_Rx_Set_P0@addr
  2144                           
  2145                           ;../library/nrf24l01.c: 427:     RA0 = 0;
  2146  019F  100C               	bcf	12,0	;volatile
  2147                           
  2148                           ;../library/nrf24l01.c: 428:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  2149  01A0  087A               	movf	NRF_Rx_Set_P0@addr,w
  2150  01A1  00F8               	movwf	??_NRF_Rx_Set_P0
  2151  01A2  0878               	movf	??_NRF_Rx_Set_P0,w
  2152  01A3  00F1               	movwf	NRF_Write_Buf@pBuf
  2153  01A4  3005               	movlw	5
  2154  01A5  00F9               	movwf	??_NRF_Rx_Set_P0+1
  2155  01A6  0879               	movf	??_NRF_Rx_Set_P0+1,w
  2156  01A7  00F2               	movwf	NRF_Write_Buf@len
  2157  01A8  302A               	movlw	42
  2158  01A9  2120               	fcall	_NRF_Write_Buf
  2159                           
  2160                           ;../library/nrf24l01.c: 429:     NRF_Write_Reg(0x20 + 0x11, buf_len);
  2161  01AA  0877               	movf	NRF_Rx_Set_P0@buf_len,w
  2162  01AB  00F8               	movwf	??_NRF_Rx_Set_P0
  2163  01AC  0878               	movf	??_NRF_Rx_Set_P0,w
  2164  01AD  00F1               	movwf	NRF_Write_Reg@value
  2165  01AE  3031               	movlw	49
  2166  01AF  21DB               	fcall	_NRF_Write_Reg
  2167  01B0  0008               	return
  2168  01B1                     __end_of_NRF_Rx_Set_P0:	
  2169                           
  2170                           	psect	text4
  2171  0105                     __ptext4:	
  2172 ;; *************** function _NRF_Rx_Set *****************
  2173 ;; Defined at:
  2174 ;;		line 417 in file "../library/nrf24l01.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  ack             1    wreg     unsigned char 
  2177 ;;  pipe            1    5[COMMON] unsigned char 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  ack             1    7[COMMON] unsigned char 
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 1F/0
  2186 ;;		On exit  : 1F/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1
  2189 ;;      Params:         1       0       0
  2190 ;;      Locals:         1       0       0
  2191 ;;      Temps:          1       0       0
  2192 ;;      Totals:         3       0       0
  2193 ;;Total ram usage:        3 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    3
  2196 ;; This function calls:
  2197 ;;		_NRF_Write_Reg
  2198 ;; This function is called by:
  2199 ;;		_WirelessPad
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           
  2204                           ;psect for function _NRF_Rx_Set
  2205  0105                     _NRF_Rx_Set:	
  2206                           
  2207                           ;incstack = 0
  2208                           ; Regs used in _NRF_Rx_Set: [wreg+status,2+status,0+pclath+cstack]
  2209                           ;NRF_Rx_Set@ack stored from wreg
  2210  0105  00F7               	movwf	NRF_Rx_Set@ack
  2211                           
  2212                           ;../library/nrf24l01.c: 418:     RA0 = 0;
  2213  0106  100C               	bcf	12,0	;volatile
  2214                           
  2215                           ;../library/nrf24l01.c: 419:     NRF_Write_Reg(0x20 + 0x01, ack);
  2216  0107  0877               	movf	NRF_Rx_Set@ack,w
  2217  0108  00F6               	movwf	??_NRF_Rx_Set
  2218  0109  0876               	movf	??_NRF_Rx_Set,w
  2219  010A  00F1               	movwf	NRF_Write_Reg@value
  2220  010B  3021               	movlw	33
  2221  010C  21DB               	fcall	_NRF_Write_Reg
  2222                           
  2223                           ;../library/nrf24l01.c: 420:     NRF_Write_Reg(0x20 + 0x02, pipe);
  2224  010D  0875               	movf	NRF_Rx_Set@pipe,w
  2225  010E  00F6               	movwf	??_NRF_Rx_Set
  2226  010F  0876               	movf	??_NRF_Rx_Set,w
  2227  0110  00F1               	movwf	NRF_Write_Reg@value
  2228  0111  3022               	movlw	34
  2229  0112  21DB               	fcall	_NRF_Write_Reg
  2230                           
  2231                           ;../library/nrf24l01.c: 422:     NRF_Write_Reg(0x20 + 0x05, 40);
  2232  0113  3028               	movlw	40
  2233  0114  00F6               	movwf	??_NRF_Rx_Set
  2234  0115  0876               	movf	??_NRF_Rx_Set,w
  2235  0116  00F1               	movwf	NRF_Write_Reg@value
  2236  0117  3025               	movlw	37
  2237  0118  21DB               	fcall	_NRF_Write_Reg
  2238                           
  2239                           ;../library/nrf24l01.c: 423:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  2240  0119  300F               	movlw	15
  2241  011A  00F6               	movwf	??_NRF_Rx_Set
  2242  011B  0876               	movf	??_NRF_Rx_Set,w
  2243  011C  00F1               	movwf	NRF_Write_Reg@value
  2244  011D  3026               	movlw	38
  2245  011E  21DB               	fcall	_NRF_Write_Reg
  2246  011F  0008               	return
  2247  0120                     __end_of_NRF_Rx_Set:	
  2248                           
  2249                           	psect	text5
  2250  01C1                     __ptext5:	
  2251 ;; *************** function _NRF_Rx_Receive *****************
  2252 ;; Defined at:
  2253 ;;		line 456 in file "../library/nrf24l01.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 1F/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       0       0
  2269 ;;      Temps:          1       0       0
  2270 ;;      Totals:         1       0       0
  2271 ;;Total ram usage:        1 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    3
  2274 ;; This function calls:
  2275 ;;		_NRF_Write_Reg
  2276 ;; This function is called by:
  2277 ;;		_WirelessPad
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _NRF_Rx_Receive
  2283  01C1                     _NRF_Rx_Receive:	
  2284                           
  2285                           ;../library/nrf24l01.c: 457:     RA0 = 0;
  2286                           
  2287                           ;incstack = 0
  2288                           ; Regs used in _NRF_Rx_Receive: [wreg+status,2+status,0+pclath+cstack]
  2289  01C1  100C               	bcf	12,0	;volatile
  2290                           
  2291                           ;../library/nrf24l01.c: 458:     NRF_Write_Reg(0x20 + 0x00, 0x0f);
  2292  01C2  300F               	movlw	15
  2293  01C3  00F5               	movwf	??_NRF_Rx_Receive
  2294  01C4  0875               	movf	??_NRF_Rx_Receive,w
  2295  01C5  00F1               	movwf	NRF_Write_Reg@value
  2296  01C6  3020               	movlw	32
  2297  01C7  21DB               	fcall	_NRF_Write_Reg
  2298                           
  2299                           ;../library/nrf24l01.c: 459:     RA0 = 1;
  2300  01C8  140C               	bsf	12,0	;volatile
  2301                           
  2302                           ;../library/nrf24l01.c: 460:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  2303  01C9  3042               	movlw	66
  2304  01CA                     u357:	
  2305  01CA  0B89               	decfsz	9,f
  2306  01CB  29CA               	goto	u357
  2307  01CC  3200               	nop2
  2308  01CD  0008               	return
  2309  01CE                     __end_of_NRF_Rx_Receive:	
  2310                           
  2311                           	psect	text6
  2312  013B                     __ptext6:	
  2313 ;; *************** function _NRF_RxPacket *****************
  2314 ;; Defined at:
  2315 ;;		line 264 in file "../library/nrf24l01.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  rxbuf           1    wreg     PTR unsigned char 
  2318 ;;		 -> WirelessPad@rxbuf(2), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  rxbuf           1    0[BANK0 ] PTR unsigned char 
  2321 ;;		 -> WirelessPad@rxbuf(2), 
  2322 ;;  status          1    1[BANK0 ] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      unsigned char 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 1F/0
  2329 ;;		On exit  : 1F/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1
  2332 ;;      Params:         0       0       0
  2333 ;;      Locals:         0       2       0
  2334 ;;      Temps:          1       0       0
  2335 ;;      Totals:         1       2       0
  2336 ;;Total ram usage:        3 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    6
  2339 ;; This function calls:
  2340 ;;		_NRF_Flush_RX
  2341 ;;		_NRF_Get_Status
  2342 ;;		_NRF_Read_RX_Pload
  2343 ;;		_NRF_Write_Reg
  2344 ;; This function is called by:
  2345 ;;		_WirelessPad
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _NRF_RxPacket
  2351  013B                     _NRF_RxPacket:	
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _NRF_RxPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2355                           ;NRF_RxPacket@rxbuf stored from wreg
  2356  013B  00D2               	movwf	NRF_RxPacket@rxbuf
  2357                           
  2358                           ;../library/nrf24l01.c: 268:     if(NRF_Get_Status() & 0X40) {
  2359  013C  225C               	fcall	_NRF_Get_Status
  2360  013D  3940               	andlw	64
  2361  013E  1903               	btfsc	3,2
  2362  013F  2952               	goto	l1505
  2363                           
  2364                           ;../library/nrf24l01.c: 269:         status = NRF_Read_RX_Pload(rxbuf);
  2365  0140  0852               	movf	NRF_RxPacket@rxbuf,w
  2366  0141  2187               	fcall	_NRF_Read_RX_Pload
  2367  0142  00FD               	movwf	??_NRF_RxPacket
  2368  0143  087D               	movf	??_NRF_RxPacket,w
  2369  0144  00D3               	movwf	NRF_RxPacket@status
  2370                           
  2371                           ;../library/nrf24l01.c: 270:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  2372  0145  30FF               	movlw	255
  2373  0146  00FD               	movwf	??_NRF_RxPacket
  2374  0147  087D               	movf	??_NRF_RxPacket,w
  2375  0148  00F1               	movwf	NRF_Write_Reg@value
  2376  0149  3027               	movlw	39
  2377  014A  21DB               	fcall	_NRF_Write_Reg
  2378                           
  2379                           ;../library/nrf24l01.c: 271:         NRF_Flush_RX();
  2380  014B  2250               	fcall	_NRF_Flush_RX
  2381                           
  2382                           ;../library/nrf24l01.c: 272:         status = status + 1;
  2383  014C  0853               	movf	NRF_RxPacket@status,w
  2384  014D  3E01               	addlw	1
  2385  014E  00FD               	movwf	??_NRF_RxPacket
  2386  014F  087D               	movf	??_NRF_RxPacket,w
  2387  0150  00D3               	movwf	NRF_RxPacket@status
  2388                           
  2389                           ;../library/nrf24l01.c: 273:     }else {
  2390  0151  2953               	goto	l1507
  2391  0152                     l1505:	
  2392                           
  2393                           ;../library/nrf24l01.c: 274:         status = 0;
  2394  0152  01D3               	clrf	NRF_RxPacket@status
  2395  0153                     l1507:	
  2396                           
  2397                           ;../library/nrf24l01.c: 277:  return status;
  2398  0153  0853               	movf	NRF_RxPacket@status,w
  2399  0154  0008               	return
  2400  0155                     __end_of_NRF_RxPacket:	
  2401                           
  2402                           	psect	text7
  2403  0187                     __ptext7:	
  2404 ;; *************** function _NRF_Read_RX_Pload *****************
  2405 ;; Defined at:
  2406 ;;		line 293 in file "../library/nrf24l01.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  pBuf            1    wreg     PTR unsigned char 
  2409 ;;		 -> WirelessPad@rxbuf(2), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  pBuf            1   11[COMMON] PTR unsigned char 
  2412 ;;		 -> WirelessPad@rxbuf(2), 
  2413 ;;  pipe            1   12[COMMON] unsigned char 
  2414 ;;  width           1   10[COMMON] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 1F/0
  2421 ;;		On exit  : 1F/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1
  2424 ;;      Params:         0       0       0
  2425 ;;      Locals:         3       0       0
  2426 ;;      Temps:          2       0       0
  2427 ;;      Totals:         5       0       0
  2428 ;;Total ram usage:        5 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    5
  2431 ;; This function calls:
  2432 ;;		_NRF_Get_Current_Pipenum
  2433 ;;		_NRF_Read_Buf
  2434 ;;		_NRF_Read_Reg
  2435 ;; This function is called by:
  2436 ;;		_NRF_RxPacket
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _NRF_Read_RX_Pload
  2442  0187                     _NRF_Read_RX_Pload:	
  2443                           
  2444                           ;incstack = 0
  2445                           ; Regs used in _NRF_Read_RX_Pload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2446                           ;NRF_Read_RX_Pload@pBuf stored from wreg
  2447  0187  00FB               	movwf	NRF_Read_RX_Pload@pBuf
  2448                           
  2449                           ;../library/nrf24l01.c: 294:     unsigned char pipe, width;;../library/nrf24l01.c: 295: 
      +                              pipe = NRF_Get_Current_Pipenum();
  2450  0188  224C               	fcall	_NRF_Get_Current_Pipenum
  2451  0189  00F8               	movwf	??_NRF_Read_RX_Pload
  2452  018A  0878               	movf	??_NRF_Read_RX_Pload,w
  2453  018B  00FC               	movwf	NRF_Read_RX_Pload@pipe
  2454                           
  2455                           ;../library/nrf24l01.c: 296:     width = NRF_Read_Reg(0x11 + pipe);
  2456  018C  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2457  018D  3E11               	addlw	17
  2458  018E  21CE               	fcall	_NRF_Read_Reg
  2459  018F  00F8               	movwf	??_NRF_Read_RX_Pload
  2460  0190  0878               	movf	??_NRF_Read_RX_Pload,w
  2461  0191  00FA               	movwf	NRF_Read_RX_Pload@width
  2462                           
  2463                           ;../library/nrf24l01.c: 297:     NRF_Read_Buf(0x61, pBuf, width);
  2464  0192  087B               	movf	NRF_Read_RX_Pload@pBuf,w
  2465  0193  00F8               	movwf	??_NRF_Read_RX_Pload
  2466  0194  0878               	movf	??_NRF_Read_RX_Pload,w
  2467  0195  00F1               	movwf	NRF_Read_Buf@pBuf
  2468  0196  087A               	movf	NRF_Read_RX_Pload@width,w
  2469  0197  00F9               	movwf	??_NRF_Read_RX_Pload+1
  2470  0198  0879               	movf	??_NRF_Read_RX_Pload+1,w
  2471  0199  00F2               	movwf	NRF_Read_Buf@len
  2472  019A  3061               	movlw	97
  2473  019B  20E9               	fcall	_NRF_Read_Buf
  2474                           
  2475                           ;../library/nrf24l01.c: 298:     return pipe;
  2476  019C  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2477  019D  0008               	return
  2478  019E                     __end_of_NRF_Read_RX_Pload:	
  2479                           
  2480                           	psect	text8
  2481  024C                     __ptext8:	
  2482 ;; *************** function _NRF_Get_Current_Pipenum *****************
  2483 ;; Defined at:
  2484 ;;		line 284 in file "../library/nrf24l01.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;		None
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      unsigned char 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0, pclath, cstack
  2493 ;; Tracked objects:
  2494 ;;		On entry : 1F/0
  2495 ;;		On exit  : 1F/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1
  2498 ;;      Params:         0       0       0
  2499 ;;      Locals:         0       0       0
  2500 ;;      Temps:          0       0       0
  2501 ;;      Totals:         0       0       0
  2502 ;;Total ram usage:        0 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; Hardware stack levels required when called:    4
  2505 ;; This function calls:
  2506 ;;		_NRF_Get_Status
  2507 ;; This function is called by:
  2508 ;;		_NRF_Read_RX_Pload
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function _NRF_Get_Current_Pipenum
  2514  024C                     _NRF_Get_Current_Pipenum:	
  2515                           
  2516                           ;../library/nrf24l01.c: 285:   return ((NRF_Get_Status() & 0x0E) >> 1);
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _NRF_Get_Current_Pipenum: [wreg+status,2+status,0+pclath+cstack]
  2520  024C  225C               	fcall	_NRF_Get_Status
  2521  024D  3689               	lsrf	9,f
  2522  024E  3907               	andlw	7
  2523  024F  0008               	return
  2524  0250                     __end_of_NRF_Get_Current_Pipenum:	
  2525                           
  2526                           	psect	text9
  2527  025C                     __ptext9:	
  2528 ;; *************** function _NRF_Get_Status *****************
  2529 ;; Defined at:
  2530 ;;		line 304 in file "../library/nrf24l01.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      unsigned char 
  2537 ;; Registers used:
  2538 ;;		wreg, status,2, status,0, pclath, cstack
  2539 ;; Tracked objects:
  2540 ;;		On entry : 1F/0
  2541 ;;		On exit  : 1F/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1
  2544 ;;      Params:         0       0       0
  2545 ;;      Locals:         0       0       0
  2546 ;;      Temps:          0       0       0
  2547 ;;      Totals:         0       0       0
  2548 ;;Total ram usage:        0 bytes
  2549 ;; Hardware stack levels used:    1
  2550 ;; Hardware stack levels required when called:    3
  2551 ;; This function calls:
  2552 ;;		_NRF_Read_Reg
  2553 ;; This function is called by:
  2554 ;;		_NRF_RxPacket
  2555 ;;		_NRF_Get_Current_Pipenum
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function _NRF_Get_Status
  2561  025C                     _NRF_Get_Status:	
  2562                           
  2563                           ;../library/nrf24l01.c: 305:     return NRF_Read_Reg(0x07);
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _NRF_Get_Status: [wreg+status,2+status,0+pclath+cstack]
  2567  025C  3007               	movlw	7
  2568  025D  21CE               	fcall	_NRF_Read_Reg
  2569  025E  0008               	return
  2570  025F                     __end_of_NRF_Get_Status:	
  2571                           
  2572                           	psect	text10
  2573  01CE                     __ptext10:	
  2574 ;; *************** function _NRF_Read_Reg *****************
  2575 ;; Defined at:
  2576 ;;		line 87 in file "../library/nrf24l01.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  reg             1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  reg             1    2[COMMON] unsigned char 
  2581 ;;  status          1    3[COMMON] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      unsigned char 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0, pclath, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 1F/0
  2588 ;;		On exit  : 1F/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1
  2591 ;;      Params:         0       0       0
  2592 ;;      Locals:         2       0       0
  2593 ;;      Temps:          1       0       0
  2594 ;;      Totals:         3       0       0
  2595 ;;Total ram usage:        3 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    2
  2598 ;; This function calls:
  2599 ;;		_NRF_SPI_RW
  2600 ;; This function is called by:
  2601 ;;		_NRF_Read_RX_Pload
  2602 ;;		_NRF_Get_Status
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _NRF_Read_Reg
  2608  01CE                     _NRF_Read_Reg:	
  2609                           
  2610                           ;incstack = 0
  2611                           ; Regs used in _NRF_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  2612                           ;NRF_Read_Reg@reg stored from wreg
  2613  01CE  00F2               	movwf	NRF_Read_Reg@reg
  2614                           
  2615                           ;../library/nrf24l01.c: 88:  unsigned char status;;../library/nrf24l01.c: 89:    RA2 = 0
      +                          ;
  2616  01CF  110C               	bcf	12,2	;volatile
  2617                           
  2618                           ;../library/nrf24l01.c: 90:    NRF_SPI_RW(reg);
  2619  01D0  0872               	movf	NRF_Read_Reg@reg,w
  2620  01D1  21E8               	fcall	_NRF_SPI_RW
  2621                           
  2622                           ;../library/nrf24l01.c: 91:    status = NRF_SPI_RW(0xFF);
  2623  01D2  30FF               	movlw	255
  2624  01D3  21E8               	fcall	_NRF_SPI_RW
  2625  01D4  00F1               	movwf	??_NRF_Read_Reg
  2626  01D5  0871               	movf	??_NRF_Read_Reg,w
  2627  01D6  00F3               	movwf	NRF_Read_Reg@status
  2628                           
  2629                           ;../library/nrf24l01.c: 92:    RA2 = 1;
  2630  01D7  0020               	movlb	0	; select bank0
  2631  01D8  150C               	bsf	12,2	;volatile
  2632                           
  2633                           ;../library/nrf24l01.c: 93:    return(status);
  2634  01D9  0873               	movf	NRF_Read_Reg@status,w
  2635  01DA  0008               	return
  2636  01DB                     __end_of_NRF_Read_Reg:	
  2637                           
  2638                           	psect	text11
  2639  0250                     __ptext11:	
  2640 ;; *************** function _NRF_Flush_RX *****************
  2641 ;; Defined at:
  2642 ;;		line 318 in file "../library/nrf24l01.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, pclath, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 1F/0
  2653 ;;		On exit  : 1F/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1
  2656 ;;      Params:         0       0       0
  2657 ;;      Locals:         0       0       0
  2658 ;;      Temps:          0       0       0
  2659 ;;      Totals:         0       0       0
  2660 ;;Total ram usage:        0 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    3
  2663 ;; This function calls:
  2664 ;;		_NRF_Write_Reg
  2665 ;; This function is called by:
  2666 ;;		_NRF_RxPacket
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _NRF_Flush_RX
  2672  0250                     _NRF_Flush_RX:	
  2673                           
  2674                           ;../library/nrf24l01.c: 319:     NRF_Write_Reg(0xE2, 0);
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _NRF_Flush_RX: [wreg+status,2+status,0+pclath+cstack]
  2678  0250  01F1               	clrf	NRF_Write_Reg@value
  2679  0251  30E2               	movlw	226
  2680  0252  21DB               	fcall	_NRF_Write_Reg
  2681  0253  0008               	return
  2682  0254                     __end_of_NRF_Flush_RX:	
  2683                           
  2684                           	psect	text12
  2685  01FE                     __ptext12:	
  2686 ;; *************** function _NRF_Port_Init *****************
  2687 ;; Defined at:
  2688 ;;		line 44 in file "../library/nrf24l01.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		None
  2697 ;; Tracked objects:
  2698 ;;		On entry : 1F/0
  2699 ;;		On exit  : 1F/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1
  2702 ;;      Params:         0       0       0
  2703 ;;      Locals:         0       0       0
  2704 ;;      Temps:          0       0       0
  2705 ;;      Totals:         0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_WirelessPad
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _NRF_Port_Init
  2718  01FE                     _NRF_Port_Init:	
  2719                           
  2720                           ;../library/nrf24l01.c: 45:     TRISC1 = 1;
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in _NRF_Port_Init: []
  2724  01FE  0021               	movlb	1	; select bank1
  2725  01FF  148E               	bsf	14,1	;volatile
  2726                           
  2727                           ;../library/nrf24l01.c: 46:     TRISC2 = 0;
  2728  0200  110E               	bcf	14,2	;volatile
  2729                           
  2730                           ;../library/nrf24l01.c: 47:     TRISC0 = 0;
  2731  0201  100E               	bcf	14,0	;volatile
  2732                           
  2733                           ;../library/nrf24l01.c: 48:     TRISA2 = 0;
  2734  0202  110C               	bcf	12,2	;volatile
  2735                           
  2736                           ;../library/nrf24l01.c: 49:     TRISA0 = 0;
  2737  0203  100C               	bcf	12,0	;volatile
  2738                           
  2739                           ;../library/nrf24l01.c: 54:     RA0 = 0;
  2740  0204  0020               	movlb	0	; select bank0
  2741  0205  100C               	bcf	12,0	;volatile
  2742                           
  2743                           ;../library/nrf24l01.c: 55:     RA2 = 1;
  2744  0206  150C               	bsf	12,2	;volatile
  2745  0207  0008               	return
  2746  0208                     __end_of_NRF_Port_Init:	
  2747                           
  2748                           	psect	text13
  2749  0272                     __ptext13:	
  2750 ;; *************** function _NRF_On *****************
  2751 ;; Defined at:
  2752 ;;		line 58 in file "../library/nrf24l01.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		None
  2761 ;; Tracked objects:
  2762 ;;		On entry : 1F/0
  2763 ;;		On exit  : 1F/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1
  2766 ;;      Params:         0       0       0
  2767 ;;      Locals:         0       0       0
  2768 ;;      Temps:          0       0       0
  2769 ;;      Totals:         0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_WirelessPad
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function _NRF_On
  2782  0272                     _NRF_On:	
  2783                           
  2784                           ;../library/nrf24l01.c: 59:     RA5 = 0;
  2785                           
  2786                           ;incstack = 0
  2787                           ; Regs used in _NRF_On: []
  2788  0272  128C               	bcf	12,5	;volatile
  2789  0273  0008               	return
  2790  0274                     __end_of_NRF_On:	
  2791                           
  2792                           	psect	text14
  2793  01B1                     __ptext14:	
  2794 ;; *************** function _NRF_Clear_IRQ *****************
  2795 ;; Defined at:
  2796 ;;		line 322 in file "../library/nrf24l01.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  buf             2    0        PTR unsigned char 
  2801 ;;  temp            1    8[COMMON] unsigned char 
  2802 ;;  IRQ_FLAG        1    0        unsigned char 
  2803 ;;  rx_pw           1    0        unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      unsigned char 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, pclath, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 1F/0
  2810 ;;		On exit  : 1F/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1
  2813 ;;      Params:         0       0       0
  2814 ;;      Locals:         2       0       0
  2815 ;;      Temps:          2       0       0
  2816 ;;      Totals:         4       0       0
  2817 ;;Total ram usage:        4 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    3
  2820 ;; This function calls:
  2821 ;;		_NRF_Write_Reg
  2822 ;; This function is called by:
  2823 ;;		_WirelessPad
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _NRF_Clear_IRQ
  2829  01B1                     _NRF_Clear_IRQ:	
  2830                           
  2831                           ;../library/nrf24l01.c: 324:     unsigned char IRQ_FLAG;;../library/nrf24l01.c: 326:    
      +                           unsigned char temp, rx_pw;;../library/nrf24l01.c: 327:     unsigned char* buf;;../libra
      +                          ry/nrf24l01.c: 329:     temp = NRF_Write_Reg(0x20 + 0x07, 0x70);
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _NRF_Clear_IRQ: [wreg+status,2+status,0+pclath+cstack]
  2835  01B1  3070               	movlw	112
  2836  01B2  00F5               	movwf	??_NRF_Clear_IRQ
  2837  01B3  0875               	movf	??_NRF_Clear_IRQ,w
  2838  01B4  00F1               	movwf	NRF_Write_Reg@value
  2839  01B5  3027               	movlw	39
  2840  01B6  21DB               	fcall	_NRF_Write_Reg
  2841  01B7  00F6               	movwf	??_NRF_Clear_IRQ+1
  2842  01B8  0876               	movf	??_NRF_Clear_IRQ+1,w
  2843  01B9  00F8               	movwf	NRF_Clear_IRQ@temp
  2844                           
  2845                           ;../library/nrf24l01.c: 331:     if(temp & 0X10) IRQ_FLAG = 0X10;
  2846  01BA  1A78               	btfsc	NRF_Clear_IRQ@temp,4
  2847  01BB  29BC               	goto	l1517
  2848  01BC                     l1517:	
  2849                           
  2850                           ;../library/nrf24l01.c: 332:     if(temp & 0X20) IRQ_FLAG = 0X20;
  2851  01BC  1AF8               	btfsc	NRF_Clear_IRQ@temp,5
  2852  01BD  29BE               	goto	l1521
  2853  01BE                     l1521:	
  2854                           
  2855                           ;../library/nrf24l01.c: 334:     if(temp & 0X40)
  2856  01BE  1B78               	btfsc	NRF_Clear_IRQ@temp,6
  2857  01BF  0008               	return
  2858  01C0  0008               	return
  2859  01C1                     __end_of_NRF_Clear_IRQ:	
  2860                           
  2861                           	psect	text15
  2862  01DB                     __ptext15:	
  2863 ;; *************** function _NRF_Write_Reg *****************
  2864 ;; Defined at:
  2865 ;;		line 103 in file "../library/nrf24l01.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  reg             1    wreg     unsigned char 
  2868 ;;  value           1    1[COMMON] unsigned char 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  reg             1    3[COMMON] unsigned char 
  2871 ;;  status          1    4[COMMON] unsigned char 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      unsigned char 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, pclath, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 1F/0
  2878 ;;		On exit  : 1F/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1
  2881 ;;      Params:         1       0       0
  2882 ;;      Locals:         2       0       0
  2883 ;;      Temps:          1       0       0
  2884 ;;      Totals:         4       0       0
  2885 ;;Total ram usage:        4 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; Hardware stack levels required when called:    2
  2888 ;; This function calls:
  2889 ;;		_NRF_SPI_RW
  2890 ;; This function is called by:
  2891 ;;		_NRF_RxPacket
  2892 ;;		_NRF_Flush_RX
  2893 ;;		_NRF_Clear_IRQ
  2894 ;;		_NRF_Rx_Set
  2895 ;;		_NRF_Rx_Set_P0
  2896 ;;		_NRF_Rx_Receive
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _NRF_Write_Reg
  2902  01DB                     _NRF_Write_Reg:	
  2903                           
  2904                           ;incstack = 0
  2905                           ; Regs used in _NRF_Write_Reg: [wreg+status,2+status,0+pclath+cstack]
  2906                           ;NRF_Write_Reg@reg stored from wreg
  2907  01DB  00F3               	movwf	NRF_Write_Reg@reg
  2908                           
  2909                           ;../library/nrf24l01.c: 104:  unsigned char status;;../library/nrf24l01.c: 105:    RA2 =
      +                           0;
  2910  01DC  110C               	bcf	12,2	;volatile
  2911                           
  2912                           ;../library/nrf24l01.c: 106:    status = NRF_SPI_RW(reg);
  2913  01DD  0873               	movf	NRF_Write_Reg@reg,w
  2914  01DE  21E8               	fcall	_NRF_SPI_RW
  2915  01DF  00F2               	movwf	??_NRF_Write_Reg
  2916  01E0  0872               	movf	??_NRF_Write_Reg,w
  2917  01E1  00F4               	movwf	NRF_Write_Reg@status
  2918                           
  2919                           ;../library/nrf24l01.c: 107:    NRF_SPI_RW(value);
  2920  01E2  0871               	movf	NRF_Write_Reg@value,w
  2921  01E3  21E8               	fcall	_NRF_SPI_RW
  2922                           
  2923                           ;../library/nrf24l01.c: 108:    RA2 = 1;
  2924  01E4  0020               	movlb	0	; select bank0
  2925  01E5  150C               	bsf	12,2	;volatile
  2926                           
  2927                           ;../library/nrf24l01.c: 109:    return(status);
  2928  01E6  0874               	movf	NRF_Write_Reg@status,w
  2929  01E7  0008               	return
  2930  01E8                     __end_of_NRF_Write_Reg:	
  2931                           
  2932                           	psect	text16
  2933  0033                     __ptext16:	
  2934 ;; *************** function _NRF_Check *****************
  2935 ;; Defined at:
  2936 ;;		line 158 in file "../library/nrf24l01.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  buf             5    5[BANK0 ] unsigned char [5]
  2941 ;;  tuf             5    0[BANK0 ] unsigned char [5]
  2942 ;;  i               1   10[BANK0 ] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      unsigned char 
  2945 ;; Registers used:
  2946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/4
  2949 ;;		On exit  : 1F/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1
  2952 ;;      Params:         0       0       0
  2953 ;;      Locals:         0      11       0
  2954 ;;      Temps:          2       0       0
  2955 ;;      Totals:         2      11       0
  2956 ;;Total ram usage:       13 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    3
  2959 ;; This function calls:
  2960 ;;		_NRF_Read_Buf
  2961 ;;		_NRF_Write_Buf
  2962 ;; This function is called by:
  2963 ;;		_WirelessPad
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           
  2968                           ;psect for function _NRF_Check
  2969  0033                     _NRF_Check:	
  2970                           
  2971                           ;../library/nrf24l01.c: 159:     unsigned char tuf[5] = {0xE1, 0xE2, 0xE3, 0xE4, 0x05};
  2972                           
  2973                           ;incstack = 0
  2974                           ; Regs used in _NRF_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2975  0033  3025               	movlw	low NRF_Check@F2228
  2976  0034  0086               	movwf	6
  2977  0035  3000               	movlw	high NRF_Check@F2228
  2978  0036  0087               	movwf	7
  2979  0037  3052               	movlw	low NRF_Check@tuf
  2980  0038  0084               	movwf	4
  2981  0039  3000               	movlw	high NRF_Check@tuf
  2982  003A  0085               	movwf	5
  2983  003B  3005               	movlw	5
  2984  003C  00F8               	movwf	??_NRF_Check
  2985  003D                     u210:	
  2986  003D  0016               	moviw fsr1++
  2987  003E  001A               	movwi fsr0++
  2988  003F  0BF8               	decfsz	??_NRF_Check,f
  2989  0040  283D               	goto	u210
  2990                           
  2991                           ;../library/nrf24l01.c: 160:  unsigned char buf[5] = {0, 0, 0, 0, 0};
  2992  0041  3057               	movlw	low NRF_Check@buf
  2993  0042  0086               	movwf	6
  2994  0043  3000               	movlw	high NRF_Check@buf
  2995  0044  0087               	movwf	7
  2996  0045  3005               	movlw	5
  2997  0046  00F8               	movwf	??_NRF_Check
  2998  0047  3000               	movlw	0
  2999  0048                     u220:	
  3000  0048  001E               	movwi fsr1++
  3001  0049  0BF8               	decfsz	??_NRF_Check,f
  3002  004A  2848               	goto	u220
  3003                           
  3004                           ;../library/nrf24l01.c: 161:  unsigned char i;;../library/nrf24l01.c: 162:     NRF_Write
      +                          _Buf(0x20 + 0x10, tuf, 5);
  3005  004B  3052               	movlw	(low (NRF_Check@tuf| 0))& (0+255)
  3006  004C  00F8               	movwf	??_NRF_Check
  3007  004D  0878               	movf	??_NRF_Check,w
  3008  004E  00F1               	movwf	NRF_Write_Buf@pBuf
  3009  004F  3005               	movlw	5
  3010  0050  00F9               	movwf	??_NRF_Check+1
  3011  0051  0879               	movf	??_NRF_Check+1,w
  3012  0052  00F2               	movwf	NRF_Write_Buf@len
  3013  0053  3030               	movlw	48
  3014  0054  2120               	fcall	_NRF_Write_Buf
  3015                           
  3016                           ;../library/nrf24l01.c: 163:  NRF_Read_Buf(0x10, buf, 5);
  3017  0055  3057               	movlw	(low (NRF_Check@buf| 0))& (0+255)
  3018  0056  00F8               	movwf	??_NRF_Check
  3019  0057  0878               	movf	??_NRF_Check,w
  3020  0058  00F1               	movwf	NRF_Read_Buf@pBuf
  3021  0059  3005               	movlw	5
  3022  005A  00F9               	movwf	??_NRF_Check+1
  3023  005B  0879               	movf	??_NRF_Check+1,w
  3024  005C  00F2               	movwf	NRF_Read_Buf@len
  3025  005D  3010               	movlw	16
  3026  005E  20E9               	fcall	_NRF_Read_Buf
  3027                           
  3028                           ;../library/nrf24l01.c: 164:  for(i = 0; i < 5; i++) if(tuf[i] != buf[i]) break;
  3029  005F  01DC               	clrf	NRF_Check@i
  3030  0060                     l1475:	
  3031  0060  085C               	movf	NRF_Check@i,w
  3032  0061  3E57               	addlw	(low (NRF_Check@buf| 0))& (0+255)
  3033  0062  0086               	movwf	6
  3034  0063  0187               	clrf	7
  3035  0064  085C               	movf	NRF_Check@i,w
  3036  0065  3E52               	addlw	(low (NRF_Check@tuf| 0))& (0+255)
  3037  0066  0084               	movwf	4
  3038  0067  0185               	clrf	5
  3039  0068  0800               	movf	0,w
  3040  0069  0601               	xorwf	1,w
  3041  006A  1D03               	btfss	3,2
  3042  006B  2874               	goto	l1483
  3043  006C  3001               	movlw	1
  3044  006D  00F8               	movwf	??_NRF_Check
  3045  006E  0878               	movf	??_NRF_Check,w
  3046  006F  07DC               	addwf	NRF_Check@i,f
  3047  0070  3005               	movlw	5
  3048  0071  025C               	subwf	NRF_Check@i,w
  3049  0072  1C03               	skipc
  3050  0073  2860               	goto	l1475
  3051  0074                     l1483:	
  3052                           
  3053                           ;../library/nrf24l01.c: 165:  if(i != 5) return 1;
  3054  0074  3005               	movlw	5
  3055  0075  065C               	xorwf	NRF_Check@i,w
  3056  0076  1903               	btfsc	3,2
  3057  0077  287A               	goto	l1489
  3058  0078  3001               	movlw	1
  3059  0079  0008               	return
  3060  007A                     l1489:	
  3061                           
  3062                           ;../library/nrf24l01.c: 166:  return 0;
  3063  007A  3000               	movlw	0
  3064  007B  0008               	return
  3065  007C                     __end_of_NRF_Check:	
  3066                           
  3067                           	psect	text17
  3068  0120                     __ptext17:	
  3069 ;; *************** function _NRF_Write_Buf *****************
  3070 ;; Defined at:
  3071 ;;		line 138 in file "../library/nrf24l01.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  reg             1    wreg     unsigned char 
  3074 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  3075 ;;		 -> rx_addr_0(5), RX_ADDRESS_P5(5), RX_ADDRESS_P4(5), RX_ADDRESS_P3(5), 
  3076 ;;		 -> RX_ADDRESS_P2(5), RX_ADDRESS_P1(5), RX_ADDRESS_P0(5), NRF_Check@tuf(5), 
  3077 ;;  len             1    2[COMMON] unsigned char 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  reg             1    5[COMMON] unsigned char 
  3080 ;;  i               1    6[COMMON] unsigned char 
  3081 ;;  status          1    0        unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      unsigned char 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 1F/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1
  3091 ;;      Params:         2       0       0
  3092 ;;      Locals:         3       0       0
  3093 ;;      Temps:          1       0       0
  3094 ;;      Totals:         6       0       0
  3095 ;;Total ram usage:        6 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    2
  3098 ;; This function calls:
  3099 ;;		_NRF_SPI_RW
  3100 ;; This function is called by:
  3101 ;;		_NRF_Check
  3102 ;;		_NRF_Rx_Set_P0
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _NRF_Write_Buf
  3108  0120                     _NRF_Write_Buf:	
  3109                           
  3110                           ;incstack = 0
  3111                           ; Regs used in _NRF_Write_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3112                           ;NRF_Write_Buf@reg stored from wreg
  3113  0120  00F5               	movwf	NRF_Write_Buf@reg
  3114                           
  3115                           ;../library/nrf24l01.c: 138: unsigned char NRF_Write_Buf(unsigned char reg, unsigned cha
      +                          r *pBuf, unsigned char len);../library/nrf24l01.c: 139: {;../library/nrf24l01.c: 140:  u
      +                          nsigned char status, i;;../library/nrf24l01.c: 141:    RA2 = 0;
  3116  0121  0020               	movlb	0	; select bank0
  3117  0122  110C               	bcf	12,2	;volatile
  3118  0123  0875               	movf	NRF_Write_Buf@reg,w
  3119  0124  21E8               	fcall	_NRF_SPI_RW
  3120                           
  3121                           ;../library/nrf24l01.c: 143:    for(i = 0; i < len; i++) {
  3122  0125  01F6               	clrf	NRF_Write_Buf@i
  3123  0126                     l1437:	
  3124  0126  0872               	movf	NRF_Write_Buf@len,w
  3125  0127  0276               	subwf	NRF_Write_Buf@i,w
  3126  0128  1803               	btfsc	3,0
  3127  0129  2938               	goto	l113
  3128                           
  3129                           ;../library/nrf24l01.c: 144:      NRF_SPI_RW(*pBuf++);
  3130  012A  0871               	movf	NRF_Write_Buf@pBuf,w
  3131  012B  0086               	movwf	6
  3132  012C  0187               	clrf	7
  3133  012D  0801               	movf	1,w
  3134  012E  21E8               	fcall	_NRF_SPI_RW
  3135  012F  3001               	movlw	1
  3136  0130  00F3               	movwf	??_NRF_Write_Buf
  3137  0131  0873               	movf	??_NRF_Write_Buf,w
  3138  0132  07F1               	addwf	NRF_Write_Buf@pBuf,f
  3139                           
  3140                           ;../library/nrf24l01.c: 145:  }
  3141  0133  3001               	movlw	1
  3142  0134  00F3               	movwf	??_NRF_Write_Buf
  3143  0135  0873               	movf	??_NRF_Write_Buf,w
  3144  0136  07F6               	addwf	NRF_Write_Buf@i,f
  3145  0137  2926               	goto	l1437
  3146  0138                     l113:	
  3147                           
  3148                           ;../library/nrf24l01.c: 146:    RA2 = 1;
  3149  0138  0020               	movlb	0	; select bank0
  3150  0139  150C               	bsf	12,2	;volatile
  3151                           
  3152                           ;../library/nrf24l01.c: 147:    return(status);;	Return value of _NRF_Write_Buf is never
      +                           used
  3153  013A  0008               	return
  3154  013B                     __end_of_NRF_Write_Buf:	
  3155                           
  3156                           	psect	text18
  3157  00E9                     __ptext18:	
  3158 ;; *************** function _NRF_Read_Buf *****************
  3159 ;; Defined at:
  3160 ;;		line 119 in file "../library/nrf24l01.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  reg             1    wreg     unsigned char 
  3163 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  3164 ;;		 -> WirelessPad@rxbuf(2), NRF_Check@buf(5), 
  3165 ;;  len             1    2[COMMON] unsigned char 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;  reg             1    6[COMMON] unsigned char 
  3168 ;;  i               1    7[COMMON] unsigned char 
  3169 ;;  status          1    0        unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      unsigned char 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 1F/0
  3176 ;;		On exit  : 1F/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1
  3179 ;;      Params:         2       0       0
  3180 ;;      Locals:         3       0       0
  3181 ;;      Temps:          2       0       0
  3182 ;;      Totals:         7       0       0
  3183 ;;Total ram usage:        7 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    2
  3186 ;; This function calls:
  3187 ;;		_NRF_SPI_RW
  3188 ;; This function is called by:
  3189 ;;		_NRF_Check
  3190 ;;		_NRF_Read_RX_Pload
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _NRF_Read_Buf
  3196  00E9                     _NRF_Read_Buf:	
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _NRF_Read_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3200                           ;NRF_Read_Buf@reg stored from wreg
  3201  00E9  00F6               	movwf	NRF_Read_Buf@reg
  3202                           
  3203                           ;../library/nrf24l01.c: 119: unsigned char NRF_Read_Buf(unsigned char reg, unsigned char
      +                           *pBuf, unsigned char len);../library/nrf24l01.c: 120: {;../library/nrf24l01.c: 121:  un
      +                          signed char status,i;;../library/nrf24l01.c: 122:    RA2 = 0;
  3204  00EA  110C               	bcf	12,2	;volatile
  3205  00EB  0876               	movf	NRF_Read_Buf@reg,w
  3206  00EC  21E8               	fcall	_NRF_SPI_RW
  3207                           
  3208                           ;../library/nrf24l01.c: 124:    for(i = 0; i < len; i++)
  3209  00ED  01F7               	clrf	NRF_Read_Buf@i
  3210  00EE                     l1419:	
  3211  00EE  0872               	movf	NRF_Read_Buf@len,w
  3212  00EF  0277               	subwf	NRF_Read_Buf@i,w
  3213  00F0  1803               	btfsc	3,0
  3214  00F1  2902               	goto	l107
  3215                           
  3216                           ;../library/nrf24l01.c: 125:  {;../library/nrf24l01.c: 126:      pBuf[i] = NRF_SPI_RW(0x
      +                          FF);
  3217  00F2  30FF               	movlw	255
  3218  00F3  21E8               	fcall	_NRF_SPI_RW
  3219  00F4  00F3               	movwf	??_NRF_Read_Buf
  3220  00F5  0877               	movf	NRF_Read_Buf@i,w
  3221  00F6  0771               	addwf	NRF_Read_Buf@pBuf,w
  3222  00F7  00F4               	movwf	??_NRF_Read_Buf+1
  3223  00F8  0874               	movf	??_NRF_Read_Buf+1,w
  3224  00F9  0086               	movwf	6
  3225  00FA  0187               	clrf	7
  3226  00FB  0873               	movf	??_NRF_Read_Buf,w
  3227  00FC  0081               	movwf	1
  3228                           
  3229                           ;../library/nrf24l01.c: 127:    }
  3230  00FD  3001               	movlw	1
  3231  00FE  00F3               	movwf	??_NRF_Read_Buf
  3232  00FF  0873               	movf	??_NRF_Read_Buf,w
  3233  0100  07F7               	addwf	NRF_Read_Buf@i,f
  3234  0101  28EE               	goto	l1419
  3235  0102                     l107:	
  3236                           
  3237                           ;../library/nrf24l01.c: 128:  RA2 = 1;
  3238  0102  0020               	movlb	0	; select bank0
  3239  0103  150C               	bsf	12,2	;volatile
  3240                           
  3241                           ;../library/nrf24l01.c: 129:    return(status);;	Return value of _NRF_Read_Buf is never 
      +                          used
  3242  0104  0008               	return
  3243  0105                     __end_of_NRF_Read_Buf:	
  3244                           
  3245                           	psect	text19
  3246  01E8                     __ptext19:	
  3247 ;; *************** function _NRF_SPI_RW *****************
  3248 ;; Defined at:
  3249 ;;		line 79 in file "../library/nrf24l01.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  dat             1    wreg     unsigned char 
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;  dat             1    0[COMMON] unsigned char 
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      unsigned char 
  3256 ;; Registers used:
  3257 ;;		wreg
  3258 ;; Tracked objects:
  3259 ;;		On entry : 0/0
  3260 ;;		On exit  : 1F/4
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1
  3263 ;;      Params:         0       0       0
  3264 ;;      Locals:         1       0       0
  3265 ;;      Temps:          0       0       0
  3266 ;;      Totals:         1       0       0
  3267 ;;Total ram usage:        1 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    1
  3270 ;; This function calls:
  3271 ;;		Nothing
  3272 ;; This function is called by:
  3273 ;;		_NRF_Read_Reg
  3274 ;;		_NRF_Write_Reg
  3275 ;;		_NRF_Read_Buf
  3276 ;;		_NRF_Write_Buf
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _NRF_SPI_RW
  3282  01E8                     _NRF_SPI_RW:	
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _NRF_SPI_RW: [wreg]
  3286                           ;NRF_SPI_RW@dat stored from wreg
  3287  01E8  00F0               	movwf	NRF_SPI_RW@dat
  3288                           
  3289                           ;../library/nrf24l01.c: 80:     SSP1IF = 0;
  3290  01E9  0020               	movlb	0	; select bank0
  3291  01EA  1191               	bcf	17,3	;volatile
  3292                           
  3293                           ;../library/nrf24l01.c: 81:     SSP1BUF = dat;
  3294  01EB  0870               	movf	NRF_SPI_RW@dat,w
  3295  01EC  0024               	movlb	4	; select bank4
  3296  01ED  0091               	movwf	17	;volatile
  3297  01EE                     l93:	
  3298                           ;../library/nrf24l01.c: 82:     while(!SSP1IF);
  3299                           
  3300  01EE  0020               	movlb	0	; select bank0
  3301  01EF  1D91               	btfss	17,3	;volatile
  3302  01F0  29EE               	goto	l93
  3303                           
  3304                           ;../library/nrf24l01.c: 84:     return(SSP1BUF);
  3305  01F1  0024               	movlb	4	; select bank4
  3306  01F2  0811               	movf	17,w	;volatile
  3307  01F3  0008               	return
  3308  01F4                     __end_of_NRF_SPI_RW:	
  3309                           
  3310                           	psect	text20
  3311  016E                     __ptext20:	
  3312 ;; *************** function _LEDx *****************
  3313 ;; Defined at:
  3314 ;;		line 10 in file "../library/ledx.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  num             1    wreg     unsigned char 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  num             1    1[COMMON] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      void 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1
  3328 ;;      Params:         0       0       0
  3329 ;;      Locals:         1       0       0
  3330 ;;      Temps:          1       0       0
  3331 ;;      Totals:         2       0       0
  3332 ;;Total ram usage:        2 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_WirelessPad
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _LEDx
  3344  016E                     _LEDx:	
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _LEDx: [wreg+status,2+status,0]
  3348                           ;LEDx@num stored from wreg
  3349  016E  00F1               	movwf	LEDx@num
  3350  016F                     l1551:	
  3351                           ;../library/ledx.c: 11:     while(num--) {
  3352                           
  3353                           
  3354                           ;../library/ledx.c: 11:     while(num--) {
  3355  016F  3001               	movlw	1
  3356  0170  02F1               	subwf	LEDx@num,f
  3357  0171  0A71               	incf	LEDx@num,w
  3358  0172  1903               	btfsc	3,2
  3359  0173  0008               	return
  3360                           
  3361                           ;../library/ledx.c: 12:         LATC3 = 0;
  3362  0174  0022               	movlb	2	; select bank2
  3363  0175  118E               	bcf	14,3	;volatile
  3364                           
  3365                           ;../library/ledx.c: 13:         _delay((unsigned long)((100)*(4000000/4000.0)));
  3366  0176  3082               	movlw	130
  3367  0177  00F0               	movwf	??_LEDx
  3368  0178  30DE               	movlw	222
  3369  0179                     u367:	
  3370  0179  0B89               	decfsz	9,f
  3371  017A  2979               	goto	u367
  3372  017B  0BF0               	decfsz	??_LEDx,f
  3373  017C  2979               	goto	u367
  3374                           
  3375                           ;../library/ledx.c: 14:         LATC3 = 1;
  3376  017D  0022               	movlb	2	; select bank2
  3377  017E  158E               	bsf	14,3	;volatile
  3378                           
  3379                           ;../library/ledx.c: 15:         _delay((unsigned long)((100)*(4000000/4000.0)));
  3380  017F  3082               	movlw	130
  3381  0180  00F0               	movwf	??_LEDx
  3382  0181  30DE               	movlw	222
  3383  0182                     u377:	
  3384  0182  0B89               	decfsz	9,f
  3385  0183  2982               	goto	u377
  3386  0184  0BF0               	decfsz	??_LEDx,f
  3387  0185  2982               	goto	u377
  3388  0186  296F               	goto	l1551
  3389  0187                     __end_of_LEDx:	
  3390                           
  3391                           	psect	text21
  3392  0235                     __ptext21:	
  3393 ;; *************** function _EUSART_Send *****************
  3394 ;; Defined at:
  3395 ;;		line 47 in file "../library/eusart.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  dat             1    wreg     unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  dat             1    0[COMMON] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg
  3404 ;; Tracked objects:
  3405 ;;		On entry : 1F/0
  3406 ;;		On exit  : 1F/3
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1
  3409 ;;      Params:         0       0       0
  3410 ;;      Locals:         1       0       0
  3411 ;;      Temps:          0       0       0
  3412 ;;      Totals:         1       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_WirelessPad
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _EUSART_Send
  3425  0235                     _EUSART_Send:	
  3426                           
  3427                           ;incstack = 0
  3428                           ; Regs used in _EUSART_Send: [wreg]
  3429                           ;EUSART_Send@dat stored from wreg
  3430  0235  00F0               	movwf	EUSART_Send@dat
  3431                           
  3432                           ;../library/eusart.c: 48:     TXREG = dat;
  3433  0236  0870               	movf	EUSART_Send@dat,w
  3434  0237  0023               	movlb	3	; select bank3
  3435  0238  009A               	movwf	26	;volatile
  3436  0239                     l492:	
  3437                           ;../library/eusart.c: 49:     while(TRMT == 0);
  3438                           
  3439  0239  189E               	btfsc	30,1	;volatile
  3440  023A  0008               	return
  3441  023B  2A39               	goto	l492
  3442  023C                     __end_of_EUSART_Send:	
  3443                           
  3444                           	psect	text22
  3445  025F                     __ptext22:	
  3446 ;; *************** function _PORT_Init *****************
  3447 ;; Defined at:
  3448 ;;		line 4 in file "../library/port.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		status,2, status,0, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : B1F/1
  3459 ;;		On exit  : B1F/1
  3460 ;;		Unchanged: B00/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1
  3462 ;;      Params:         0       0       0
  3463 ;;      Locals:         0       0       0
  3464 ;;      Temps:          0       0       0
  3465 ;;      Totals:         0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    2
  3469 ;; This function calls:
  3470 ;;		_PORTA_Init
  3471 ;;		_PORTC_Init
  3472 ;; This function is called by:
  3473 ;;		_main
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _PORT_Init
  3479  025F                     _PORT_Init:	
  3480                           
  3481                           ;../library/port.c: 5:     PORTA_Init();
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
  3485  025F  221B               	fcall	_PORTA_Init
  3486                           
  3487                           ;../library/port.c: 6:     PORTC_Init();
  3488  0260  2212               	fcall	_PORTC_Init
  3489  0261  0008               	return
  3490  0262                     __end_of_PORT_Init:	
  3491                           
  3492                           	psect	text23
  3493  0212                     __ptext23:	
  3494 ;; *************** function _PORTC_Init *****************
  3495 ;; Defined at:
  3496 ;;		line 16 in file "../library/port.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		status,2
  3505 ;; Tracked objects:
  3506 ;;		On entry : B1F/1
  3507 ;;		On exit  : B1F/1
  3508 ;;		Unchanged: B00/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1
  3510 ;;      Params:         0       0       0
  3511 ;;      Locals:         0       0       0
  3512 ;;      Temps:          0       0       0
  3513 ;;      Totals:         0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_PORT_Init
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _PORTC_Init
  3526  0212                     _PORTC_Init:	
  3527                           
  3528                           ;../library/port.c: 17:     PORTC = 0;
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _PORTC_Init: [status,2]
  3532  0212  0020               	movlb	0	; select bank0
  3533  0213  018E               	clrf	14	;volatile
  3534                           
  3535                           ;../library/port.c: 18:     LATC = 0;
  3536  0214  0022               	movlb	2	; select bank2
  3537  0215  018E               	clrf	14	;volatile
  3538                           
  3539                           ;../library/port.c: 19:     ANSELC = 0;
  3540  0216  0023               	movlb	3	; select bank3
  3541  0217  018E               	clrf	14	;volatile
  3542                           
  3543                           ;../library/port.c: 20:     TRISC = 0;
  3544  0218  0021               	movlb	1	; select bank1
  3545  0219  018E               	clrf	14	;volatile
  3546  021A  0008               	return
  3547  021B                     __end_of_PORTC_Init:	
  3548                           
  3549                           	psect	text24
  3550  021B                     __ptext24:	
  3551 ;; *************** function _PORTA_Init *****************
  3552 ;; Defined at:
  3553 ;;		line 9 in file "../library/port.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		status,2
  3562 ;; Tracked objects:
  3563 ;;		On entry : B1F/1
  3564 ;;		On exit  : B1F/1
  3565 ;;		Unchanged: B00/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1
  3567 ;;      Params:         0       0       0
  3568 ;;      Locals:         0       0       0
  3569 ;;      Temps:          0       0       0
  3570 ;;      Totals:         0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_PORT_Init
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           
  3582                           ;psect for function _PORTA_Init
  3583  021B                     _PORTA_Init:	
  3584                           
  3585                           ;../library/port.c: 10:     PORTA = 0;
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _PORTA_Init: [status,2]
  3589  021B  0020               	movlb	0	; select bank0
  3590  021C  018C               	clrf	12	;volatile
  3591                           
  3592                           ;../library/port.c: 11:     LATA = 0;
  3593  021D  0022               	movlb	2	; select bank2
  3594  021E  018C               	clrf	12	;volatile
  3595                           
  3596                           ;../library/port.c: 12:     ANSELA = 0;
  3597  021F  0023               	movlb	3	; select bank3
  3598  0220  018C               	clrf	12	;volatile
  3599                           
  3600                           ;../library/port.c: 13:     TRISA = 0;
  3601  0221  0021               	movlb	1	; select bank1
  3602  0222  018C               	clrf	12	;volatile
  3603  0223  0008               	return
  3604  0224                     __end_of_PORTA_Init:	
  3605                           
  3606                           	psect	text25
  3607  0254                     __ptext25:	
  3608 ;; *************** function _LED_Init *****************
  3609 ;; Defined at:
  3610 ;;		line 5 in file "../library/ledx.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		None
  3619 ;; Tracked objects:
  3620 ;;		On entry : B1F/1
  3621 ;;		On exit  : B1F/2
  3622 ;;		Unchanged: B00/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1
  3624 ;;      Params:         0       0       0
  3625 ;;      Locals:         0       0       0
  3626 ;;      Temps:          0       0       0
  3627 ;;      Totals:         0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_main
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           
  3639                           ;psect for function _LED_Init
  3640  0254                     _LED_Init:	
  3641                           
  3642                           ;../library/ledx.c: 6:     TRISC3 = 0;
  3643                           
  3644                           ;incstack = 0
  3645                           ; Regs used in _LED_Init: []
  3646  0254  118E               	bcf	14,3	;volatile
  3647                           
  3648                           ;../library/ledx.c: 7:     LATC3 = 1;
  3649  0255  0022               	movlb	2	; select bank2
  3650  0256  158E               	bsf	14,3	;volatile
  3651  0257  0008               	return
  3652  0258                     __end_of_LED_Init:	
  3653                           
  3654                           	psect	text26
  3655  0258                     __ptext26:	
  3656 ;; *************** function _FOSC_Init *****************
  3657 ;; Defined at:
  3658 ;;		line 3 in file "../library/fosc.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		wreg
  3667 ;; Tracked objects:
  3668 ;;		On entry : B1F/0
  3669 ;;		On exit  : B1F/1
  3670 ;;		Unchanged: B00/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1
  3672 ;;      Params:         0       0       0
  3673 ;;      Locals:         0       0       0
  3674 ;;      Temps:          0       0       0
  3675 ;;      Totals:         0       0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    1
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _FOSC_Init
  3688  0258                     _FOSC_Init:	
  3689                           
  3690                           ;../library/fosc.c: 4:     OSCCON = 0X68;
  3691                           
  3692                           ;incstack = 0
  3693                           ; Regs used in _FOSC_Init: [wreg]
  3694  0258  3068               	movlw	104
  3695  0259  0021               	movlb	1	; select bank1
  3696  025A  0099               	movwf	25	;volatile
  3697  025B  0008               	return
  3698  025C                     __end_of_FOSC_Init:	
  3699                           
  3700                           	psect	text27
  3701  0208                     __ptext27:	
  3702 ;; *************** function _EUSART_Init *****************
  3703 ;; Defined at:
  3704 ;;		line 27 in file "../library/eusart.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;		None
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;		None
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, status,2, status,0, pclath, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 1F/1
  3715 ;;		On exit  : 1F/3
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMMON   BANK0   BANK1
  3718 ;;      Params:         0       0       0
  3719 ;;      Locals:         0       0       0
  3720 ;;      Temps:          0       0       0
  3721 ;;      Totals:         0       0       0
  3722 ;;Total ram usage:        0 bytes
  3723 ;; Hardware stack levels used:    1
  3724 ;; Hardware stack levels required when called:    2
  3725 ;; This function calls:
  3726 ;;		_EUSART_Tx
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           
  3733                           ;psect for function _EUSART_Init
  3734  0208                     _EUSART_Init:	
  3735                           
  3736                           ;../library/eusart.c: 29:     EUSART_Tx();
  3737                           
  3738                           ;incstack = 0
  3739                           ; Regs used in _EUSART_Init: [wreg+status,2+status,0+pclath+cstack]
  3740  0208  2242               	fcall	_EUSART_Tx
  3741                           
  3742                           ;../library/eusart.c: 33:       SYNC = 0;
  3743  0209  121E               	bcf	30,4	;volatile
  3744                           
  3745                           ;../library/eusart.c: 34:       BRG16 = 1;
  3746  020A  159F               	bsf	31,3	;volatile
  3747                           
  3748                           ;../library/eusart.c: 35:       BRGH = 1;
  3749  020B  151E               	bsf	30,2	;volatile
  3750                           
  3751                           ;../library/eusart.c: 39:       SPBRGH = 0;
  3752  020C  019C               	clrf	28	;volatile
  3753                           
  3754                           ;../library/eusart.c: 40:       SPBRGL = 0x67;
  3755  020D  3067               	movlw	103
  3756  020E  009B               	movwf	27	;volatile
  3757                           
  3758                           ;../library/eusart.c: 42:       SPEN = 1;
  3759  020F  179D               	bsf	29,7	;volatile
  3760                           
  3761                           ;../library/eusart.c: 43:       PEIE = 1;
  3762  0210  170B               	bsf	11,6	;volatile
  3763  0211  0008               	return
  3764  0212                     __end_of_EUSART_Init:	
  3765                           
  3766                           	psect	text28
  3767  0242                     __ptext28:	
  3768 ;; *************** function _EUSART_Tx *****************
  3769 ;; Defined at:
  3770 ;;		line 5 in file "../library/eusart.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		None
  3779 ;; Tracked objects:
  3780 ;;		On entry : 1F/1
  3781 ;;		On exit  : 1F/3
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMMON   BANK0   BANK1
  3784 ;;      Params:         0       0       0
  3785 ;;      Locals:         0       0       0
  3786 ;;      Temps:          0       0       0
  3787 ;;      Totals:         0       0       0
  3788 ;;Total ram usage:        0 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_EUSART_Init
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _EUSART_Tx
  3800  0242                     _EUSART_Tx:	
  3801                           
  3802                           ;../library/eusart.c: 8:     TXCKSEL = 0;
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _EUSART_Tx: []
  3806  0242  0022               	movlb	2	; select bank2
  3807  0243  111D               	bcf	29,2	;volatile
  3808                           
  3809                           ;../library/eusart.c: 11:     TXEN = 1;
  3810  0244  0023               	movlb	3	; select bank3
  3811  0245  169E               	bsf	30,5	;volatile
  3812  0246  0008               	return
  3813  0247                     __end_of_EUSART_Tx:	
  3814                           
  3815                           	psect	text29
  3816  0247                     __ptext29:	
  3817 ;; *************** function _BEEP_Init *****************
  3818 ;; Defined at:
  3819 ;;		line 87 in file "main.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		None
  3828 ;; Tracked objects:
  3829 ;;		On entry : B1F/2
  3830 ;;		On exit  : B1F/0
  3831 ;;		Unchanged: B00/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1
  3833 ;;      Params:         0       0       0
  3834 ;;      Locals:         0       0       0
  3835 ;;      Temps:          0       0       0
  3836 ;;      Totals:         0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _BEEP_Init
  3849  0247                     _BEEP_Init:	
  3850                           
  3851                           ;main.c: 88:     TRISC3 = 0;
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _BEEP_Init: []
  3855  0247  0021               	movlb	1	; select bank1
  3856  0248  118E               	bcf	14,3	;volatile
  3857                           
  3858                           ;main.c: 89:     RC3 = 1;
  3859  0249  0020               	movlb	0	; select bank0
  3860  024A  158E               	bsf	14,3	;volatile
  3861  024B  0008               	return
  3862  024C                     __end_of_BEEP_Init:	
  3863                           
  3864                           	psect	text30
  3865  0224                     __ptext30:	
  3866 ;; *************** function _ADC_Init *****************
  3867 ;; Defined at:
  3868 ;;		line 101 in file "main.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg
  3877 ;; Tracked objects:
  3878 ;;		On entry : B1F/0
  3879 ;;		On exit  : B1F/1
  3880 ;;		Unchanged: B00/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1
  3882 ;;      Params:         0       0       0
  3883 ;;      Locals:         0       0       0
  3884 ;;      Temps:          0       0       0
  3885 ;;      Totals:         0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    1
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           
  3897                           ;psect for function _ADC_Init
  3898  0224                     _ADC_Init:	
  3899                           
  3900                           ;main.c: 102:     FVRCON = 0B01010001;
  3901                           
  3902                           ;incstack = 0
  3903                           ; Regs used in _ADC_Init: [wreg]
  3904  0224  3051               	movlw	81
  3905  0225  0022               	movlb	2	; select bank2
  3906  0226  0097               	movwf	23	;volatile
  3907                           
  3908                           ;main.c: 103:     ADCON1 = 0B10000000;
  3909  0227  3080               	movlw	128
  3910  0228  0021               	movlb	1	; select bank1
  3911  0229  009E               	movwf	30	;volatile
  3912                           
  3913                           ;main.c: 104:     ADCON0 = 0B01111100;
  3914  022A  307C               	movlw	124
  3915  022B  009D               	movwf	29	;volatile
  3916  022C  0008               	return
  3917  022D                     __end_of_ADC_Init:	
  3918                           
  3919                           	psect	intentry
  3920  0004                     __pintentry:	
  3921 ;; *************** function _ISR *****************
  3922 ;; Defined at:
  3923 ;;		line 141 in file "main.c"
  3924 ;; Parameters:    Size  Location     Type
  3925 ;;		None
  3926 ;; Auto vars:     Size  Location     Type
  3927 ;;		None
  3928 ;; Return value:  Size  Location     Type
  3929 ;;                  1    wreg      void 
  3930 ;; Registers used:
  3931 ;;		None
  3932 ;; Tracked objects:
  3933 ;;		On entry : 0/0
  3934 ;;		On exit  : 0/0
  3935 ;;		Unchanged: 0/0
  3936 ;; Data sizes:     COMMON   BANK0   BANK1
  3937 ;;      Params:         0       0       0
  3938 ;;      Locals:         0       0       0
  3939 ;;      Temps:          0       0       0
  3940 ;;      Totals:         0       0       0
  3941 ;;Total ram usage:        0 bytes
  3942 ;; Hardware stack levels used:    1
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		Interrupt level 1
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950  0004                     _ISR:	
  3951                           
  3952                           ;incstack = 0
  3953  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  3954                           
  3955                           ; Regs used in _ISR: []
  3956  0005  3180               	pagesel	$
  3957                           
  3958                           ;main.c: 143:     if(IOCIF && IOCAF4) {
  3959  0006  1C0B               	btfss	11,0	;volatile
  3960  0007  280F               	goto	i1l405
  3961  0008  0027               	movlb	7	; select bank7
  3962  0009  1E13               	btfss	19,4	;volatile
  3963  000A  280F               	goto	i1l405
  3964                           
  3965                           ;main.c: 144:         IOCIE = 0;
  3966  000B  118B               	bcf	11,3	;volatile
  3967                           
  3968                           ;main.c: 145:         IOCIF = 0;
  3969  000C  100B               	bcf	11,0	;volatile
  3970                           
  3971                           ;main.c: 146:         IOCAF4 = 0;
  3972  000D  1213               	bcf	19,4	;volatile
  3973                           
  3974                           ;main.c: 153:         IOCIE = 1;
  3975                           
  3976                           ;main.c: 148:         if(RA4 == 1) {
  3977                           ;main.c: 151:         }
  3978  000E  158B               	bsf	11,3	;volatile
  3979  000F                     i1l405:	
  3980  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3981  0010  0009               	retfie
  3982  0011                     __end_of_ISR:	
  3983  007E                     btemp	set	126	;btemp
  3984  007E                     int$flags	set	126
  3985  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        75
    BSS         10
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      79
    BANK1            32      0      25

Pointer List with Targets:

    NRF_Rx_Set_P0@addr	PTR unsigned char  size(1) Largest target is 5
		 -> rx_addr_0(BANK0[5]), 

    NRF_Read_RX_Pload@pBuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_RxPacket@rxbuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_Write_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> rx_addr_0(BANK0[5]), RX_ADDRESS_P5(BANK0[5]), RX_ADDRESS_P4(BANK0[5]), RX_ADDRESS_P3(BANK0[5]), 
		 -> RX_ADDRESS_P2(BANK0[5]), RX_ADDRESS_P1(BANK0[5]), RX_ADDRESS_P0(BANK0[5]), NRF_Check@tuf(BANK0[5]), 

    NRF_Read_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> WirelessPad@rxbuf(BANK0[2]), NRF_Check@buf(BANK0[5]), 


Critical Paths under _main in COMMON

    _WirelessPad->_NRF_RxPacket
    _NRF_Rx_Set_P0->_NRF_Write_Buf
    _NRF_Rx_Set->_NRF_Write_Reg
    _NRF_Rx_Receive->_NRF_Write_Reg
    _NRF_RxPacket->_NRF_Read_RX_Pload
    _NRF_Read_RX_Pload->_NRF_Read_Buf
    _NRF_Get_Status->_NRF_Read_Reg
    _NRF_Read_Reg->_NRF_SPI_RW
    _NRF_Flush_RX->_NRF_Write_Reg
    _NRF_Clear_IRQ->_NRF_Write_Reg
    _NRF_Write_Reg->_NRF_SPI_RW
    _NRF_Check->_NRF_Read_Buf
    _NRF_Write_Buf->_NRF_SPI_RW
    _NRF_Read_Buf->_NRF_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WirelessPad
    _WirelessPad->_NRF_Check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23582
                           _ADC_Init
                          _BEEP_Init
                        _EUSART_Init
                          _FOSC_Init
                           _LED_Init
                          _PORT_Init
                        _WirelessPad
 ---------------------------------------------------------------------------------
 (1) _WirelessPad                                          8     8      0   23582
                                             11 BANK0      8     8      0
                        _EUSART_Send
                               _LEDx
                          _NRF_Check
                      _NRF_Clear_IRQ
                             _NRF_On
                      _NRF_Port_Init
                       _NRF_RxPacket
                     _NRF_Rx_Receive
                         _NRF_Rx_Set
                      _NRF_Rx_Set_P0
                       _NRF_SPI_Init
 ---------------------------------------------------------------------------------
 (2) _NRF_SPI_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set_P0                                        4     3      1    5382
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set                                           3     2      1    2909
                                              5 COMMON     3     2      1
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Receive                                       1     1      0    2789
                                              5 COMMON     1     1      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_RxPacket                                         3     3      0    6450
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                       _NRF_Flush_RX
                     _NRF_Get_Status
                  _NRF_Read_RX_Pload
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Read_RX_Pload                                    5     5      0     702
                                              8 COMMON     5     5      0
            _NRF_Get_Current_Pipenum
                       _NRF_Read_Buf
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Get_Current_Pipenum                              0     0      0      67
                     _NRF_Get_Status
 ---------------------------------------------------------------------------------
 (5) _NRF_Get_Status                                       0     0      0      67
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Reg                                         3     3      0      67
                                              1 COMMON     3     3      0
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _NRF_Flush_RX                                         0     0      0    2789
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Clear_IRQ                                        7     7      0    2865
                                              5 COMMON     4     4      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Reg                                        4     3      1    2789
                                              1 COMMON     4     3      1
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _NRF_Check                                           13    13      0    3092
                                              8 COMMON     2     2      0
                                              0 BANK0     11    11      0
                       _NRF_Read_Buf
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Buf                                        6     4      2    2440
                                              1 COMMON     6     4      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Buf                                         7     5      2     445
                                              1 COMMON     7     5      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_SPI_RW                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LEDx                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Send                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FOSC_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0       0
                          _EUSART_Tx
 ---------------------------------------------------------------------------------
 (2) _EUSART_Tx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEEP_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _BEEP_Init
   _EUSART_Init
     _EUSART_Tx
   _FOSC_Init
   _LED_Init
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _WirelessPad
     _EUSART_Send
     _LEDx
     _NRF_Check
       _NRF_Read_Buf
         _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_Clear_IRQ
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_On
     _NRF_Port_Init
     _NRF_RxPacket
       _NRF_Flush_RX
         _NRF_Write_Reg
           _NRF_SPI_RW
       _NRF_Get_Status
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Read_RX_Pload
         _NRF_Get_Current_Pipenum
           _NRF_Get_Status
             _NRF_Read_Reg
               _NRF_SPI_RW
         _NRF_Read_Buf
           _NRF_SPI_RW
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Receive
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set_P0
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_SPI_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      76       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      19       8       78.1%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      76       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 21 01:32:47 2019

      __size_of_NRF_Read_RX_Pload 0017                       __CFG_CP$OFF 0000                                l93 01EE  
              __size_of_BEEP_Init 0005                    NRF_Check@F2230 0065                    NRF_Check@F2228 0025  
                             l113 0138                               l107 0102                               l410 0234  
                             l492 0239                               _RA0 0060                               _RA2 0062  
                             _RA4 0064                               _RA5 0065                               _RC3 0073  
                             u210 003D                               u220 0048                               u337 0088  
                    __CFG_CPD$OFF 0000                               u347 00AF                               _ISR 0004  
                             u357 01CA                               u367 0179                               u377 0182  
                    __CFG_BORV$LO 0000                               wreg 0009                        _TX_ADDRESS 002A  
                    ?_EUSART_Init 0070                      __CFG_LVP$OFF 0000                      ?_EUSART_Send 0070  
               NRF_Rx_Set_P0@addr 007A                              ?_ISR 0070                              l1521 01BE  
                            l1505 0152                              l1419 00EE                              l1507 0153  
                            l1437 0126                              l1517 01BC                              l1551 016F  
                            l1483 0074                              l1475 0060                              l1575 009F  
                            l1567 0093                              l1489 007A                              l1569 0096  
                            _BRGH 0CF2                              _LATA 010C                              _LATC 010E  
                            _PEIE 005E                              _LEDx 016E                              _SPEN 0CEF  
                            _TRMT 0CF1                              _TXEN 0CF5                              _SYNC 0CF4  
                    __CFG_WRT$OFF 0000                  WirelessPad@F2247 006A                              _main 022D  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                  __end_of_ADC_Init 022D                __size_of_FOSC_Init 0004  
                            start 0011                     __CFG_IESO$OFF 0000                __size_of_EUSART_Tx 0005  
                NRF_Write_Buf@len 0072                  NRF_Write_Buf@reg 0075                  NRF_Write_Reg@reg 0073  
                           ??_ISR 0070                  WirelessPad@rxbuf 0063                             ?_LEDx 0070  
                __end_of_LED_Init 0258                       ?_NRF_SPI_RW 0070                      _tx_pad_chair 026E  
                           ?_main 0070                             _BRG16 0CFB                     __CFG_WDTE$OFF 0000  
                           _LATC3 0873                             _IOCIE 005B                             _IOCIF 0058  
                    _tx_pad_potty 026A                             i1l405 000F                             _PORTA 000C  
                           _PORTC 000E                             _TRISA 008C                             _TRISC 008E  
                           _TXREG 019A                __size_of_NRF_Check 0049                       ?_NRF_Rx_Set 0075  
         _NRF_Get_Current_Pipenum 024C                       ?_PORTA_Init 0070                    __CFG_FCMEN$OFF 0000  
                     ?_PORTC_Init 0070           __size_of_NRF_Get_Status 0003             NRF_Read_RX_Pload@pBuf 007B  
              __size_of_PORT_Init 0003             NRF_Read_RX_Pload@pipe 007C                    __CFG_BOREN$OFF 0000  
               __end_of_BEEP_Init 024C                             status 0003                             wtemp0 007E  
               NRF_Write_Buf@pBuf 0071                      __end_of_LEDx 0187                    __CFG_MCLRE$OFF 0000  
                 __initialization 0012                      __end_of_main 0235                            ??_LEDx 0070  
                          ??_main 007E                     _RX_ADDRESS_P0 004D                     _RX_ADDRESS_P1 0048  
                   _RX_ADDRESS_P2 0043                     _RX_ADDRESS_P3 003E                     _RX_ADDRESS_P4 0039  
                   _RX_ADDRESS_P5 0034                    __CFG_PLLEN$OFF 0000                 __end_of_FOSC_Init 025C  
               __end_of_EUSART_Tx 0247             __end_of_NRF_Clear_IRQ 01C1                            _ADCON0 009D  
                          _ADCON1 009E                            _ANSELA 018C                            _ANSELC 018E  
                          _IOCAF4 1C9C                            _FVRCON 0117                            _OSCCON 0099  
                          _SPBRGH 019C                            _SPBRGL 019B                            _NRF_On 0272  
                          _SSP1IF 008B                            _TRISA0 0460                            _TRISA2 0462  
                          _TRISC0 0470                            _TRISC1 0471                            _TRISC2 0472  
                          _TRISC3 0473               __size_of_NRF_SPI_RW 000C                    __CFG_PWRTE$OFF 0000  
               __end_of_NRF_Check 007C               __size_of_NRF_Rx_Set 001B               __size_of_PORTA_Init 0009  
             __size_of_PORTC_Init 0009                 __end_of_PORT_Init 0262         ??_NRF_Get_Current_Pipenum 0074  
         __size_of_NRF_Rx_Receive 000D            NRF_Read_RX_Pload@width 007A                         ?_ADC_Init 0070  
           __end_of_NRF_Rx_Set_P0 01B1             __end_of_NRF_Port_Init 0208              __size_of_EUSART_Init 000A  
            __size_of_EUSART_Send 0007           __end_of__initialization 0030                         ?_LED_Init 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 00B7                      __pidataBANK1 0155  
           __end_of_NRF_Write_Buf 013B             __end_of_NRF_Write_Reg 01E8                NRF_Write_Reg@value 0071  
                      ??_ADC_Init 0070                     ??_WirelessPad 005D                    _NRF_Get_Status 025C  
                      __pbssBANK0 0065                           ?_NRF_On 0070                        ??_LED_Init 0070  
                         LEDx@num 0071              NRF_Rx_Set_P0@buf_len 0077                        __pmaintext 022D  
                   ?_NRF_SPI_Init 0070                        __pintentry 0004                      ??_NRF_SPI_RW 0070  
          __end_of_NRF_Get_Status 025F                      ??_NRF_Rx_Set 0076                      ??_PORTA_Init 0070  
                    ??_PORTC_Init 0070                     ?_NRF_Flush_RX 0070                     ?_NRF_Read_Buf 0071  
                   ?_NRF_Read_Reg 0070                           _SSP1BUF 0211                           _TXCKSEL 08EA  
             __end_of_WirelessPad 00B7                    NRF_Rx_Set@pipe 0075                     ?_NRF_RxPacket 0070  
                 __size_of_NRF_On 0002                        _pad_aux_ok 0266                        _pad_aux_on 0264  
              __end_of_NRF_SPI_RW 01F4                         _BEEP_Init 0247                    ??_NRF_SPI_Init 0070  
              __end_of_NRF_Rx_Set 0120                __end_of_PORTA_Init 0224                __end_of_PORTC_Init 021B  
                 __CFG_STVREN$OFF 0000                           __ptext1 007C                           __ptext2 01F4  
                         __ptext3 019E                           __ptext4 0105                           __ptext5 01C1  
                         __ptext6 013B                           __ptext7 0187                           __ptext8 024C  
                         __ptext9 025C                    _NRF_Rx_Receive 01C1                      __size_of_ISR 000D  
                 ?_NRF_Get_Status 0070                    ??_NRF_Flush_RX 0075                    ??_NRF_Read_Buf 0073  
                  ??_NRF_Read_Reg 0071                           _tx_addr 0020                         _FOSC_Init 0258  
            end_of_initialization 0030                         _EUSART_Tx 0242                    ??_NRF_RxPacket 007D  
                         init_ram 023C                           initloop 023D                        ?_BEEP_Init 0070  
                       _NRF_Check 0033                     NRF_SPI_RW@dat 0070            __end_of_NRF_Rx_Receive 01CE  
                 NRF_Read_Buf@len 0072                   NRF_Read_Buf@reg 0076                         _PORT_Init 025F  
                 NRF_Read_Reg@reg 0072                  __CFG_FOSC$INTOSC 0000                       _WirelessPad 007C  
               __size_of_ADC_Init 0009                        ?_FOSC_Init 0070                        ?_EUSART_Tx 0070  
                  NRF_Write_Buf@i 0076                        _tx_pad_bed 0268                        _tx_pad_aux 0270  
                      _tx_pad_nci 026C                    __end_of_NRF_On 0274                 __size_of_LED_Init 0004  
          __size_of_NRF_Clear_IRQ 0010                        ?_NRF_Check 0070                   ?_NRF_Rx_Receive 0070  
                      ?_PORT_Init 0070               start_initialization 0012                       __end_of_ISR 0011  
            __end_of_NRF_SPI_Init 01FE                     ??_EUSART_Init 0070                     ??_EUSART_Send 0070  
              NRF_RxPacket@status 0053               NRF_Write_Reg@status 0074                          ??_NRF_On 0070  
                     ??_BEEP_Init 0070              __end_of_NRF_Flush_RX 0254              __end_of_NRF_Read_Buf 0105  
            __end_of_NRF_Read_Reg 01DB          ?_NRF_Get_Current_Pipenum 0070                       __pdataBANK0 0020  
                     __pdataBANK1 00A0            __size_of_NRF_Rx_Set_P0 0013              __end_of_NRF_RxPacket 0155  
          __size_of_NRF_Port_Init 000A                     NRF_Read_Buf@i 0077                         ___latbits 0000  
                   __pcstackBANK0 0052                 NRF_Clear_IRQ@temp 0078                     _NRF_Clear_IRQ 01B1  
                     ??_FOSC_Init 0070                       ??_EUSART_Tx 0070            __size_of_NRF_Write_Buf 001B  
          __size_of_NRF_Write_Reg 000D               __end_of_EUSART_Init 0212               __end_of_EUSART_Send 023C  
             __end_of_pad_aux_off 0264                       ??_NRF_Check 0078                  ??_NRF_Get_Status 0074  
                     ??_PORT_Init 0070                     NRF_Rx_Set@ack 0077                        NRF_Check@i 005C  
                        _ADC_Init 0224                    ?_NRF_Clear_IRQ 0070                     _NRF_Rx_Set_P0 019E  
                   _NRF_Port_Init 01FE                          _LED_Init 0254                          _PAD_MODE 006E  
 __end_of_NRF_Get_Current_Pipenum 0250                          _SSP1CON1 0215                          _SSP1STAT 0214  
                   _NRF_Write_Buf 0120                     _NRF_Write_Reg 01DB                         _rx_addr_0 002F  
                       _rx_addr_1 00B4                         _rx_addr_2 00AF                         _rx_addr_3 00AA  
                       _rx_addr_4 00A5                         _rx_addr_5 00A0             __size_of_NRF_SPI_Init 000A  
                    NRF_Check@buf 0057                      NRF_Check@tuf 0052                      ?_WirelessPad 0070  
                     _EUSART_Init 0208                    ?_NRF_Rx_Set_P0 0077                       _EUSART_Send 0235  
                  ?_NRF_Port_Init 0070                       _pad_aux_dat 006C                       _pad_aux_off 0262  
           __size_of_NRF_Flush_RX 0004             __size_of_NRF_Read_Buf 001C             __size_of_NRF_Read_Reg 000D  
               NRF_RxPacket@rxbuf 0052                  ??_NRF_Rx_Receive 0075             __size_of_NRF_RxPacket 001A  
                    _NRF_SPI_Init 01F4                    ?_NRF_Write_Buf 0071                    ?_NRF_Write_Reg 0071  
               _NRF_Read_RX_Pload 0187                ?_NRF_Read_RX_Pload 0070                   ??_NRF_Clear_IRQ 0075  
              __end_of_pad_aux_ok 0268                __end_of_pad_aux_on 0266               ??_NRF_Read_RX_Pload 0078  
                    _NRF_Flush_RX 0250                          __ptext10 01CE                          __ptext11 0250  
                        __ptext20 016E                          __ptext12 01FE                          __ptext21 0235  
                        __ptext13 0272                          __ptext30 0224                          __ptext22 025F  
                        __ptext14 01B1                          __ptext23 0212                          __ptext15 01DB  
                        __ptext24 021B                          __ptext16 0033                          __ptext25 0254  
                        __ptext17 0120                          __ptext26 0258                          __ptext18 00E9  
                        __ptext27 0208                          __ptext19 01E8                          __ptext28 0242  
                        __ptext29 0247                      _NRF_Read_Buf 00E9                      _NRF_Read_Reg 01CE  
                   __size_of_LEDx 0019              __end_of_tx_pad_chair 0270                      _NRF_RxPacket 013B  
                   __size_of_main 0008              __end_of_tx_pad_potty 026C         __end_of_NRF_Read_RX_Pload 019E  
                        int$flags 007E                      _SSP1STATbits 0214                   ??_NRF_Rx_Set_P0 0078  
__size_of_NRF_Get_Current_Pipenum 0004                   ??_NRF_Port_Init 0070                    EUSART_Send@dat 0070  
                        intlevel1 0000                 __CFG_CLKOUTEN$OFF 0000                   ??_NRF_Write_Buf 0073  
                 ??_NRF_Write_Reg 0072                        _NRF_SPI_RW 01E8                     __pstringtext1 0262  
                   __pstringtext2 0264                     __pstringtext3 0266                     __pstringtext4 0268  
                   __pstringtext5 026A                     __pstringtext6 026C                     __pstringtext7 026E  
                   __pstringtext8 0270                NRF_Read_Reg@status 0073                __end_of_tx_pad_bed 026A  
              __end_of_tx_pad_aux 0272                __end_of_tx_pad_nci 026E                        _NRF_Rx_Set 0105  
                      _PORTA_Init 021B                        _PORTC_Init 0212                  NRF_Read_Buf@pBuf 0071  
            __size_of_WirelessPad 003B  
