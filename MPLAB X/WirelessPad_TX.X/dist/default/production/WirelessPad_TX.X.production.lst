

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 21 01:35:30 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	inittext,global,class=CODE,delta=2
    20                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    22                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    23                           	psect	text1,local,class=CODE,merge=1,delta=2
    24                           	psect	text2,local,class=CODE,merge=1,delta=2
    25                           	psect	text3,local,class=CODE,merge=1,delta=2
    26                           	psect	text4,local,class=CODE,merge=1,delta=2
    27                           	psect	text5,local,class=CODE,merge=1,delta=2
    28                           	psect	text6,local,class=CODE,merge=1,delta=2
    29                           	psect	text7,local,class=CODE,merge=1,delta=2
    30                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text10,local,class=CODE,merge=1,delta=2
    33                           	psect	text11,local,class=CODE,merge=1,delta=2
    34                           	psect	text12,local,class=CODE,merge=1,delta=2
    35                           	psect	text13,local,class=CODE,merge=1,delta=2
    36                           	psect	text14,local,class=CODE,merge=1,delta=2
    37                           	psect	text15,local,class=CODE,merge=1,delta=2
    38                           	psect	text16,local,class=CODE,merge=1,delta=2
    39                           	psect	text17,local,class=CODE,merge=1,delta=2
    40                           	psect	text18,local,class=CODE,merge=1,delta=2
    41                           	psect	text19,local,class=CODE,merge=1,delta=2
    42                           	psect	text20,local,class=CODE,merge=1,delta=2
    43                           	psect	text21,local,class=CODE,merge=1,delta=2
    44                           	psect	text22,local,class=CODE,merge=1,delta=2
    45                           	psect	text23,local,class=CODE,merge=1,delta=2
    46                           	psect	text24,local,class=CODE,merge=1,delta=2
    47                           	psect	text25,local,class=CODE,merge=1,delta=2
    48                           	psect	text26,local,class=CODE,merge=1,delta=2
    49                           	psect	text27,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.10
    54                           ; Generated 31/07/2019 GMT
    55                           ; 
    56                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F1823 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  010C                     	;# 
   130  010E                     	;# 
   131  0111                     	;# 
   132  0112                     	;# 
   133  0113                     	;# 
   134  0114                     	;# 
   135  0115                     	;# 
   136  0116                     	;# 
   137  0117                     	;# 
   138  0118                     	;# 
   139  0119                     	;# 
   140  011A                     	;# 
   141  011B                     	;# 
   142  011D                     	;# 
   143  011D                     	;# 
   144  018C                     	;# 
   145  018E                     	;# 
   146  0191                     	;# 
   147  0191                     	;# 
   148  0192                     	;# 
   149  0193                     	;# 
   150  0193                     	;# 
   151  0193                     	;# 
   152  0194                     	;# 
   153  0195                     	;# 
   154  0196                     	;# 
   155  0199                     	;# 
   156  019A                     	;# 
   157  019B                     	;# 
   158  019B                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019C                     	;# 
   162  019C                     	;# 
   163  019D                     	;# 
   164  019E                     	;# 
   165  019F                     	;# 
   166  020C                     	;# 
   167  020E                     	;# 
   168  0211                     	;# 
   169  0211                     	;# 
   170  0212                     	;# 
   171  0212                     	;# 
   172  0213                     	;# 
   173  0213                     	;# 
   174  0214                     	;# 
   175  0214                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0391                     	;# 
   192  0392                     	;# 
   193  0393                     	;# 
   194  039A                     	;# 
   195  039C                     	;# 
   196  039D                     	;# 
   197  039E                     	;# 
   198  039F                     	;# 
   199  0FE4                     	;# 
   200  0FE5                     	;# 
   201  0FE6                     	;# 
   202  0FE7                     	;# 
   203  0FE8                     	;# 
   204  0FE9                     	;# 
   205  0FEA                     	;# 
   206  0FEB                     	;# 
   207  0FED                     	;# 
   208  0FEE                     	;# 
   209  0FEF                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000E                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0095                     	;# 
   242  0096                     	;# 
   243  0097                     	;# 
   244  0098                     	;# 
   245  0099                     	;# 
   246  009A                     	;# 
   247  009B                     	;# 
   248  009B                     	;# 
   249  009C                     	;# 
   250  009D                     	;# 
   251  009E                     	;# 
   252  010C                     	;# 
   253  010E                     	;# 
   254  0111                     	;# 
   255  0112                     	;# 
   256  0113                     	;# 
   257  0114                     	;# 
   258  0115                     	;# 
   259  0116                     	;# 
   260  0117                     	;# 
   261  0118                     	;# 
   262  0119                     	;# 
   263  011A                     	;# 
   264  011B                     	;# 
   265  011D                     	;# 
   266  011D                     	;# 
   267  018C                     	;# 
   268  018E                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0199                     	;# 
   279  019A                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019C                     	;# 
   285  019C                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019F                     	;# 
   289  020C                     	;# 
   290  020E                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0291                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0295                     	;# 
   313  0296                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  039A                     	;# 
   318  039C                     	;# 
   319  039D                     	;# 
   320  039E                     	;# 
   321  039F                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  000E                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001E                     	;# 
   359  001F                     	;# 
   360  008C                     	;# 
   361  008E                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009B                     	;# 
   372  009C                     	;# 
   373  009D                     	;# 
   374  009E                     	;# 
   375  010C                     	;# 
   376  010E                     	;# 
   377  0111                     	;# 
   378  0112                     	;# 
   379  0113                     	;# 
   380  0114                     	;# 
   381  0115                     	;# 
   382  0116                     	;# 
   383  0117                     	;# 
   384  0118                     	;# 
   385  0119                     	;# 
   386  011A                     	;# 
   387  011B                     	;# 
   388  011D                     	;# 
   389  011D                     	;# 
   390  018C                     	;# 
   391  018E                     	;# 
   392  0191                     	;# 
   393  0191                     	;# 
   394  0192                     	;# 
   395  0193                     	;# 
   396  0193                     	;# 
   397  0193                     	;# 
   398  0194                     	;# 
   399  0195                     	;# 
   400  0196                     	;# 
   401  0199                     	;# 
   402  019A                     	;# 
   403  019B                     	;# 
   404  019B                     	;# 
   405  019B                     	;# 
   406  019B                     	;# 
   407  019C                     	;# 
   408  019C                     	;# 
   409  019D                     	;# 
   410  019E                     	;# 
   411  019F                     	;# 
   412  020C                     	;# 
   413  020E                     	;# 
   414  0211                     	;# 
   415  0211                     	;# 
   416  0212                     	;# 
   417  0212                     	;# 
   418  0213                     	;# 
   419  0213                     	;# 
   420  0214                     	;# 
   421  0214                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0216                     	;# 
   426  0216                     	;# 
   427  0217                     	;# 
   428  0217                     	;# 
   429  0291                     	;# 
   430  0291                     	;# 
   431  0292                     	;# 
   432  0293                     	;# 
   433  0294                     	;# 
   434  0295                     	;# 
   435  0295                     	;# 
   436  0296                     	;# 
   437  0391                     	;# 
   438  0392                     	;# 
   439  0393                     	;# 
   440  039A                     	;# 
   441  039C                     	;# 
   442  039D                     	;# 
   443  039E                     	;# 
   444  039F                     	;# 
   445  0FE4                     	;# 
   446  0FE5                     	;# 
   447  0FE6                     	;# 
   448  0FE7                     	;# 
   449  0FE8                     	;# 
   450  0FE9                     	;# 
   451  0FEA                     	;# 
   452  0FEB                     	;# 
   453  0FED                     	;# 
   454  0FEE                     	;# 
   455  0FEF                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000E                     	;# 
   470  0011                     	;# 
   471  0012                     	;# 
   472  0015                     	;# 
   473  0016                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001C                     	;# 
   481  001E                     	;# 
   482  001F                     	;# 
   483  008C                     	;# 
   484  008E                     	;# 
   485  0091                     	;# 
   486  0092                     	;# 
   487  0095                     	;# 
   488  0096                     	;# 
   489  0097                     	;# 
   490  0098                     	;# 
   491  0099                     	;# 
   492  009A                     	;# 
   493  009B                     	;# 
   494  009B                     	;# 
   495  009C                     	;# 
   496  009D                     	;# 
   497  009E                     	;# 
   498  010C                     	;# 
   499  010E                     	;# 
   500  0111                     	;# 
   501  0112                     	;# 
   502  0113                     	;# 
   503  0114                     	;# 
   504  0115                     	;# 
   505  0116                     	;# 
   506  0117                     	;# 
   507  0118                     	;# 
   508  0119                     	;# 
   509  011A                     	;# 
   510  011B                     	;# 
   511  011D                     	;# 
   512  011D                     	;# 
   513  018C                     	;# 
   514  018E                     	;# 
   515  0191                     	;# 
   516  0191                     	;# 
   517  0192                     	;# 
   518  0193                     	;# 
   519  0193                     	;# 
   520  0193                     	;# 
   521  0194                     	;# 
   522  0195                     	;# 
   523  0196                     	;# 
   524  0199                     	;# 
   525  019A                     	;# 
   526  019B                     	;# 
   527  019B                     	;# 
   528  019B                     	;# 
   529  019B                     	;# 
   530  019C                     	;# 
   531  019C                     	;# 
   532  019D                     	;# 
   533  019E                     	;# 
   534  019F                     	;# 
   535  020C                     	;# 
   536  020E                     	;# 
   537  0211                     	;# 
   538  0211                     	;# 
   539  0212                     	;# 
   540  0212                     	;# 
   541  0213                     	;# 
   542  0213                     	;# 
   543  0214                     	;# 
   544  0214                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0215                     	;# 
   548  0216                     	;# 
   549  0216                     	;# 
   550  0217                     	;# 
   551  0217                     	;# 
   552  0291                     	;# 
   553  0291                     	;# 
   554  0292                     	;# 
   555  0293                     	;# 
   556  0294                     	;# 
   557  0295                     	;# 
   558  0295                     	;# 
   559  0296                     	;# 
   560  0391                     	;# 
   561  0392                     	;# 
   562  0393                     	;# 
   563  039A                     	;# 
   564  039C                     	;# 
   565  039D                     	;# 
   566  039E                     	;# 
   567  039F                     	;# 
   568  0FE4                     	;# 
   569  0FE5                     	;# 
   570  0FE6                     	;# 
   571  0FE7                     	;# 
   572  0FE8                     	;# 
   573  0FE9                     	;# 
   574  0FEA                     	;# 
   575  0FEB                     	;# 
   576  0FED                     	;# 
   577  0FEE                     	;# 
   578  0FEF                     	;# 
   579  0000                     	;# 
   580  0001                     	;# 
   581  0002                     	;# 
   582  0003                     	;# 
   583  0004                     	;# 
   584  0005                     	;# 
   585  0006                     	;# 
   586  0007                     	;# 
   587  0008                     	;# 
   588  0009                     	;# 
   589  000A                     	;# 
   590  000B                     	;# 
   591  000C                     	;# 
   592  000E                     	;# 
   593  0011                     	;# 
   594  0012                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001E                     	;# 
   605  001F                     	;# 
   606  008C                     	;# 
   607  008E                     	;# 
   608  0091                     	;# 
   609  0092                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0097                     	;# 
   613  0098                     	;# 
   614  0099                     	;# 
   615  009A                     	;# 
   616  009B                     	;# 
   617  009B                     	;# 
   618  009C                     	;# 
   619  009D                     	;# 
   620  009E                     	;# 
   621  010C                     	;# 
   622  010E                     	;# 
   623  0111                     	;# 
   624  0112                     	;# 
   625  0113                     	;# 
   626  0114                     	;# 
   627  0115                     	;# 
   628  0116                     	;# 
   629  0117                     	;# 
   630  0118                     	;# 
   631  0119                     	;# 
   632  011A                     	;# 
   633  011B                     	;# 
   634  011D                     	;# 
   635  011D                     	;# 
   636  018C                     	;# 
   637  018E                     	;# 
   638  0191                     	;# 
   639  0191                     	;# 
   640  0192                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0193                     	;# 
   644  0194                     	;# 
   645  0195                     	;# 
   646  0196                     	;# 
   647  0199                     	;# 
   648  019A                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019B                     	;# 
   653  019C                     	;# 
   654  019C                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019F                     	;# 
   658  020C                     	;# 
   659  020E                     	;# 
   660  0211                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000E                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0015                     	;# 
   719  0016                     	;# 
   720  0016                     	;# 
   721  0017                     	;# 
   722  0018                     	;# 
   723  0019                     	;# 
   724  001A                     	;# 
   725  001B                     	;# 
   726  001C                     	;# 
   727  001E                     	;# 
   728  001F                     	;# 
   729  008C                     	;# 
   730  008E                     	;# 
   731  0091                     	;# 
   732  0092                     	;# 
   733  0095                     	;# 
   734  0096                     	;# 
   735  0097                     	;# 
   736  0098                     	;# 
   737  0099                     	;# 
   738  009A                     	;# 
   739  009B                     	;# 
   740  009B                     	;# 
   741  009C                     	;# 
   742  009D                     	;# 
   743  009E                     	;# 
   744  010C                     	;# 
   745  010E                     	;# 
   746  0111                     	;# 
   747  0112                     	;# 
   748  0113                     	;# 
   749  0114                     	;# 
   750  0115                     	;# 
   751  0116                     	;# 
   752  0117                     	;# 
   753  0118                     	;# 
   754  0119                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011D                     	;# 
   758  011D                     	;# 
   759  018C                     	;# 
   760  018E                     	;# 
   761  0191                     	;# 
   762  0191                     	;# 
   763  0192                     	;# 
   764  0193                     	;# 
   765  0193                     	;# 
   766  0193                     	;# 
   767  0194                     	;# 
   768  0195                     	;# 
   769  0196                     	;# 
   770  0199                     	;# 
   771  019A                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019B                     	;# 
   775  019B                     	;# 
   776  019C                     	;# 
   777  019C                     	;# 
   778  019D                     	;# 
   779  019E                     	;# 
   780  019F                     	;# 
   781  020C                     	;# 
   782  020E                     	;# 
   783  0211                     	;# 
   784  0211                     	;# 
   785  0212                     	;# 
   786  0212                     	;# 
   787  0213                     	;# 
   788  0213                     	;# 
   789  0214                     	;# 
   790  0214                     	;# 
   791  0215                     	;# 
   792  0215                     	;# 
   793  0215                     	;# 
   794  0216                     	;# 
   795  0216                     	;# 
   796  0217                     	;# 
   797  0217                     	;# 
   798  0291                     	;# 
   799  0291                     	;# 
   800  0292                     	;# 
   801  0293                     	;# 
   802  0294                     	;# 
   803  0295                     	;# 
   804  0295                     	;# 
   805  0296                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  0393                     	;# 
   809  039A                     	;# 
   810  039C                     	;# 
   811  039D                     	;# 
   812  039E                     	;# 
   813  039F                     	;# 
   814  0FE4                     	;# 
   815  0FE5                     	;# 
   816  0FE6                     	;# 
   817  0FE7                     	;# 
   818  0FE8                     	;# 
   819  0FE9                     	;# 
   820  0FEA                     	;# 
   821  0FEB                     	;# 
   822  0FED                     	;# 
   823  0FEE                     	;# 
   824  0FEF                     	;# 
   825  0000                     	;# 
   826  0001                     	;# 
   827  0002                     	;# 
   828  0003                     	;# 
   829  0004                     	;# 
   830  0005                     	;# 
   831  0006                     	;# 
   832  0007                     	;# 
   833  0008                     	;# 
   834  0009                     	;# 
   835  000A                     	;# 
   836  000B                     	;# 
   837  000C                     	;# 
   838  000E                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0015                     	;# 
   842  0016                     	;# 
   843  0016                     	;# 
   844  0017                     	;# 
   845  0018                     	;# 
   846  0019                     	;# 
   847  001A                     	;# 
   848  001B                     	;# 
   849  001C                     	;# 
   850  001E                     	;# 
   851  001F                     	;# 
   852  008C                     	;# 
   853  008E                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0095                     	;# 
   857  0096                     	;# 
   858  0097                     	;# 
   859  0098                     	;# 
   860  0099                     	;# 
   861  009A                     	;# 
   862  009B                     	;# 
   863  009B                     	;# 
   864  009C                     	;# 
   865  009D                     	;# 
   866  009E                     	;# 
   867  010C                     	;# 
   868  010E                     	;# 
   869  0111                     	;# 
   870  0112                     	;# 
   871  0113                     	;# 
   872  0114                     	;# 
   873  0115                     	;# 
   874  0116                     	;# 
   875  0117                     	;# 
   876  0118                     	;# 
   877  0119                     	;# 
   878  011A                     	;# 
   879  011B                     	;# 
   880  011D                     	;# 
   881  011D                     	;# 
   882  018C                     	;# 
   883  018E                     	;# 
   884  0191                     	;# 
   885  0191                     	;# 
   886  0192                     	;# 
   887  0193                     	;# 
   888  0193                     	;# 
   889  0193                     	;# 
   890  0194                     	;# 
   891  0195                     	;# 
   892  0196                     	;# 
   893  0199                     	;# 
   894  019A                     	;# 
   895  019B                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019C                     	;# 
   900  019C                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019F                     	;# 
   904  020C                     	;# 
   905  020E                     	;# 
   906  0211                     	;# 
   907  0211                     	;# 
   908  0212                     	;# 
   909  0212                     	;# 
   910  0213                     	;# 
   911  0213                     	;# 
   912  0214                     	;# 
   913  0214                     	;# 
   914  0215                     	;# 
   915  0215                     	;# 
   916  0215                     	;# 
   917  0216                     	;# 
   918  0216                     	;# 
   919  0217                     	;# 
   920  0217                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0294                     	;# 
   926  0295                     	;# 
   927  0295                     	;# 
   928  0296                     	;# 
   929  0391                     	;# 
   930  0392                     	;# 
   931  0393                     	;# 
   932  039A                     	;# 
   933  039C                     	;# 
   934  039D                     	;# 
   935  039E                     	;# 
   936  039F                     	;# 
   937  0FE4                     	;# 
   938  0FE5                     	;# 
   939  0FE6                     	;# 
   940  0FE7                     	;# 
   941  0FE8                     	;# 
   942  0FE9                     	;# 
   943  0FEA                     	;# 
   944  0FEB                     	;# 
   945  0FED                     	;# 
   946  0FEE                     	;# 
   947  0FEF                     	;# 
   948                           
   949                           	psect	idataBANK0
   950  01F1                     __pidataBANK0:	
   951                           
   952                           ;initializer for NRF_Check@F2228
   953  01F1  34E1               	retlw	225
   954  01F2  34E2               	retlw	226
   955  01F3  34E3               	retlw	227
   956  01F4  34E4               	retlw	228
   957  01F5  3405               	retlw	5
   958                           
   959                           ;initializer for _tx_addr
   960  01F6  340F               	retlw	15
   961  01F7  340E               	retlw	14
   962  01F8  340D               	retlw	13
   963  01F9  340C               	retlw	12
   964  01FA  340B               	retlw	11
   965                           
   966                           ;initializer for _RX_ADDRESS_P5
   967  01FB  340E               	retlw	14
   968  01FC  3410               	retlw	16
   969  01FD  3409               	retlw	9
   970  01FE  3408               	retlw	8
   971  01FF  3407               	retlw	7
   972                           
   973                           ;initializer for _RX_ADDRESS_P4
   974  0200  340D               	retlw	13
   975  0201  3410               	retlw	16
   976  0202  3409               	retlw	9
   977  0203  3408               	retlw	8
   978  0204  3407               	retlw	7
   979                           
   980                           ;initializer for _RX_ADDRESS_P3
   981  0205  340C               	retlw	12
   982  0206  3410               	retlw	16
   983  0207  3409               	retlw	9
   984  0208  3408               	retlw	8
   985  0209  3407               	retlw	7
   986                           
   987                           ;initializer for _RX_ADDRESS_P2
   988  020A  340B               	retlw	11
   989  020B  3410               	retlw	16
   990  020C  3409               	retlw	9
   991  020D  3408               	retlw	8
   992  020E  3407               	retlw	7
   993                           
   994                           ;initializer for _RX_ADDRESS_P1
   995  020F  340A               	retlw	10
   996  0210  3410               	retlw	16
   997  0211  3409               	retlw	9
   998  0212  3408               	retlw	8
   999  0213  3407               	retlw	7
  1000                           
  1001                           ;initializer for _RX_ADDRESS_P0
  1002  0214  340F               	retlw	15
  1003  0215  340E               	retlw	14
  1004  0216  340D               	retlw	13
  1005  0217  340C               	retlw	12
  1006  0218  340B               	retlw	11
  1007                           
  1008                           	psect	idataBANK1
  1009  0371                     __pidataBANK1:	
  1010                           
  1011                           ;initializer for _TX_ADDRESS
  1012  0371  340F               	retlw	15
  1013  0372  340E               	retlw	14
  1014  0373  340D               	retlw	13
  1015  0374  340C               	retlw	12
  1016  0375  340B               	retlw	11
  1017                           
  1018                           	psect	stringtext1
  1019  038A                     __pstringtext1:	
  1020  038A                     _pad_aux_off:	
  1021  038A  3403               	retlw	3
  1022  038B  3403               	retlw	3
  1023  038C                     __end_of_pad_aux_off:	
  1024                           
  1025                           	psect	stringtext2
  1026  038C                     __pstringtext2:	
  1027  038C                     _pad_aux_on:	
  1028  038C  3402               	retlw	2
  1029  038D  3402               	retlw	2
  1030  038E                     __end_of_pad_aux_on:	
  1031                           
  1032                           	psect	stringtext3
  1033  038E                     __pstringtext3:	
  1034  038E                     _tx_pad_bed:	
  1035  038E  3498               	retlw	152
  1036  038F  3458               	retlw	88
  1037  0390                     __end_of_tx_pad_bed:	
  1038                           
  1039                           	psect	stringtext4
  1040  0390                     __pstringtext4:	
  1041  0390                     _tx_pad_potty:	
  1042  0390  3488               	retlw	136
  1043  0391  3468               	retlw	104
  1044  0392                     __end_of_tx_pad_potty:	
  1045                           
  1046                           	psect	stringtext5
  1047  0392                     __pstringtext5:	
  1048  0392                     _tx_pad_nci:	
  1049  0392  3486               	retlw	134
  1050  0393  3466               	retlw	102
  1051  0394                     __end_of_tx_pad_nci:	
  1052                           
  1053                           	psect	stringtext6
  1054  0394                     __pstringtext6:	
  1055  0394                     _tx_pad_chair:	
  1056  0394  3468               	retlw	104
  1057  0395  3486               	retlw	134
  1058  0396                     __end_of_tx_pad_chair:	
  1059                           
  1060                           	psect	stringtext7
  1061  0396                     __pstringtext7:	
  1062  0396                     _tx_pad_aux:	
  1063  0396  3466               	retlw	102
  1064  0397  3488               	retlw	136
  1065  0398                     __end_of_tx_pad_aux:	
  1066                           
  1067                           	psect	stringtext8
  1068  0398                     __pstringtext8:	
  1069  0398                     _pad_aux_ok:	
  1070  0398  3401               	retlw	1
  1071  0399  3401               	retlw	1
  1072  039A                     __end_of_pad_aux_ok:	
  1073  000E                     _PORTC	set	14
  1074  000C                     _PORTA	set	12
  1075  0073                     _RC3	set	115
  1076  005F                     _GIE	set	95
  1077  0064                     _RA4	set	100
  1078  005B                     _IOCIE	set	91
  1079  0058                     _IOCIF	set	88
  1080  008B                     _SSP1IF	set	139
  1081  0065                     _RA5	set	101
  1082  0062                     _RA2	set	98
  1083  0060                     _RA0	set	96
  1084  0099                     _OSCCON	set	153
  1085  008E                     _TRISC	set	142
  1086  008C                     _TRISA	set	140
  1087  0473                     _TRISC3	set	1139
  1088  0464                     _TRISA4	set	1124
  1089  0460                     _TRISA0	set	1120
  1090  0462                     _TRISA2	set	1122
  1091  0470                     _TRISC0	set	1136
  1092  0472                     _TRISC2	set	1138
  1093  0471                     _TRISC1	set	1137
  1094  010E                     _LATC	set	270
  1095  010C                     _LATA	set	268
  1096  0873                     _LATC3	set	2163
  1097  018E                     _ANSELC	set	398
  1098  018C                     _ANSELA	set	396
  1099  0215                     _SSP1CON1	set	533
  1100  0211                     _SSP1BUF	set	529
  1101  0214                     _SSP1STATbits	set	532
  1102  0214                     _SSP1STAT	set	532
  1103  1C9C                     _IOCAF4	set	7324
  1104                           
  1105                           ; #config settings
  1106  0000                     
  1107                           	psect	cinit
  1108  0012                     start_initialization:	
  1109  0012                     __initialization:	
  1110                           
  1111                           ; Initialize objects allocated to BANK0
  1112  0012  30F1               	movlw	low __pidataBANK0
  1113  0013  0084               	movwf	4
  1114  0014  3081               	movlw	(high __pidataBANK0)| (0+128)
  1115  0015  0085               	movwf	5
  1116  0016  3020               	movlw	low __pdataBANK0
  1117  0017  0086               	movwf	6
  1118  0018  3000               	movlw	high __pdataBANK0
  1119  0019  0087               	movwf	7
  1120  001A  3028               	movlw	40
  1121  001B  236B               	fcall	init_ram
  1122                           
  1123                           ; Initialize objects allocated to BANK1
  1124  001C  3071               	movlw	low __pidataBANK1
  1125  001D  0084               	movwf	4
  1126  001E  3083               	movlw	(high __pidataBANK1)| (0+128)
  1127  001F  0085               	movwf	5
  1128  0020  30A5               	movlw	low __pdataBANK1
  1129  0021  0086               	movwf	6
  1130  0022  3000               	movlw	high __pdataBANK1
  1131  0023  0087               	movwf	7
  1132  0024  3005               	movlw	5
  1133  0025  236B               	fcall	init_ram
  1134                           
  1135                           ; Clear objects allocated to BANK0
  1136  0026  01EB               	clrf	__pbssBANK0& (0+127)
  1137  0027  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  1138  0028  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  1139  0029  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  1140                           
  1141                           ; Clear objects allocated to BANK1
  1142  002A  0021               	movlb	1	; select bank1
  1143  002B  01A0               	clrf	__pbssBANK1& (0+127)
  1144  002C  01A1               	clrf	(__pbssBANK1+1)& (0+127)
  1145  002D  01A2               	clrf	(__pbssBANK1+2)& (0+127)
  1146  002E  01A3               	clrf	(__pbssBANK1+3)& (0+127)
  1147  002F  01A4               	clrf	(__pbssBANK1+4)& (0+127)
  1148  0030                     end_of_initialization:	
  1149                           ;End of C runtime variable initialization code
  1150                           
  1151  0030                     __end_of__initialization:	
  1152  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1153  0031  0020               	movlb	0
  1154  0032  2B76               	ljmp	_main	;jump to C main() function
  1155                           
  1156                           	psect	bssBANK0
  1157  006B                     __pbssBANK0:	
  1158  006B                     _pad_dat:	
  1159  006B                     	ds	2
  1160  006D                     _pad_aux_dat:	
  1161  006D                     	ds	2
  1162                           
  1163                           	psect	dataBANK0
  1164  0020                     __pdataBANK0:	
  1165  0020                     NRF_Check@F2228:	
  1166  0020                     	ds	5
  1167  0025                     _tx_addr:	
  1168  0025                     	ds	5
  1169  002A                     _RX_ADDRESS_P5:	
  1170  002A                     	ds	5
  1171  002F                     _RX_ADDRESS_P4:	
  1172  002F                     	ds	5
  1173  0034                     _RX_ADDRESS_P3:	
  1174  0034                     	ds	5
  1175  0039                     _RX_ADDRESS_P2:	
  1176  0039                     	ds	5
  1177  003E                     _RX_ADDRESS_P1:	
  1178  003E                     	ds	5
  1179  0043                     _RX_ADDRESS_P0:	
  1180  0043                     	ds	5
  1181                           
  1182                           	psect	bssBANK1
  1183  00A0                     __pbssBANK1:	
  1184  00A0                     NRF_Check@F2230:	
  1185  00A0                     	ds	5
  1186                           
  1187                           	psect	dataBANK1
  1188  00A5                     __pdataBANK1:	
  1189  00A5                     _TX_ADDRESS:	
  1190  00A5                     	ds	5
  1191                           
  1192                           	psect	inittext
  1193  036B                     init_ram:	
  1194  036B  00FE               	movwf	126
  1195  036C                     initloop:	
  1196  036C  0012               	moviw fsr0++
  1197  036D  001E               	movwi fsr1++
  1198  036E  0BFE               	decfsz	126,f
  1199  036F  2B6C               	goto	initloop
  1200  0370  3400               	retlw	0
  1201                           
  1202                           	psect	cstackCOMMON
  1203  0070                     __pcstackCOMMON:	
  1204  0070                     ?_NRF_Tx_CheckACK:	
  1205  0070                     ?_PORTA_Init:	
  1206                           ; 1 bytes @ 0x0
  1207                           
  1208  0070                     ??_PORTA_Init:	
  1209                           ; 1 bytes @ 0x0
  1210                           
  1211  0070                     ?_PORTC_Init:	
  1212                           ; 1 bytes @ 0x0
  1213                           
  1214  0070                     ??_PORTC_Init:	
  1215                           ; 1 bytes @ 0x0
  1216                           
  1217  0070                     ?_FOSC_Init:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ??_FOSC_Init:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_LED_Init:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ??_LED_Init:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_WirelessPad:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_DS_Convert:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_LEDx:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ??_LEDx:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_NRF_Port_Init:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ??_NRF_Port_Init:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_NRF_On:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0070                     ??_NRF_On:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0070                     ?_NRF_SPI_Init:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0070                     ??_NRF_SPI_Init:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_NRF_SPI_RW:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ??_NRF_SPI_RW:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ?_NRF_Read_Reg:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_NRF_Check:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_PORT_Init:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ??_PORT_Init:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_ISR:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ??_ISR:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_main:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_Send_DS:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_DS_Rest:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ??_DS_Rest:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_DS_Write:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ??_DS_Write:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?_DS_Read:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ??_DS_Read:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?___lmul:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     NRF_SPI_RW@dat:	
  1311                           ; 4 bytes @ 0x0
  1312                           
  1313  0070                     DS_Rest@flag:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ___lmul@multiplier:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319                           
  1320                           ; 4 bytes @ 0x0
  1321  0070                     	ds	1
  1322  0071                     ??_NRF_Read_Reg:	
  1323  0071                     ?_NRF_Write_Reg:	
  1324                           ; 1 bytes @ 0x1
  1325                           
  1326  0071                     ?_NRF_Read_Buf:	
  1327                           ; 1 bytes @ 0x1
  1328                           
  1329  0071                     ?_NRF_Write_Buf:	
  1330                           ; 1 bytes @ 0x1
  1331                           
  1332  0071                     NRF_Write_Reg@value:	
  1333                           ; 1 bytes @ 0x1
  1334                           
  1335  0071                     NRF_Read_Buf@pBuf:	
  1336                           ; 1 bytes @ 0x1
  1337                           
  1338  0071                     NRF_Write_Buf@pBuf:	
  1339                           ; 1 bytes @ 0x1
  1340                           
  1341  0071                     DS_Write@command:	
  1342                           ; 1 bytes @ 0x1
  1343                           
  1344  0071                     LEDx@num:	
  1345                           ; 1 bytes @ 0x1
  1346                           
  1347                           
  1348                           ; 1 bytes @ 0x1
  1349  0071                     	ds	1
  1350  0072                     ??_NRF_Write_Reg:	
  1351  0072                     NRF_Read_Reg@reg:	
  1352                           ; 1 bytes @ 0x2
  1353                           
  1354  0072                     NRF_Read_Buf@len:	
  1355                           ; 1 bytes @ 0x2
  1356                           
  1357  0072                     NRF_Write_Buf@len:	
  1358                           ; 1 bytes @ 0x2
  1359                           
  1360  0072                     DS_Write@i:	
  1361                           ; 1 bytes @ 0x2
  1362                           
  1363  0072                     DS_Read@temp:	
  1364                           ; 1 bytes @ 0x2
  1365                           
  1366                           
  1367                           ; 1 bytes @ 0x2
  1368  0072                     	ds	1
  1369  0073                     ??_DS_Convert:	
  1370  0073                     ??_NRF_Read_Buf:	
  1371                           ; 1 bytes @ 0x3
  1372                           
  1373  0073                     ??_NRF_Write_Buf:	
  1374                           ; 1 bytes @ 0x3
  1375                           
  1376  0073                     NRF_Read_Reg@status:	
  1377                           ; 1 bytes @ 0x3
  1378                           
  1379  0073                     NRF_Write_Reg@reg:	
  1380                           ; 1 bytes @ 0x3
  1381                           
  1382  0073                     DS_Read@value:	
  1383                           ; 1 bytes @ 0x3
  1384                           
  1385                           
  1386                           ; 1 bytes @ 0x3
  1387  0073                     	ds	1
  1388  0074                     NRF_Write_Reg@status:	
  1389  0074                     DS_Read@i:	
  1390                           ; 1 bytes @ 0x4
  1391                           
  1392  0074                     ___lmul@multiplicand:	
  1393                           ; 1 bytes @ 0x4
  1394                           
  1395                           
  1396                           ; 4 bytes @ 0x4
  1397  0074                     	ds	1
  1398  0075                     ??_NRF_Tx_CheckACK:	
  1399  0075                     NRF_Write_Buf@reg:	
  1400                           ; 1 bytes @ 0x5
  1401                           
  1402                           
  1403                           ; 1 bytes @ 0x5
  1404  0075                     	ds	1
  1405  0076                     NRF_Read_Buf@reg:	
  1406  0076                     NRF_Write_Buf@i:	
  1407                           ; 1 bytes @ 0x6
  1408                           
  1409  0076                     NRF_Tx_CheckACK@sta:	
  1410                           ; 1 bytes @ 0x6
  1411                           
  1412                           
  1413                           ; 1 bytes @ 0x6
  1414  0076                     	ds	1
  1415  0077                     ?_NRF_Tx_Set:	
  1416  0077                     ?_NRF_Tx_Send:	
  1417                           ; 1 bytes @ 0x7
  1418                           
  1419  0077                     NRF_Read_Buf@i:	
  1420                           ; 1 bytes @ 0x7
  1421                           
  1422  0077                     NRF_Tx_Set@ack:	
  1423                           ; 1 bytes @ 0x7
  1424                           
  1425  0077                     NRF_Tx_Send@len:	
  1426                           ; 1 bytes @ 0x7
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x7
  1430  0077                     	ds	1
  1431  0078                     ??_NRF_Check:	
  1432  0078                     ??_NRF_Tx_Set:	
  1433                           ; 1 bytes @ 0x8
  1434                           
  1435  0078                     ??_NRF_Tx_Send:	
  1436                           ; 1 bytes @ 0x8
  1437                           
  1438  0078                     ??___lmul:	
  1439                           ; 1 bytes @ 0x8
  1440                           
  1441  0078                     ___lmul@product:	
  1442                           ; 1 bytes @ 0x8
  1443                           
  1444                           
  1445                           ; 4 bytes @ 0x8
  1446  0078                     	ds	2
  1447  007A                     NRF_Tx_Set@addr:	
  1448  007A                     NRF_Tx_Send@txbuf:	
  1449                           ; 1 bytes @ 0xA
  1450                           
  1451                           
  1452                           ; 1 bytes @ 0xA
  1453  007A                     	ds	2
  1454  007C                     ??___lldiv:	
  1455                           
  1456                           ; 1 bytes @ 0xC
  1457  007C                     	ds	1
  1458  007D                     ??_Send_DS:	
  1459                           
  1460                           ; 1 bytes @ 0xD
  1461  007D                     	ds	1
  1462  007E                     ??_main:	
  1463                           
  1464                           	psect	cstackBANK0
  1465  0048                     __pcstackBANK0:	
  1466                           ; 1 bytes @ 0xE
  1467                           
  1468  0048                     ?___lldiv:	
  1469  0048                     ___lldiv@divisor:	
  1470                           ; 4 bytes @ 0x0
  1471                           
  1472  0048                     NRF_Check@tuf:	
  1473                           ; 4 bytes @ 0x0
  1474                           
  1475                           
  1476                           ; 5 bytes @ 0x0
  1477  0048                     	ds	4
  1478  004C                     ___lldiv@dividend:	
  1479                           
  1480                           ; 4 bytes @ 0x4
  1481  004C                     	ds	1
  1482  004D                     NRF_Check@buf:	
  1483                           
  1484                           ; 5 bytes @ 0x5
  1485  004D                     	ds	3
  1486  0050                     ___lldiv@quotient:	
  1487                           
  1488                           ; 4 bytes @ 0x8
  1489  0050                     	ds	2
  1490  0052                     NRF_Check@i:	
  1491                           
  1492                           ; 1 bytes @ 0xA
  1493  0052                     	ds	2
  1494  0054                     ___lldiv@counter:	
  1495                           
  1496                           ; 1 bytes @ 0xC
  1497  0054                     	ds	1
  1498  0055                     ?_DS_GetTemp:	
  1499                           
  1500                           ; 2 bytes @ 0xD
  1501  0055                     	ds	2
  1502  0057                     ??_DS_GetTemp:	
  1503                           
  1504                           ; 1 bytes @ 0xF
  1505  0057                     	ds	4
  1506  005B                     DS_GetTemp@ds_th:	
  1507                           
  1508                           ; 1 bytes @ 0x13
  1509  005B                     	ds	1
  1510  005C                     DS_GetTemp@ds_tl:	
  1511                           
  1512                           ; 1 bytes @ 0x14
  1513  005C                     	ds	2
  1514  005E                     DS_GetTemp@ds_rs1:	
  1515                           
  1516                           ; 1 bytes @ 0x16
  1517  005E                     	ds	1
  1518  005F                     DS_GetTemp@ds_rs2:	
  1519                           
  1520                           ; 1 bytes @ 0x17
  1521  005F                     	ds	1
  1522  0060                     DS_GetTemp@ds_rs3:	
  1523                           
  1524                           ; 1 bytes @ 0x18
  1525  0060                     	ds	1
  1526  0061                     DS_GetTemp@ds_crc:	
  1527                           
  1528                           ; 1 bytes @ 0x19
  1529  0061                     	ds	1
  1530  0062                     DS_GetTemp@temp:	
  1531                           
  1532                           ; 1 bytes @ 0x1A
  1533  0062                     	ds	1
  1534  0063                     DS_GetTemp@ds_low:	
  1535                           
  1536                           ; 1 bytes @ 0x1B
  1537  0063                     	ds	1
  1538  0064                     DS_GetTemp@ds_hight:	
  1539                           
  1540                           ; 1 bytes @ 0x1C
  1541  0064                     	ds	1
  1542  0065                     DS_GetTemp@ret:	
  1543                           
  1544                           ; 2 bytes @ 0x1D
  1545  0065                     	ds	2
  1546  0067                     Send_DS@temp:	
  1547                           
  1548                           ; 2 bytes @ 0x1F
  1549  0067                     	ds	2
  1550  0069                     ??_WirelessPad:	
  1551                           
  1552                           ; 1 bytes @ 0x21
  1553  0069                     	ds	2
  1554                           
  1555                           	psect	maintext
  1556  0376                     __pmaintext:	
  1557 ;;
  1558 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1559 ;;
  1560 ;; *************** function _main *****************
  1561 ;; Defined at:
  1562 ;;		line 98 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : B1F/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1
  1576 ;;      Params:         0       0       0
  1577 ;;      Locals:         0       0       0
  1578 ;;      Temps:          0       0       0
  1579 ;;      Totals:         0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels required when called:    7
  1582 ;; This function calls:
  1583 ;;		_FOSC_Init
  1584 ;;		_LED_Init
  1585 ;;		_PORT_Init
  1586 ;;		_WirelessPad
  1587 ;; This function is called by:
  1588 ;;		Startup code after reset
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function _main
  1594  0376                     _main:	
  1595                           
  1596                           ;main.c: 100:     FOSC_Init();
  1597                           
  1598                           ;incstack = 0
  1599                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1600  0376  2380               	fcall	_FOSC_Init
  1601                           
  1602                           ;main.c: 102:     PORT_Init();
  1603  0377  2387               	fcall	_PORT_Init
  1604                           
  1605                           ;main.c: 104:     LED_Init();
  1606  0378  237B               	fcall	_LED_Init
  1607                           
  1608                           ;main.c: 110:     WirelessPad();
  1609  0379  2278               	fcall	_WirelessPad
  1610  037A                     l287:	
  1611                           ;main.c: 114:     while(1);
  1612                           
  1613  037A  2B7A               	goto	l287
  1614  037B                     __end_of_main:	
  1615                           
  1616                           	psect	text1
  1617  0278                     __ptext1:	
  1618 ;; *************** function _WirelessPad *****************
  1619 ;; Defined at:
  1620 ;;		line 158 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1
  1634 ;;      Params:         0       0       0
  1635 ;;      Locals:         0       0       0
  1636 ;;      Temps:          0       2       0
  1637 ;;      Totals:         0       2       0
  1638 ;;Total ram usage:        2 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    6
  1641 ;; This function calls:
  1642 ;;		_LEDx
  1643 ;;		_NRF_Check
  1644 ;;		_NRF_On
  1645 ;;		_NRF_Port_Init
  1646 ;;		_NRF_SPI_Init
  1647 ;;		_NRF_Tx_Set
  1648 ;;		_Send_DS
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _WirelessPad
  1656  0278                     _WirelessPad:	
  1657                           
  1658                           ;main.c: 160:     NRF_On();
  1659                           
  1660                           ;incstack = 0
  1661                           ; Regs used in _WirelessPad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1662  0278  2384               	fcall	_NRF_On
  1663                           
  1664                           ;main.c: 161:     NRF_Port_Init();
  1665  0279  234F               	fcall	_NRF_Port_Init
  1666                           
  1667                           ;main.c: 162:     NRF_SPI_Init();
  1668  027A  2345               	fcall	_NRF_SPI_Init
  1669                           
  1670                           ;main.c: 164:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1671  027B  3003               	movlw	3
  1672  027C  0020               	movlb	0	; select bank0
  1673  027D  00EA               	movwf	??_WirelessPad+1
  1674  027E  308A               	movlw	138
  1675  027F  00E9               	movwf	??_WirelessPad
  1676  0280  3055               	movlw	85
  1677  0281                     u947:	
  1678  0281  0B89               	decfsz	9,f
  1679  0282  2A81               	goto	u947
  1680  0283  0BE9               	decfsz	??_WirelessPad,f
  1681  0284  2A81               	goto	u947
  1682  0285  0BEA               	decfsz	??_WirelessPad+1,f
  1683  0286  2A81               	goto	u947
  1684  0287  3200               	nop2
  1685                           
  1686                           ;main.c: 166:     if(NRF_Check()) {
  1687  0288  210F               	fcall	_NRF_Check
  1688  0289  3A00               	xorlw	0
  1689  028A  1903               	skipnz
  1690  028B  2A8F               	goto	l1892
  1691  028C                     l1890:	
  1692                           
  1693                           ;main.c: 168:             LEDx(1);
  1694  028C  3001               	movlw	1
  1695  028D  22AF               	fcall	_LEDx
  1696  028E  2A8C               	goto	l1890
  1697  028F                     l1892:	
  1698                           
  1699                           ;main.c: 172:     NRF_Tx_Set(tx_addr, 0x00);
  1700  028F  01F7               	clrf	NRF_Tx_Set@ack
  1701  0290  3025               	movlw	(low (_tx_addr| 0))& (0+255)
  1702  0291  2159               	fcall	_NRF_Tx_Set
  1703                           
  1704                           ;main.c: 174:     Send_DS();
  1705  0292  22E0               	fcall	_Send_DS
  1706  0293  0008               	return
  1707  0294                     __end_of_WirelessPad:	
  1708                           
  1709                           	psect	text2
  1710  02E0                     __ptext2:	
  1711 ;; *************** function _Send_DS *****************
  1712 ;; Defined at:
  1713 ;;		line 138 in file "main.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  temp            2   31[BANK0 ] unsigned int 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1
  1727 ;;      Params:         0       0       0
  1728 ;;      Locals:         0       2       0
  1729 ;;      Temps:          1       0       0
  1730 ;;      Totals:         1       2       0
  1731 ;;Total ram usage:        3 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    5
  1734 ;; This function calls:
  1735 ;;		_DS_Convert
  1736 ;;		_DS_GetTemp
  1737 ;;		_LEDx
  1738 ;;		_NRF_Tx_Send
  1739 ;; This function is called by:
  1740 ;;		_WirelessPad
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function _Send_DS
  1746  02E0                     _Send_DS:	
  1747  02E0                     l1850:	
  1748                           ;incstack = 0
  1749                           ; Regs used in _Send_DS: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1750                           
  1751                           
  1752                           ;main.c: 144:         DS_Convert();
  1753  02E0  230B               	fcall	_DS_Convert
  1754                           
  1755                           ;main.c: 145:         temp = DS_GetTemp();
  1756  02E1  2033               	fcall	_DS_GetTemp
  1757  02E2  0020               	movlb	0	; select bank0
  1758  02E3  0856               	movf	?_DS_GetTemp+1,w
  1759  02E4  00E8               	movwf	Send_DS@temp+1
  1760  02E5  0855               	movf	?_DS_GetTemp,w
  1761  02E6  00E7               	movwf	Send_DS@temp
  1762                           
  1763                           ;main.c: 147:         pad_dat[0] = (char)temp;
  1764  02E7  0867               	movf	Send_DS@temp,w
  1765  02E8  00FD               	movwf	??_Send_DS
  1766  02E9  087D               	movf	??_Send_DS,w
  1767  02EA  00EB               	movwf	_pad_dat
  1768                           
  1769                           ;main.c: 149:         NRF_Tx_Send(pad_dat, 1);
  1770  02EB  01F7               	clrf	NRF_Tx_Send@len
  1771  02EC  0AF7               	incf	NRF_Tx_Send@len,f
  1772  02ED  306B               	movlw	(low (_pad_dat| 0))& (0+255)
  1773  02EE  22C8               	fcall	_NRF_Tx_Send
  1774                           
  1775                           ;main.c: 151:         LEDx(1);
  1776  02EF  3001               	movlw	1
  1777  02F0  22AF               	fcall	_LEDx
  1778                           
  1779                           ;main.c: 153:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1780  02F1  30C8               	movlw	200
  1781  02F2                     u957:	
  1782  02F2  3200               	nop2
  1783  02F3  0B89               	decfsz	9,f
  1784  02F4  2AF2               	goto	u957
  1785  02F5  2AE0               	goto	l1850
  1786  02F6                     __end_of_Send_DS:	
  1787                           
  1788                           	psect	text3
  1789  02C8                     __ptext3:	
  1790 ;; *************** function _NRF_Tx_Send *****************
  1791 ;; Defined at:
  1792 ;;		line 374 in file "../library/nrf24l01.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  txbuf           1    wreg     PTR unsigned char 
  1795 ;;		 -> pad_dat(2), pad_aux_dat(2), 
  1796 ;;  len             1    7[COMMON] unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  txbuf           1   10[COMMON] PTR unsigned char 
  1799 ;;		 -> pad_dat(2), pad_aux_dat(2), 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1
  1809 ;;      Params:         1       0       0
  1810 ;;      Locals:         1       0       0
  1811 ;;      Temps:          2       0       0
  1812 ;;      Totals:         4       0       0
  1813 ;;Total ram usage:        4 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    4
  1816 ;; This function calls:
  1817 ;;		_NRF_Tx_CheckACK
  1818 ;;		_NRF_Write_Buf
  1819 ;; This function is called by:
  1820 ;;		_Send_DS
  1821 ;;		_Send_Key
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _NRF_Tx_Send
  1827  02C8                     _NRF_Tx_Send:	
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _NRF_Tx_Send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1831                           ;NRF_Tx_Send@txbuf stored from wreg
  1832  02C8  00FA               	movwf	NRF_Tx_Send@txbuf
  1833                           
  1834                           ;../library/nrf24l01.c: 375:     RA0 = 0;
  1835  02C9  0020               	movlb	0	; select bank0
  1836  02CA  100C               	bcf	12,0	;volatile
  1837                           
  1838                           ;../library/nrf24l01.c: 376:     NRF_Write_Buf(0xA0, txbuf, len);
  1839  02CB  087A               	movf	NRF_Tx_Send@txbuf,w
  1840  02CC  00F8               	movwf	??_NRF_Tx_Send
  1841  02CD  0878               	movf	??_NRF_Tx_Send,w
  1842  02CE  00F1               	movwf	NRF_Write_Buf@pBuf
  1843  02CF  0877               	movf	NRF_Tx_Send@len,w
  1844  02D0  00F9               	movwf	??_NRF_Tx_Send+1
  1845  02D1  0879               	movf	??_NRF_Tx_Send+1,w
  1846  02D2  00F2               	movwf	NRF_Write_Buf@len
  1847  02D3  30A0               	movlw	160
  1848  02D4  2294               	fcall	_NRF_Write_Buf
  1849                           
  1850                           ;../library/nrf24l01.c: 377:     RA0 = 1;
  1851  02D5  0020               	movlb	0	; select bank0
  1852  02D6  140C               	bsf	12,0	;volatile
  1853                           
  1854                           ;../library/nrf24l01.c: 378:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1855  02D7  3003               	movlw	3
  1856  02D8                     u967:	
  1857  02D8  0B89               	decfsz	9,f
  1858  02D9  2AD8               	goto	u967
  1859  02DA  0000               	nop
  1860  02DB                     l1728:	
  1861                           ;../library/nrf24l01.c: 379:     while(NRF_Tx_CheckACK());
  1862                           
  1863  02DB  22F6               	fcall	_NRF_Tx_CheckACK
  1864  02DC  3A00               	xorlw	0
  1865  02DD  1903               	btfsc	3,2
  1866  02DE  0008               	return
  1867  02DF  2ADB               	goto	l1728
  1868  02E0                     __end_of_NRF_Tx_Send:	
  1869                           
  1870                           	psect	text4
  1871  02F6                     __ptext4:	
  1872 ;; *************** function _NRF_Tx_CheckACK *****************
  1873 ;; Defined at:
  1874 ;;		line 382 in file "../library/nrf24l01.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;		None
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  sta             1    6[COMMON] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;                  1    wreg      unsigned char 
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1
  1888 ;;      Params:         0       0       0
  1889 ;;      Locals:         1       0       0
  1890 ;;      Temps:          1       0       0
  1891 ;;      Totals:         2       0       0
  1892 ;;Total ram usage:        2 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:    3
  1895 ;; This function calls:
  1896 ;;		_NRF_Read_Reg
  1897 ;;		_NRF_Write_Reg
  1898 ;; This function is called by:
  1899 ;;		_NRF_Tx_Send
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _NRF_Tx_CheckACK
  1905  02F6                     _NRF_Tx_CheckACK:	
  1906                           
  1907                           ;../library/nrf24l01.c: 385:  sta = NRF_Read_Reg(0x07);
  1908                           
  1909                           ;incstack = 0
  1910                           ; Regs used in _NRF_Tx_CheckACK: [wreg+status,2+status,0+pclath+cstack]
  1911  02F6  3007               	movlw	7
  1912  02F7  231D               	fcall	_NRF_Read_Reg
  1913  02F8  00F5               	movwf	??_NRF_Tx_CheckACK
  1914  02F9  0875               	movf	??_NRF_Tx_CheckACK,w
  1915  02FA  00F6               	movwf	NRF_Tx_CheckACK@sta
  1916                           
  1917                           ;../library/nrf24l01.c: 386:     if(sta & 0X10 || sta & 0X20) {
  1918  02FB  1A76               	btfsc	NRF_Tx_CheckACK@sta,4
  1919  02FC  2AFF               	goto	l1598
  1920  02FD  1EF6               	btfss	NRF_Tx_CheckACK@sta,5
  1921  02FE  2B05               	goto	l1600
  1922  02FF                     l1598:	
  1923                           
  1924                           ;../library/nrf24l01.c: 387:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  1925  02FF  30FF               	movlw	255
  1926  0300  00F5               	movwf	??_NRF_Tx_CheckACK
  1927  0301  0875               	movf	??_NRF_Tx_CheckACK,w
  1928  0302  00F1               	movwf	NRF_Write_Reg@value
  1929  0303  3027               	movlw	39
  1930  0304  232B               	fcall	_NRF_Write_Reg
  1931  0305                     l1600:	
  1932                           
  1933                           ;../library/nrf24l01.c: 389:  if(sta & 0X20) {
  1934  0305  1EF6               	btfss	NRF_Tx_CheckACK@sta,5
  1935  0306  2B09               	goto	l1606
  1936                           
  1937                           ;../library/nrf24l01.c: 390:     return(0);
  1938  0307  3000               	movlw	0
  1939  0308  0008               	return
  1940  0309                     l1606:	
  1941                           
  1942                           ;../library/nrf24l01.c: 392:  return(1);
  1943  0309  3001               	movlw	1
  1944  030A  0008               	return
  1945  030B                     __end_of_NRF_Tx_CheckACK:	
  1946                           
  1947                           	psect	text5
  1948  031D                     __ptext5:	
  1949 ;; *************** function _NRF_Read_Reg *****************
  1950 ;; Defined at:
  1951 ;;		line 87 in file "../library/nrf24l01.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  reg             1    wreg     unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  reg             1    2[COMMON] unsigned char 
  1956 ;;  status          1    3[COMMON] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      unsigned char 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1
  1966 ;;      Params:         0       0       0
  1967 ;;      Locals:         2       0       0
  1968 ;;      Temps:          1       0       0
  1969 ;;      Totals:         3       0       0
  1970 ;;Total ram usage:        3 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    2
  1973 ;; This function calls:
  1974 ;;		_NRF_SPI_RW
  1975 ;; This function is called by:
  1976 ;;		_NRF_Tx_CheckACK
  1977 ;;		_NRF_TxPacket
  1978 ;;		_NRF_Read_RX_Pload
  1979 ;;		_NRF_Get_Status
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _NRF_Read_Reg
  1985  031D                     _NRF_Read_Reg:	
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _NRF_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  1989                           ;NRF_Read_Reg@reg stored from wreg
  1990  031D  00F2               	movwf	NRF_Read_Reg@reg
  1991                           
  1992                           ;../library/nrf24l01.c: 88:  unsigned char status;;../library/nrf24l01.c: 89:    RA2 = 0
      +                          ;
  1993  031E  0020               	movlb	0	; select bank0
  1994  031F  110C               	bcf	12,2	;volatile
  1995                           
  1996                           ;../library/nrf24l01.c: 90:    NRF_SPI_RW(reg);
  1997  0320  0872               	movf	NRF_Read_Reg@reg,w
  1998  0321  2339               	fcall	_NRF_SPI_RW
  1999                           
  2000                           ;../library/nrf24l01.c: 91:    status = NRF_SPI_RW(0xFF);
  2001  0322  30FF               	movlw	255
  2002  0323  2339               	fcall	_NRF_SPI_RW
  2003  0324  00F1               	movwf	??_NRF_Read_Reg
  2004  0325  0871               	movf	??_NRF_Read_Reg,w
  2005  0326  00F3               	movwf	NRF_Read_Reg@status
  2006                           
  2007                           ;../library/nrf24l01.c: 92:    RA2 = 1;
  2008  0327  0020               	movlb	0	; select bank0
  2009  0328  150C               	bsf	12,2	;volatile
  2010                           
  2011                           ;../library/nrf24l01.c: 93:    return(status);
  2012  0329  0873               	movf	NRF_Read_Reg@status,w
  2013  032A  0008               	return
  2014  032B                     __end_of_NRF_Read_Reg:	
  2015                           
  2016                           	psect	text6
  2017  02AF                     __ptext6:	
  2018 ;; *************** function _LEDx *****************
  2019 ;; Defined at:
  2020 ;;		line 10 in file "../library/ledx.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  num             1    wreg     unsigned char 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  num             1    1[COMMON] unsigned char 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, status,2, status,0
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1
  2034 ;;      Params:         0       0       0
  2035 ;;      Locals:         1       0       0
  2036 ;;      Temps:          1       0       0
  2037 ;;      Totals:         2       0       0
  2038 ;;Total ram usage:        2 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_Send_DS
  2045 ;;		_WirelessPad
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _LEDx
  2051  02AF                     _LEDx:	
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _LEDx: [wreg+status,2+status,0]
  2055                           ;LEDx@num stored from wreg
  2056  02AF  00F1               	movwf	LEDx@num
  2057  02B0                     l1786:	
  2058                           ;../library/ledx.c: 11:     while(num--) {
  2059                           
  2060                           
  2061                           ;../library/ledx.c: 11:     while(num--) {
  2062  02B0  3001               	movlw	1
  2063  02B1  02F1               	subwf	LEDx@num,f
  2064  02B2  0A71               	incf	LEDx@num,w
  2065  02B3  1903               	btfsc	3,2
  2066  02B4  0008               	return
  2067                           
  2068                           ;../library/ledx.c: 12:         LATC3 = 0;
  2069  02B5  0022               	movlb	2	; select bank2
  2070  02B6  118E               	bcf	14,3	;volatile
  2071                           
  2072                           ;../library/ledx.c: 13:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2073  02B7  3082               	movlw	130
  2074  02B8  00F0               	movwf	??_LEDx
  2075  02B9  30DE               	movlw	222
  2076  02BA                     u977:	
  2077  02BA  0B89               	decfsz	9,f
  2078  02BB  2ABA               	goto	u977
  2079  02BC  0BF0               	decfsz	??_LEDx,f
  2080  02BD  2ABA               	goto	u977
  2081                           
  2082                           ;../library/ledx.c: 14:         LATC3 = 1;
  2083  02BE  0022               	movlb	2	; select bank2
  2084  02BF  158E               	bsf	14,3	;volatile
  2085                           
  2086                           ;../library/ledx.c: 15:         _delay((unsigned long)((100)*(4000000/4000.0)));
  2087  02C0  3082               	movlw	130
  2088  02C1  00F0               	movwf	??_LEDx
  2089  02C2  30DE               	movlw	222
  2090  02C3                     u987:	
  2091  02C3  0B89               	decfsz	9,f
  2092  02C4  2AC3               	goto	u987
  2093  02C5  0BF0               	decfsz	??_LEDx,f
  2094  02C6  2AC3               	goto	u987
  2095  02C7  2AB0               	goto	l1786
  2096  02C8                     __end_of_LEDx:	
  2097                           
  2098                           	psect	text7
  2099  0033                     __ptext7:	
  2100 ;; *************** function _DS_GetTemp *****************
  2101 ;; Defined at:
  2102 ;;		line 78 in file "../library/ds18b20.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  ret             2   29[BANK0 ] unsigned int 
  2107 ;;  ds_hight        1   28[BANK0 ] unsigned char 
  2108 ;;  ds_low          1   27[BANK0 ] unsigned char 
  2109 ;;  temp            1   26[BANK0 ] unsigned char 
  2110 ;;  ds_crc          1   25[BANK0 ] unsigned char 
  2111 ;;  ds_rs3          1   24[BANK0 ] unsigned char 
  2112 ;;  ds_rs2          1   23[BANK0 ] unsigned char 
  2113 ;;  ds_rs1          1   22[BANK0 ] unsigned char 
  2114 ;;  ds_rs0          1    0        unsigned char 
  2115 ;;  ds_tl           1   20[BANK0 ] unsigned char 
  2116 ;;  ds_th           1   19[BANK0 ] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2   13[BANK0 ] unsigned int 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1
  2126 ;;      Params:         0       2       0
  2127 ;;      Locals:         0      12       0
  2128 ;;      Temps:          0       4       0
  2129 ;;      Totals:         0      18       0
  2130 ;;Total ram usage:       18 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    2
  2133 ;; This function calls:
  2134 ;;		_DS_Read
  2135 ;;		_DS_Rest
  2136 ;;		_DS_Write
  2137 ;;		___lldiv
  2138 ;;		___lmul
  2139 ;; This function is called by:
  2140 ;;		_Send_DS
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _DS_GetTemp
  2146  0033                     _DS_GetTemp:	
  2147                           
  2148                           ;../library/ds18b20.c: 80:     unsigned int ret = 0;
  2149                           
  2150                           ;incstack = 0
  2151                           ; Regs used in _DS_GetTemp: [wreg+status,2+status,0+pclath+cstack]
  2152  0033  0020               	movlb	0	; select bank0
  2153  0034  01E5               	clrf	DS_GetTemp@ret
  2154  0035  01E6               	clrf	DS_GetTemp@ret+1
  2155  0036  01DC               	clrf	DS_GetTemp@ds_tl
  2156  0037  01DB               	clrf	DS_GetTemp@ds_th
  2157  0038  01E4               	clrf	DS_GetTemp@ds_hight
  2158  0039  01E3               	clrf	DS_GetTemp@ds_low
  2159  003A  01E1               	clrf	DS_GetTemp@ds_crc
  2160  003B  01E0               	clrf	DS_GetTemp@ds_rs3
  2161  003C  01DF               	clrf	DS_GetTemp@ds_rs2
  2162  003D  01DE               	clrf	DS_GetTemp@ds_rs1
  2163                           
  2164                           ;../library/ds18b20.c: 86:     DS_Rest();
  2165  003E  223E               	fcall	_DS_Rest
  2166                           
  2167                           ;../library/ds18b20.c: 87:     DS_Write(0xCC);
  2168  003F  30CC               	movlw	204
  2169  0040  2219               	fcall	_DS_Write
  2170                           
  2171                           ;../library/ds18b20.c: 88:     DS_Write(0xBE);
  2172  0041  30BE               	movlw	190
  2173  0042  2219               	fcall	_DS_Write
  2174                           
  2175                           ;../library/ds18b20.c: 91:     ds_low = DS_Read();
  2176  0043  21C2               	fcall	_DS_Read
  2177  0044  0020               	movlb	0	; select bank0
  2178  0045  00D7               	movwf	??_DS_GetTemp
  2179  0046  0857               	movf	??_DS_GetTemp,w
  2180  0047  00E3               	movwf	DS_GetTemp@ds_low
  2181                           
  2182                           ;../library/ds18b20.c: 92:     ds_hight = DS_Read();
  2183  0048  21C2               	fcall	_DS_Read
  2184  0049  0020               	movlb	0	; select bank0
  2185  004A  00D7               	movwf	??_DS_GetTemp
  2186  004B  0857               	movf	??_DS_GetTemp,w
  2187  004C  00E4               	movwf	DS_GetTemp@ds_hight
  2188  004D  21C2               	fcall	_DS_Read
  2189  004E  21C2               	fcall	_DS_Read
  2190  004F  21C2               	fcall	_DS_Read
  2191  0050  21C2               	fcall	_DS_Read
  2192  0051  21C2               	fcall	_DS_Read
  2193  0052  21C2               	fcall	_DS_Read
  2194  0053  21C2               	fcall	_DS_Read
  2195                           
  2196                           ;../library/ds18b20.c: 101:     DS_Rest();
  2197  0054  223E               	fcall	_DS_Rest
  2198                           
  2199                           ;../library/ds18b20.c: 112:     temp = ds_hight >> 3;
  2200  0055  0020               	movlb	0	; select bank0
  2201  0056  0864               	movf	DS_GetTemp@ds_hight,w
  2202  0057  00D7               	movwf	??_DS_GetTemp
  2203  0058  3003               	movlw	3
  2204  0059                     u735:	
  2205  0059  36D7               	lsrf	??_DS_GetTemp,f
  2206  005A  0B89               	decfsz	9,f
  2207  005B  2859               	goto	u735
  2208  005C  0857               	movf	??_DS_GetTemp,w
  2209  005D  00D8               	movwf	??_DS_GetTemp+1
  2210  005E  0858               	movf	??_DS_GetTemp+1,w
  2211  005F  00E2               	movwf	DS_GetTemp@temp
  2212                           
  2213                           ;../library/ds18b20.c: 113:     if(temp & 0x1F) {
  2214  0060  0862               	movf	DS_GetTemp@temp,w
  2215  0061  391F               	andlw	31
  2216  0062  1903               	btfsc	3,2
  2217  0063  287E               	goto	l1772
  2218                           
  2219                           ;../library/ds18b20.c: 114:         ret |= ds_hight;
  2220  0064  0864               	movf	DS_GetTemp@ds_hight,w
  2221  0065  00D7               	movwf	??_DS_GetTemp
  2222  0066  01D8               	clrf	??_DS_GetTemp+1
  2223  0067  0857               	movf	??_DS_GetTemp,w
  2224  0068  04E5               	iorwf	DS_GetTemp@ret,f
  2225  0069  0858               	movf	??_DS_GetTemp+1,w
  2226  006A  04E6               	iorwf	DS_GetTemp@ret+1,f
  2227                           
  2228                           ;../library/ds18b20.c: 115:         ret = (ret << 8) | ds_low;
  2229  006B  0863               	movf	DS_GetTemp@ds_low,w
  2230  006C  00D7               	movwf	??_DS_GetTemp
  2231  006D  01D8               	clrf	??_DS_GetTemp+1
  2232  006E  0865               	movf	DS_GetTemp@ret,w
  2233  006F  00DA               	movwf	??_DS_GetTemp+3
  2234  0070  01D9               	clrf	??_DS_GetTemp+2
  2235  0071  0857               	movf	??_DS_GetTemp,w
  2236  0072  0459               	iorwf	??_DS_GetTemp+2,w
  2237  0073  00E5               	movwf	DS_GetTemp@ret
  2238  0074  0858               	movf	??_DS_GetTemp+1,w
  2239  0075  045A               	iorwf	??_DS_GetTemp+3,w
  2240  0076  00E6               	movwf	DS_GetTemp@ret+1
  2241                           
  2242                           ;../library/ds18b20.c: 116:         ret = ~ret;
  2243  0077  09E5               	comf	DS_GetTemp@ret,f
  2244  0078  09E6               	comf	DS_GetTemp@ret+1,f
  2245                           
  2246                           ;../library/ds18b20.c: 117:         ret += 1;
  2247  0079  3001               	movlw	1
  2248  007A  07E5               	addwf	DS_GetTemp@ret,f
  2249  007B  3000               	movlw	0
  2250  007C  3DE6               	addwfc	DS_GetTemp@ret+1,f
  2251                           
  2252                           ;../library/ds18b20.c: 119:     }else {
  2253  007D  2891               	goto	l1770
  2254  007E                     l1772:	
  2255                           
  2256                           ;../library/ds18b20.c: 120:         ret |= ds_hight;
  2257  007E  0864               	movf	DS_GetTemp@ds_hight,w
  2258  007F  00D7               	movwf	??_DS_GetTemp
  2259  0080  01D8               	clrf	??_DS_GetTemp+1
  2260  0081  0857               	movf	??_DS_GetTemp,w
  2261  0082  04E5               	iorwf	DS_GetTemp@ret,f
  2262  0083  0858               	movf	??_DS_GetTemp+1,w
  2263  0084  04E6               	iorwf	DS_GetTemp@ret+1,f
  2264                           
  2265                           ;../library/ds18b20.c: 121:         ret = (ret << 8) | ds_low;
  2266  0085  0863               	movf	DS_GetTemp@ds_low,w
  2267  0086  00D7               	movwf	??_DS_GetTemp
  2268  0087  01D8               	clrf	??_DS_GetTemp+1
  2269  0088  0865               	movf	DS_GetTemp@ret,w
  2270  0089  00DA               	movwf	??_DS_GetTemp+3
  2271  008A  01D9               	clrf	??_DS_GetTemp+2
  2272  008B  0857               	movf	??_DS_GetTemp,w
  2273  008C  0459               	iorwf	??_DS_GetTemp+2,w
  2274  008D  00E5               	movwf	DS_GetTemp@ret
  2275  008E  0858               	movf	??_DS_GetTemp+1,w
  2276  008F  045A               	iorwf	??_DS_GetTemp+3,w
  2277  0090  00E6               	movwf	DS_GetTemp@ret+1
  2278  0091                     l1770:	
  2279                           
  2280                           ;../library/ds18b20.c: 118:         ret = (unsigned long)ret * 625 / 10000;
  2281  0091  3000               	movlw	0
  2282  0092  00CB               	movwf	___lldiv@divisor+3
  2283  0093  3000               	movlw	0
  2284  0094  00CA               	movwf	___lldiv@divisor+2
  2285  0095  3027               	movlw	39
  2286  0096  00C9               	movwf	___lldiv@divisor+1
  2287  0097  3010               	movlw	16
  2288  0098  00C8               	movwf	___lldiv@divisor
  2289  0099  0865               	movf	DS_GetTemp@ret,w
  2290  009A  00F0               	movwf	___lmul@multiplier
  2291  009B  0866               	movf	DS_GetTemp@ret+1,w
  2292  009C  00F1               	movwf	___lmul@multiplier+1
  2293  009D  01F2               	clrf	___lmul@multiplier+2
  2294  009E  01F3               	clrf	___lmul@multiplier+3
  2295  009F  3000               	movlw	0
  2296  00A0  00F7               	movwf	___lmul@multiplicand+3
  2297  00A1  3000               	movlw	0
  2298  00A2  00F6               	movwf	___lmul@multiplicand+2
  2299  00A3  3002               	movlw	2
  2300  00A4  00F5               	movwf	___lmul@multiplicand+1
  2301  00A5  3071               	movlw	113
  2302  00A6  00F4               	movwf	___lmul@multiplicand
  2303  00A7  2193               	fcall	___lmul
  2304  00A8  0873               	movf	?___lmul+3,w
  2305  00A9  0020               	movlb	0	; select bank0
  2306  00AA  00CF               	movwf	___lldiv@dividend+3
  2307  00AB  0872               	movf	?___lmul+2,w
  2308  00AC  00CE               	movwf	___lldiv@dividend+2
  2309  00AD  0871               	movf	?___lmul+1,w
  2310  00AE  00CD               	movwf	___lldiv@dividend+1
  2311  00AF  0870               	movf	?___lmul,w
  2312  00B0  00CC               	movwf	___lldiv@dividend
  2313  00B1  20BC               	fcall	___lldiv
  2314  00B2  0020               	movlb	0	; select bank0
  2315  00B3  0849               	movf	?___lldiv+1,w
  2316  00B4  00E6               	movwf	DS_GetTemp@ret+1
  2317  00B5  0848               	movf	?___lldiv,w
  2318  00B6  00E5               	movwf	DS_GetTemp@ret
  2319                           
  2320                           ;../library/ds18b20.c: 125:     return ret;
  2321  00B7  0866               	movf	DS_GetTemp@ret+1,w
  2322  00B8  00D6               	movwf	?_DS_GetTemp+1
  2323  00B9  0865               	movf	DS_GetTemp@ret,w
  2324  00BA  00D5               	movwf	?_DS_GetTemp
  2325  00BB  0008               	return
  2326  00BC                     __end_of_DS_GetTemp:	
  2327                           
  2328                           	psect	text8
  2329  0193                     __ptext8:	
  2330 ;; *************** function ___lmul *****************
  2331 ;; Defined at:
  2332 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  multiplier      4    0[COMMON] unsigned long 
  2335 ;;  multiplicand    4    4[COMMON] unsigned long 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  product         4    8[COMMON] unsigned long 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  4    0[COMMON] unsigned long 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1
  2347 ;;      Params:         8       0       0
  2348 ;;      Locals:         4       0       0
  2349 ;;      Temps:          0       0       0
  2350 ;;      Totals:        12       0       0
  2351 ;;Total ram usage:       12 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_DS_GetTemp
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function ___lmul
  2363  0193                     ___lmul:	
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2367  0193  3000               	movlw	0
  2368  0194  00FB               	movwf	___lmul@product+3
  2369  0195  3000               	movlw	0
  2370  0196  00FA               	movwf	___lmul@product+2
  2371  0197  3000               	movlw	0
  2372  0198  00F9               	movwf	___lmul@product+1
  2373  0199  3000               	movlw	0
  2374  019A  00F8               	movwf	___lmul@product
  2375  019B                     l1672:	
  2376  019B  1C70               	btfss	___lmul@multiplier,0
  2377  019C  29A5               	goto	l1676
  2378  019D  0874               	movf	___lmul@multiplicand,w
  2379  019E  07F8               	addwf	___lmul@product,f
  2380  019F  0875               	movf	___lmul@multiplicand+1,w
  2381  01A0  3DF9               	addwfc	___lmul@product+1,f
  2382  01A1  0876               	movf	___lmul@multiplicand+2,w
  2383  01A2  3DFA               	addwfc	___lmul@product+2,f
  2384  01A3  0877               	movf	___lmul@multiplicand+3,w
  2385  01A4  3DFB               	addwfc	___lmul@product+3,f
  2386  01A5                     l1676:	
  2387  01A5  3001               	movlw	1
  2388  01A6                     u615:	
  2389  01A6  35F4               	lslf	___lmul@multiplicand,f
  2390  01A7  0DF5               	rlf	___lmul@multiplicand+1,f
  2391  01A8  0DF6               	rlf	___lmul@multiplicand+2,f
  2392  01A9  0DF7               	rlf	___lmul@multiplicand+3,f
  2393  01AA  0B89               	decfsz	9,f
  2394  01AB  29A6               	goto	u615
  2395  01AC  3001               	movlw	1
  2396  01AD                     u625:	
  2397  01AD  36F3               	lsrf	___lmul@multiplier+3,f
  2398  01AE  0CF2               	rrf	___lmul@multiplier+2,f
  2399  01AF  0CF1               	rrf	___lmul@multiplier+1,f
  2400  01B0  0CF0               	rrf	___lmul@multiplier,f
  2401  01B1  0B89               	decfsz	9,f
  2402  01B2  29AD               	goto	u625
  2403  01B3  0873               	movf	___lmul@multiplier+3,w
  2404  01B4  0472               	iorwf	___lmul@multiplier+2,w
  2405  01B5  0471               	iorwf	___lmul@multiplier+1,w
  2406  01B6  0470               	iorwf	___lmul@multiplier,w
  2407  01B7  1D03               	skipz
  2408  01B8  299B               	goto	l1672
  2409  01B9  087B               	movf	___lmul@product+3,w
  2410  01BA  00F3               	movwf	?___lmul+3
  2411  01BB  087A               	movf	___lmul@product+2,w
  2412  01BC  00F2               	movwf	?___lmul+2
  2413  01BD  0879               	movf	___lmul@product+1,w
  2414  01BE  00F1               	movwf	?___lmul+1
  2415  01BF  0878               	movf	___lmul@product,w
  2416  01C0  00F0               	movwf	?___lmul
  2417  01C1  0008               	return
  2418  01C2                     __end_of___lmul:	
  2419                           
  2420                           	psect	text9
  2421  00BC                     __ptext9:	
  2422 ;; *************** function ___lldiv *****************
  2423 ;; Defined at:
  2424 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  divisor         4    0[BANK0 ] unsigned long 
  2427 ;;  dividend        4    4[BANK0 ] unsigned long 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  quotient        4    8[BANK0 ] unsigned long 
  2430 ;;  counter         1   12[BANK0 ] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  4    0[BANK0 ] unsigned long 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1
  2440 ;;      Params:         0       8       0
  2441 ;;      Locals:         0       5       0
  2442 ;;      Temps:          1       0       0
  2443 ;;      Totals:         1      13       0
  2444 ;;Total ram usage:       14 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_DS_GetTemp
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           
  2455                           ;psect for function ___lldiv
  2456  00BC                     ___lldiv:	
  2457                           
  2458                           ;incstack = 0
  2459                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2460  00BC  3000               	movlw	0
  2461  00BD  0020               	movlb	0	; select bank0
  2462  00BE  00D3               	movwf	___lldiv@quotient+3
  2463  00BF  3000               	movlw	0
  2464  00C0  00D2               	movwf	___lldiv@quotient+2
  2465  00C1  3000               	movlw	0
  2466  00C2  00D1               	movwf	___lldiv@quotient+1
  2467  00C3  3000               	movlw	0
  2468  00C4  00D0               	movwf	___lldiv@quotient
  2469  00C5  084B               	movf	___lldiv@divisor+3,w
  2470  00C6  044A               	iorwf	___lldiv@divisor+2,w
  2471  00C7  0449               	iorwf	___lldiv@divisor+1,w
  2472  00C8  0448               	iorwf	___lldiv@divisor,w
  2473  00C9  1903               	skipnz
  2474  00CA  2906               	goto	l1704
  2475  00CB  01D4               	clrf	___lldiv@counter
  2476  00CC  0AD4               	incf	___lldiv@counter,f
  2477  00CD                     l1690:	
  2478  00CD  1BCB               	btfsc	___lldiv@divisor+3,7
  2479  00CE  28DB               	goto	l1692
  2480  00CF  3001               	movlw	1
  2481  00D0                     u655:	
  2482  00D0  35C8               	lslf	___lldiv@divisor,f
  2483  00D1  0DC9               	rlf	___lldiv@divisor+1,f
  2484  00D2  0DCA               	rlf	___lldiv@divisor+2,f
  2485  00D3  0DCB               	rlf	___lldiv@divisor+3,f
  2486  00D4  0B89               	decfsz	9,f
  2487  00D5  28D0               	goto	u655
  2488  00D6  3001               	movlw	1
  2489  00D7  00FC               	movwf	??___lldiv
  2490  00D8  087C               	movf	??___lldiv,w
  2491  00D9  07D4               	addwf	___lldiv@counter,f
  2492  00DA  28CD               	goto	l1690
  2493  00DB                     l1692:	
  2494  00DB  3001               	movlw	1
  2495  00DC                     u675:	
  2496  00DC  35D0               	lslf	___lldiv@quotient,f
  2497  00DD  0DD1               	rlf	___lldiv@quotient+1,f
  2498  00DE  0DD2               	rlf	___lldiv@quotient+2,f
  2499  00DF  0DD3               	rlf	___lldiv@quotient+3,f
  2500  00E0  0B89               	decfsz	9,f
  2501  00E1  28DC               	goto	u675
  2502  00E2  084B               	movf	___lldiv@divisor+3,w
  2503  00E3  024F               	subwf	___lldiv@dividend+3,w
  2504  00E4  1D03               	skipz
  2505  00E5  28F0               	goto	u685
  2506  00E6  084A               	movf	___lldiv@divisor+2,w
  2507  00E7  024E               	subwf	___lldiv@dividend+2,w
  2508  00E8  1D03               	skipz
  2509  00E9  28F0               	goto	u685
  2510  00EA  0849               	movf	___lldiv@divisor+1,w
  2511  00EB  024D               	subwf	___lldiv@dividend+1,w
  2512  00EC  1D03               	skipz
  2513  00ED  28F0               	goto	u685
  2514  00EE  0848               	movf	___lldiv@divisor,w
  2515  00EF  024C               	subwf	___lldiv@dividend,w
  2516  00F0                     u685:	
  2517  00F0  1C03               	skipc
  2518  00F1  28FB               	goto	l1700
  2519  00F2  0848               	movf	___lldiv@divisor,w
  2520  00F3  02CC               	subwf	___lldiv@dividend,f
  2521  00F4  0849               	movf	___lldiv@divisor+1,w
  2522  00F5  3BCD               	subwfb	___lldiv@dividend+1,f
  2523  00F6  084A               	movf	___lldiv@divisor+2,w
  2524  00F7  3BCE               	subwfb	___lldiv@dividend+2,f
  2525  00F8  084B               	movf	___lldiv@divisor+3,w
  2526  00F9  3BCF               	subwfb	___lldiv@dividend+3,f
  2527  00FA  1450               	bsf	___lldiv@quotient,0
  2528  00FB                     l1700:	
  2529  00FB  3001               	movlw	1
  2530  00FC                     u695:	
  2531  00FC  36CB               	lsrf	___lldiv@divisor+3,f
  2532  00FD  0CCA               	rrf	___lldiv@divisor+2,f
  2533  00FE  0CC9               	rrf	___lldiv@divisor+1,f
  2534  00FF  0CC8               	rrf	___lldiv@divisor,f
  2535  0100  0B89               	decfsz	9,f
  2536  0101  28FC               	goto	u695
  2537  0102  3001               	movlw	1
  2538  0103  02D4               	subwf	___lldiv@counter,f
  2539  0104  1D03               	btfss	3,2
  2540  0105  28DB               	goto	l1692
  2541  0106                     l1704:	
  2542  0106  0853               	movf	___lldiv@quotient+3,w
  2543  0107  00CB               	movwf	?___lldiv+3
  2544  0108  0852               	movf	___lldiv@quotient+2,w
  2545  0109  00CA               	movwf	?___lldiv+2
  2546  010A  0851               	movf	___lldiv@quotient+1,w
  2547  010B  00C9               	movwf	?___lldiv+1
  2548  010C  0850               	movf	___lldiv@quotient,w
  2549  010D  00C8               	movwf	?___lldiv
  2550  010E  0008               	return
  2551  010F                     __end_of___lldiv:	
  2552                           
  2553                           	psect	text10
  2554  01C2                     __ptext10:	
  2555 ;; *************** function _DS_Read *****************
  2556 ;; Defined at:
  2557 ;;		line 51 in file "../library/ds18b20.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  i               1    4[COMMON] unsigned char 
  2562 ;;  value           1    3[COMMON] unsigned char 
  2563 ;;  temp            1    2[COMMON] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      unsigned char 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1
  2573 ;;      Params:         0       0       0
  2574 ;;      Locals:         3       0       0
  2575 ;;      Temps:          2       0       0
  2576 ;;      Totals:         5       0       0
  2577 ;;Total ram usage:        5 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    1
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_DS_GetTemp
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _DS_Read
  2589  01C2                     _DS_Read:	
  2590                           
  2591                           ;../library/ds18b20.c: 52:     unsigned char i, value, temp;;../library/ds18b20.c: 54:  
      +                             GIE = 0;
  2592                           
  2593                           ;incstack = 0
  2594                           ; Regs used in _DS_Read: [wreg+status,2+status,0]
  2595  01C2  138B               	bcf	11,7	;volatile
  2596                           
  2597                           ;../library/ds18b20.c: 55:     for(i = 0; i < 8; i++) {
  2598  01C3  01F4               	clrf	DS_Read@i
  2599  01C4                     l334:	
  2600                           
  2601                           ;../library/ds18b20.c: 56:         TRISC3 = RC3 = 0;
  2602  01C4  0020               	movlb	0	; select bank0
  2603  01C5  118E               	bcf	14,3	;volatile
  2604  01C6  0021               	movlb	1	; select bank1
  2605  01C7  118E               	bcf	14,3	;volatile
  2606                           
  2607                           ;../library/ds18b20.c: 57:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  2608  01C8  3003               	movlw	3
  2609  01C9                     u997:	
  2610  01C9  0B89               	decfsz	9,f
  2611  01CA  29C9               	goto	u997
  2612  01CB  0000               	nop
  2613                           
  2614                           ;../library/ds18b20.c: 58:         TRISC3 = 1;
  2615  01CC  0021               	movlb	1	; select bank1
  2616  01CD  158E               	bsf	14,3	;volatile
  2617                           
  2618                           ;../library/ds18b20.c: 59:         _delay((unsigned long)((10)*(4000000/4000000.0)));
  2619  01CE  3003               	movlw	3
  2620  01CF                     u1007:	
  2621  01CF  0B89               	decfsz	9,f
  2622  01D0  29CF               	goto	u1007
  2623  01D1  0000               	nop
  2624                           
  2625                           ;../library/ds18b20.c: 60:         temp = RC3;
  2626  01D2  3000               	movlw	0
  2627  01D3  0020               	movlb	0	; select bank0
  2628  01D4  198E               	btfsc	14,3	;volatile
  2629  01D5  3001               	movlw	1
  2630  01D6  00F2               	movwf	DS_Read@temp
  2631                           
  2632                           ;../library/ds18b20.c: 61:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  2633  01D7  3010               	movlw	16
  2634  01D8                     u1017:	
  2635  01D8  0B89               	decfsz	9,f
  2636  01D9  29D8               	goto	u1017
  2637  01DA  3200               	nop2
  2638                           
  2639                           ;../library/ds18b20.c: 62:         value = (value>>1) | (temp<<7);
  2640  01DB  0872               	movf	DS_Read@temp,w
  2641  01DC  00F0               	movwf	??_DS_Read
  2642  01DD  3007               	movlw	7
  2643  01DE                     u585:	
  2644  01DE  35F0               	lslf	??_DS_Read,f
  2645  01DF  0B89               	decfsz	9,f
  2646  01E0  29DE               	goto	u585
  2647  01E1  3673               	lsrf	DS_Read@value,w
  2648  01E2  0470               	iorwf	??_DS_Read,w
  2649  01E3  00F1               	movwf	??_DS_Read+1
  2650  01E4  0871               	movf	??_DS_Read+1,w
  2651  01E5  00F3               	movwf	DS_Read@value
  2652                           
  2653                           ;../library/ds18b20.c: 63:     }
  2654  01E6  3001               	movlw	1
  2655  01E7  00F0               	movwf	??_DS_Read
  2656  01E8  0870               	movf	??_DS_Read,w
  2657  01E9  07F4               	addwf	DS_Read@i,f
  2658  01EA  3008               	movlw	8
  2659  01EB  0274               	subwf	DS_Read@i,w
  2660  01EC  1C03               	skipc
  2661  01ED  29C4               	goto	l334
  2662                           
  2663                           ;../library/ds18b20.c: 64:     GIE = 1;
  2664  01EE  178B               	bsf	11,7	;volatile
  2665                           
  2666                           ;../library/ds18b20.c: 65:     return value;
  2667  01EF  0873               	movf	DS_Read@value,w
  2668  01F0  0008               	return
  2669  01F1                     __end_of_DS_Read:	
  2670                           
  2671                           	psect	text11
  2672  030B                     __ptext11:	
  2673 ;; *************** function _DS_Convert *****************
  2674 ;; Defined at:
  2675 ;;		line 68 in file "../library/ds18b20.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, pclath, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1
  2689 ;;      Params:         0       0       0
  2690 ;;      Locals:         0       0       0
  2691 ;;      Temps:          2       0       0
  2692 ;;      Totals:         2       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    2
  2696 ;; This function calls:
  2697 ;;		_DS_Rest
  2698 ;;		_DS_Write
  2699 ;; This function is called by:
  2700 ;;		_Send_DS
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _DS_Convert
  2706  030B                     _DS_Convert:	
  2707                           
  2708                           ;../library/ds18b20.c: 70:     DS_Rest();
  2709                           
  2710                           ;incstack = 0
  2711                           ; Regs used in _DS_Convert: [wreg+status,2+status,0+pclath+cstack]
  2712  030B  223E               	fcall	_DS_Rest
  2713                           
  2714                           ;../library/ds18b20.c: 71:     DS_Write(0xCC);
  2715  030C  30CC               	movlw	204
  2716  030D  2219               	fcall	_DS_Write
  2717                           
  2718                           ;../library/ds18b20.c: 72:     DS_Write(0x44);
  2719  030E  3044               	movlw	68
  2720  030F  2219               	fcall	_DS_Write
  2721                           
  2722                           ;../library/ds18b20.c: 73:     _delay((unsigned long)((800)*(4000000/4000.0)));
  2723  0310  3005               	movlw	5
  2724  0311  00F4               	movwf	??_DS_Convert+1
  2725  0312  300F               	movlw	15
  2726  0313  00F3               	movwf	??_DS_Convert
  2727  0314  30F1               	movlw	241
  2728  0315                     u1027:	
  2729  0315  0B89               	decfsz	9,f
  2730  0316  2B15               	goto	u1027
  2731  0317  0BF3               	decfsz	??_DS_Convert,f
  2732  0318  2B15               	goto	u1027
  2733  0319  0BF4               	decfsz	??_DS_Convert+1,f
  2734  031A  2B15               	goto	u1027
  2735  031B  0000               	nop
  2736  031C  0008               	return
  2737  031D                     __end_of_DS_Convert:	
  2738                           
  2739                           	psect	text12
  2740  0219                     __ptext12:	
  2741 ;; *************** function _DS_Write *****************
  2742 ;; Defined at:
  2743 ;;		line 35 in file "../library/ds18b20.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  command         1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  command         1    1[COMMON] unsigned char 
  2748 ;;  i               1    2[COMMON] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1
  2758 ;;      Params:         0       0       0
  2759 ;;      Locals:         2       0       0
  2760 ;;      Temps:          1       0       0
  2761 ;;      Totals:         3       0       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    1
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_DS_Convert
  2769 ;;		_DS_GetTemp
  2770 ;;		_DS_RAM_Write
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           
  2775                           ;psect for function _DS_Write
  2776  0219                     _DS_Write:	
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _DS_Write: [wreg+status,2+status,0]
  2780                           ;DS_Write@command stored from wreg
  2781  0219  00F1               	movwf	DS_Write@command
  2782                           
  2783                           ;../library/ds18b20.c: 36:     unsigned char i;;../library/ds18b20.c: 38:     GIE = 0;
  2784  021A  138B               	bcf	11,7	;volatile
  2785                           
  2786                           ;../library/ds18b20.c: 39:     for(i = 0; i < 8; i++) {
  2787  021B  01F2               	clrf	DS_Write@i
  2788  021C                     l329:	
  2789                           
  2790                           ;../library/ds18b20.c: 40:         TRISC3 = RC3 = 0;
  2791  021C  0020               	movlb	0	; select bank0
  2792  021D  118E               	bcf	14,3	;volatile
  2793  021E  0021               	movlb	1	; select bank1
  2794  021F  118E               	bcf	14,3	;volatile
  2795                           
  2796                           ;../library/ds18b20.c: 41:         _delay((unsigned long)((15)*(4000000/4000000.0)));
  2797  0220  3005               	movlw	5
  2798  0221                     u1037:	
  2799  0221  0B89               	decfsz	9,f
  2800  0222  2A21               	goto	u1037
  2801                           
  2802                           ;../library/ds18b20.c: 42:         TRISC3 = command & 0x01;
  2803  0223  1C71               	btfss	DS_Write@command,0
  2804  0224  2A28               	goto	u550
  2805  0225  0021               	movlb	1	; select bank1
  2806  0226  158E               	bsf	14,3	;volatile
  2807  0227  2A2A               	goto	u564
  2808  0228                     u550:	
  2809  0228  0021               	movlb	1	; select bank1
  2810  0229  118E               	bcf	14,3	;volatile
  2811  022A                     u564:	
  2812                           
  2813                           ;../library/ds18b20.c: 43:         _delay((unsigned long)((45)*(4000000/4000000.0)));
  2814  022A  300F               	movlw	15
  2815  022B                     u1047:	
  2816  022B  0B89               	decfsz	9,f
  2817  022C  2A2B               	goto	u1047
  2818                           
  2819                           ;../library/ds18b20.c: 44:         TRISC3 = 1;
  2820  022D  0021               	movlb	1	; select bank1
  2821  022E  158E               	bsf	14,3	;volatile
  2822                           
  2823                           ;../library/ds18b20.c: 45:         command >>= 1;
  2824  022F  1003               	clrc
  2825  0230  0CF1               	rrf	DS_Write@command,f
  2826                           
  2827                           ;../library/ds18b20.c: 46:     }
  2828  0231  3001               	movlw	1
  2829  0232  00F0               	movwf	??_DS_Write
  2830  0233  0870               	movf	??_DS_Write,w
  2831  0234  07F2               	addwf	DS_Write@i,f
  2832  0235  3008               	movlw	8
  2833  0236  0272               	subwf	DS_Write@i,w
  2834  0237  1C03               	skipc
  2835  0238  2A1C               	goto	l329
  2836                           
  2837                           ;../library/ds18b20.c: 47:     GIE = 1;
  2838  0239  178B               	bsf	11,7	;volatile
  2839                           
  2840                           ;../library/ds18b20.c: 48:     _delay((unsigned long)((120)*(4000000/4000000.0)));
  2841  023A  3028               	movlw	40
  2842  023B                     u1057:	
  2843  023B  0B89               	decfsz	9,f
  2844  023C  2A3B               	goto	u1057
  2845  023D  0008               	return
  2846  023E                     __end_of_DS_Write:	
  2847                           
  2848                           	psect	text13
  2849  023E                     __ptext13:	
  2850 ;; *************** function _DS_Rest *****************
  2851 ;; Defined at:
  2852 ;;		line 18 in file "../library/ds18b20.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  flag            1    0[COMMON] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  1    wreg      void 
  2859 ;; Registers used:
  2860 ;;		wreg, status,2, status,0
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1
  2866 ;;      Params:         0       0       0
  2867 ;;      Locals:         1       0       0
  2868 ;;      Temps:          0       0       0
  2869 ;;      Totals:         1       0       0
  2870 ;;Total ram usage:        1 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    1
  2873 ;; This function calls:
  2874 ;;		Nothing
  2875 ;; This function is called by:
  2876 ;;		_DS_Convert
  2877 ;;		_DS_GetTemp
  2878 ;;		_DS_RAM_Write
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _DS_Rest
  2884  023E                     _DS_Rest:	
  2885                           
  2886                           ;../library/ds18b20.c: 19:     unsigned char flag = 1;
  2887                           
  2888                           ;incstack = 0
  2889                           ; Regs used in _DS_Rest: [wreg+status,2+status,0]
  2890  023E  01F0               	clrf	DS_Rest@flag
  2891  023F  0AF0               	incf	DS_Rest@flag,f
  2892                           
  2893                           ;../library/ds18b20.c: 21:     GIE = 0;
  2894  0240  138B               	bcf	11,7	;volatile
  2895  0241                     l1620:	
  2896                           ;../library/ds18b20.c: 22:     while(flag) {
  2897                           
  2898                           
  2899                           ;../library/ds18b20.c: 22:     while(flag) {
  2900  0241  0870               	movf	DS_Rest@flag,w
  2901  0242  1903               	btfsc	3,2
  2902  0243  2A56               	goto	l325
  2903                           
  2904                           ;../library/ds18b20.c: 23:         TRISC3 = RC3 = 0;
  2905  0244  0020               	movlb	0	; select bank0
  2906  0245  118E               	bcf	14,3	;volatile
  2907  0246  0021               	movlb	1	; select bank1
  2908  0247  118E               	bcf	14,3	;volatile
  2909                           
  2910                           ;../library/ds18b20.c: 24:         _delay((unsigned long)((500)*(4000000/4000000.0)));
  2911  0248  30A6               	movlw	166
  2912  0249                     u1067:	
  2913  0249  0B89               	decfsz	9,f
  2914  024A  2A49               	goto	u1067
  2915  024B  3200               	nop2
  2916                           
  2917                           ;../library/ds18b20.c: 25:         TRISC3 = 1;
  2918  024C  0021               	movlb	1	; select bank1
  2919  024D  158E               	bsf	14,3	;volatile
  2920                           
  2921                           ;../library/ds18b20.c: 26:         _delay((unsigned long)((60)*(4000000/4000000.0)));
  2922  024E  3014               	movlw	20
  2923  024F                     u1077:	
  2924  024F  0B89               	decfsz	9,f
  2925  0250  2A4F               	goto	u1077
  2926                           
  2927                           ;../library/ds18b20.c: 27:         if(!RC3) {
  2928  0251  0020               	movlb	0	; select bank0
  2929  0252  198E               	btfsc	14,3	;volatile
  2930  0253  2A41               	goto	l1620
  2931                           
  2932                           ;../library/ds18b20.c: 28:             flag = 0;
  2933  0254  01F0               	clrf	DS_Rest@flag
  2934  0255  2A41               	goto	l1620
  2935  0256                     l325:	
  2936                           
  2937                           ;../library/ds18b20.c: 31:     GIE = 1;
  2938  0256  178B               	bsf	11,7	;volatile
  2939                           
  2940                           ;../library/ds18b20.c: 32:     _delay((unsigned long)((240)*(4000000/4000000.0)));
  2941  0257  3050               	movlw	80
  2942  0258                     u1087:	
  2943  0258  0B89               	decfsz	9,f
  2944  0259  2A58               	goto	u1087
  2945  025A  0008               	return
  2946  025B                     __end_of_DS_Rest:	
  2947                           
  2948                           	psect	text14
  2949  0159                     __ptext14:	
  2950 ;; *************** function _NRF_Tx_Set *****************
  2951 ;; Defined at:
  2952 ;;		line 361 in file "../library/nrf24l01.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  addr            1    wreg     PTR unsigned char 
  2955 ;;		 -> tx_addr(5), 
  2956 ;;  ack             1    7[COMMON] unsigned char 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  addr            1   10[COMMON] PTR unsigned char 
  2959 ;;		 -> tx_addr(5), 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1
  2969 ;;      Params:         1       0       0
  2970 ;;      Locals:         1       0       0
  2971 ;;      Temps:          2       0       0
  2972 ;;      Totals:         4       0       0
  2973 ;;Total ram usage:        4 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    3
  2976 ;; This function calls:
  2977 ;;		_NRF_Write_Buf
  2978 ;;		_NRF_Write_Reg
  2979 ;; This function is called by:
  2980 ;;		_WirelessPad
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _NRF_Tx_Set
  2986  0159                     _NRF_Tx_Set:	
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _NRF_Tx_Set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2990                           ;NRF_Tx_Set@addr stored from wreg
  2991  0159  00FA               	movwf	NRF_Tx_Set@addr
  2992                           
  2993                           ;../library/nrf24l01.c: 362:     RA0 = 0;
  2994  015A  0020               	movlb	0	; select bank0
  2995  015B  100C               	bcf	12,0	;volatile
  2996                           
  2997                           ;../library/nrf24l01.c: 363:     NRF_Write_Buf(0x20 + 0x10, addr, 5);
  2998  015C  087A               	movf	NRF_Tx_Set@addr,w
  2999  015D  00F8               	movwf	??_NRF_Tx_Set
  3000  015E  0878               	movf	??_NRF_Tx_Set,w
  3001  015F  00F1               	movwf	NRF_Write_Buf@pBuf
  3002  0160  3005               	movlw	5
  3003  0161  00F9               	movwf	??_NRF_Tx_Set+1
  3004  0162  0879               	movf	??_NRF_Tx_Set+1,w
  3005  0163  00F2               	movwf	NRF_Write_Buf@len
  3006  0164  3030               	movlw	48
  3007  0165  2294               	fcall	_NRF_Write_Buf
  3008                           
  3009                           ;../library/nrf24l01.c: 364:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  3010  0166  087A               	movf	NRF_Tx_Set@addr,w
  3011  0167  00F8               	movwf	??_NRF_Tx_Set
  3012  0168  0878               	movf	??_NRF_Tx_Set,w
  3013  0169  00F1               	movwf	NRF_Write_Buf@pBuf
  3014  016A  3005               	movlw	5
  3015  016B  00F9               	movwf	??_NRF_Tx_Set+1
  3016  016C  0879               	movf	??_NRF_Tx_Set+1,w
  3017  016D  00F2               	movwf	NRF_Write_Buf@len
  3018  016E  302A               	movlw	42
  3019  016F  2294               	fcall	_NRF_Write_Buf
  3020                           
  3021                           ;../library/nrf24l01.c: 365:     NRF_Write_Reg(0x20 + 0x01, ack);
  3022  0170  0877               	movf	NRF_Tx_Set@ack,w
  3023  0171  00F8               	movwf	??_NRF_Tx_Set
  3024  0172  0878               	movf	??_NRF_Tx_Set,w
  3025  0173  00F1               	movwf	NRF_Write_Reg@value
  3026  0174  3021               	movlw	33
  3027  0175  232B               	fcall	_NRF_Write_Reg
  3028                           
  3029                           ;../library/nrf24l01.c: 367:     NRF_Write_Reg(0x20 + 0x02, 0x01);
  3030  0176  01F1               	clrf	NRF_Write_Reg@value
  3031  0177  0AF1               	incf	NRF_Write_Reg@value,f
  3032  0178  3022               	movlw	34
  3033  0179  232B               	fcall	_NRF_Write_Reg
  3034                           
  3035                           ;../library/nrf24l01.c: 368:     NRF_Write_Reg(0x20 + 0x04, 0x1a);
  3036  017A  301A               	movlw	26
  3037  017B  00F8               	movwf	??_NRF_Tx_Set
  3038  017C  0878               	movf	??_NRF_Tx_Set,w
  3039  017D  00F1               	movwf	NRF_Write_Reg@value
  3040  017E  3024               	movlw	36
  3041  017F  232B               	fcall	_NRF_Write_Reg
  3042                           
  3043                           ;../library/nrf24l01.c: 369:     NRF_Write_Reg(0x20 + 0x05, 40);
  3044  0180  3028               	movlw	40
  3045  0181  00F8               	movwf	??_NRF_Tx_Set
  3046  0182  0878               	movf	??_NRF_Tx_Set,w
  3047  0183  00F1               	movwf	NRF_Write_Reg@value
  3048  0184  3025               	movlw	37
  3049  0185  232B               	fcall	_NRF_Write_Reg
  3050                           
  3051                           ;../library/nrf24l01.c: 370:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  3052  0186  300F               	movlw	15
  3053  0187  00F8               	movwf	??_NRF_Tx_Set
  3054  0188  0878               	movf	??_NRF_Tx_Set,w
  3055  0189  00F1               	movwf	NRF_Write_Reg@value
  3056  018A  3026               	movlw	38
  3057  018B  232B               	fcall	_NRF_Write_Reg
  3058                           
  3059                           ;../library/nrf24l01.c: 371:     NRF_Write_Reg(0x20 + 0x00, 0x0e);
  3060  018C  300E               	movlw	14
  3061  018D  00F8               	movwf	??_NRF_Tx_Set
  3062  018E  0878               	movf	??_NRF_Tx_Set,w
  3063  018F  00F1               	movwf	NRF_Write_Reg@value
  3064  0190  3020               	movlw	32
  3065  0191  232B               	fcall	_NRF_Write_Reg
  3066  0192  0008               	return
  3067  0193                     __end_of_NRF_Tx_Set:	
  3068                           
  3069                           	psect	text15
  3070  032B                     __ptext15:	
  3071 ;; *************** function _NRF_Write_Reg *****************
  3072 ;; Defined at:
  3073 ;;		line 103 in file "../library/nrf24l01.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  reg             1    wreg     unsigned char 
  3076 ;;  value           1    1[COMMON] unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  reg             1    3[COMMON] unsigned char 
  3079 ;;  status          1    4[COMMON] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      unsigned char 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1
  3089 ;;      Params:         1       0       0
  3090 ;;      Locals:         2       0       0
  3091 ;;      Temps:          1       0       0
  3092 ;;      Totals:         4       0       0
  3093 ;;Total ram usage:        4 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		_NRF_SPI_RW
  3098 ;; This function is called by:
  3099 ;;		_NRF_Tx_Set
  3100 ;;		_NRF_Tx_CheckACK
  3101 ;;		_NRF_Power_off
  3102 ;;		_NRF_TX_Mode
  3103 ;;		_NRF_TxPacket
  3104 ;;		_NRF_RX_Mode
  3105 ;;		_NRF_RxPacket
  3106 ;;		_NRF_Flush_TX
  3107 ;;		_NRF_Flush_RX
  3108 ;;		_NRF_Clear_IRQ
  3109 ;;		_NRF_Rx_Set
  3110 ;;		_NRF_Rx_Set_P0
  3111 ;;		_NRF_Rx_Set_P1
  3112 ;;		_NRF_Rx_Set_P3
  3113 ;;		_NRF_Rx_Set_P4
  3114 ;;		_NRF_Rx_Set_P5
  3115 ;;		_NRF_Rx_Receive
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           
  3120                           ;psect for function _NRF_Write_Reg
  3121  032B                     _NRF_Write_Reg:	
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _NRF_Write_Reg: [wreg+status,2+status,0+pclath+cstack]
  3125                           ;NRF_Write_Reg@reg stored from wreg
  3126  032B  00F3               	movwf	NRF_Write_Reg@reg
  3127                           
  3128                           ;../library/nrf24l01.c: 104:  unsigned char status;;../library/nrf24l01.c: 105:    RA2 =
      +                           0;
  3129  032C  0020               	movlb	0	; select bank0
  3130  032D  110C               	bcf	12,2	;volatile
  3131                           
  3132                           ;../library/nrf24l01.c: 106:    status = NRF_SPI_RW(reg);
  3133  032E  0873               	movf	NRF_Write_Reg@reg,w
  3134  032F  2339               	fcall	_NRF_SPI_RW
  3135  0330  00F2               	movwf	??_NRF_Write_Reg
  3136  0331  0872               	movf	??_NRF_Write_Reg,w
  3137  0332  00F4               	movwf	NRF_Write_Reg@status
  3138                           
  3139                           ;../library/nrf24l01.c: 107:    NRF_SPI_RW(value);
  3140  0333  0871               	movf	NRF_Write_Reg@value,w
  3141  0334  2339               	fcall	_NRF_SPI_RW
  3142                           
  3143                           ;../library/nrf24l01.c: 108:    RA2 = 1;
  3144  0335  0020               	movlb	0	; select bank0
  3145  0336  150C               	bsf	12,2	;volatile
  3146                           
  3147                           ;../library/nrf24l01.c: 109:    return(status);
  3148  0337  0874               	movf	NRF_Write_Reg@status,w
  3149  0338  0008               	return
  3150  0339                     __end_of_NRF_Write_Reg:	
  3151                           
  3152                           	psect	text16
  3153  0345                     __ptext16:	
  3154 ;; *************** function _NRF_SPI_Init *****************
  3155 ;; Defined at:
  3156 ;;		line 70 in file "../library/nrf24l01.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1
  3170 ;;      Params:         0       0       0
  3171 ;;      Locals:         0       0       0
  3172 ;;      Temps:          0       0       0
  3173 ;;      Totals:         0       0       0
  3174 ;;Total ram usage:        0 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_WirelessPad
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _NRF_SPI_Init
  3186  0345                     _NRF_SPI_Init:	
  3187                           
  3188                           ;../library/nrf24l01.c: 71:     SSP1STAT = 0x00;
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _NRF_SPI_Init: [wreg+status,2]
  3192  0345  0024               	movlb	4	; select bank4
  3193  0346  0194               	clrf	20	;volatile
  3194                           
  3195                           ;../library/nrf24l01.c: 72:     SSP1STATbits.CKE = 1;
  3196  0347  1714               	bsf	20,6	;volatile
  3197                           
  3198                           ;../library/nrf24l01.c: 74:     SSP1BUF = 0;
  3199  0348  0191               	clrf	17	;volatile
  3200                           
  3201                           ;../library/nrf24l01.c: 75:     SSP1IF = 0;
  3202  0349  0020               	movlb	0	; select bank0
  3203  034A  1191               	bcf	17,3	;volatile
  3204                           
  3205                           ;../library/nrf24l01.c: 76:     SSP1CON1 = 0x20;
  3206  034B  3020               	movlw	32
  3207  034C  0024               	movlb	4	; select bank4
  3208  034D  0095               	movwf	21	;volatile
  3209  034E  0008               	return
  3210  034F                     __end_of_NRF_SPI_Init:	
  3211                           
  3212                           	psect	text17
  3213  034F                     __ptext17:	
  3214 ;; *************** function _NRF_Port_Init *****************
  3215 ;; Defined at:
  3216 ;;		line 44 in file "../library/nrf24l01.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		None
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1
  3230 ;;      Params:         0       0       0
  3231 ;;      Locals:         0       0       0
  3232 ;;      Temps:          0       0       0
  3233 ;;      Totals:         0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_WirelessPad
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _NRF_Port_Init
  3246  034F                     _NRF_Port_Init:	
  3247                           
  3248                           ;../library/nrf24l01.c: 45:     TRISC1 = 1;
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _NRF_Port_Init: []
  3252  034F  0021               	movlb	1	; select bank1
  3253  0350  148E               	bsf	14,1	;volatile
  3254                           
  3255                           ;../library/nrf24l01.c: 46:     TRISC2 = 0;
  3256  0351  110E               	bcf	14,2	;volatile
  3257                           
  3258                           ;../library/nrf24l01.c: 47:     TRISC0 = 0;
  3259  0352  100E               	bcf	14,0	;volatile
  3260                           
  3261                           ;../library/nrf24l01.c: 48:     TRISA2 = 0;
  3262  0353  110C               	bcf	12,2	;volatile
  3263                           
  3264                           ;../library/nrf24l01.c: 49:     TRISA0 = 0;
  3265  0354  100C               	bcf	12,0	;volatile
  3266                           
  3267                           ;../library/nrf24l01.c: 54:     RA0 = 0;
  3268  0355  0020               	movlb	0	; select bank0
  3269  0356  100C               	bcf	12,0	;volatile
  3270                           
  3271                           ;../library/nrf24l01.c: 55:     RA2 = 1;
  3272  0357  150C               	bsf	12,2	;volatile
  3273  0358  0008               	return
  3274  0359                     __end_of_NRF_Port_Init:	
  3275                           
  3276                           	psect	text18
  3277  0384                     __ptext18:	
  3278 ;; *************** function _NRF_On *****************
  3279 ;; Defined at:
  3280 ;;		line 58 in file "../library/nrf24l01.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		None
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1
  3294 ;;      Params:         0       0       0
  3295 ;;      Locals:         0       0       0
  3296 ;;      Temps:          0       0       0
  3297 ;;      Totals:         0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_WirelessPad
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function _NRF_On
  3310  0384                     _NRF_On:	
  3311                           
  3312                           ;../library/nrf24l01.c: 59:     RA5 = 0;
  3313                           
  3314                           ;incstack = 0
  3315                           ; Regs used in _NRF_On: []
  3316  0384  0020               	movlb	0	; select bank0
  3317  0385  128C               	bcf	12,5	;volatile
  3318  0386  0008               	return
  3319  0387                     __end_of_NRF_On:	
  3320                           
  3321                           	psect	text19
  3322  010F                     __ptext19:	
  3323 ;; *************** function _NRF_Check *****************
  3324 ;; Defined at:
  3325 ;;		line 158 in file "../library/nrf24l01.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;		None
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  buf             5    5[BANK0 ] unsigned char [5]
  3330 ;;  tuf             5    0[BANK0 ] unsigned char [5]
  3331 ;;  i               1   10[BANK0 ] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  1    wreg      unsigned char 
  3334 ;; Registers used:
  3335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1
  3341 ;;      Params:         0       0       0
  3342 ;;      Locals:         0      11       0
  3343 ;;      Temps:          2       0       0
  3344 ;;      Totals:         2      11       0
  3345 ;;Total ram usage:       13 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    3
  3348 ;; This function calls:
  3349 ;;		_NRF_Read_Buf
  3350 ;;		_NRF_Write_Buf
  3351 ;; This function is called by:
  3352 ;;		_WirelessPad
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           
  3357                           ;psect for function _NRF_Check
  3358  010F                     _NRF_Check:	
  3359                           
  3360                           ;../library/nrf24l01.c: 159:     unsigned char tuf[5] = {0xE1, 0xE2, 0xE3, 0xE4, 0x05};
  3361                           
  3362                           ;incstack = 0
  3363                           ; Regs used in _NRF_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3364  010F  3020               	movlw	low NRF_Check@F2228
  3365  0110  0086               	movwf	6
  3366  0111  3000               	movlw	high NRF_Check@F2228
  3367  0112  0087               	movwf	7
  3368  0113  3048               	movlw	low NRF_Check@tuf
  3369  0114  0084               	movwf	4
  3370  0115  3000               	movlw	high NRF_Check@tuf
  3371  0116  0085               	movwf	5
  3372  0117  3005               	movlw	5
  3373  0118  00F8               	movwf	??_NRF_Check
  3374  0119                     u760:	
  3375  0119  0016               	moviw fsr1++
  3376  011A  001A               	movwi fsr0++
  3377  011B  0BF8               	decfsz	??_NRF_Check,f
  3378  011C  2919               	goto	u760
  3379                           
  3380                           ;../library/nrf24l01.c: 160:  unsigned char buf[5] = {0, 0, 0, 0, 0};
  3381  011D  304D               	movlw	low NRF_Check@buf
  3382  011E  0086               	movwf	6
  3383  011F  3000               	movlw	high NRF_Check@buf
  3384  0120  0087               	movwf	7
  3385  0121  3005               	movlw	5
  3386  0122  00F8               	movwf	??_NRF_Check
  3387  0123  3000               	movlw	0
  3388  0124                     u770:	
  3389  0124  001E               	movwi fsr1++
  3390  0125  0BF8               	decfsz	??_NRF_Check,f
  3391  0126  2924               	goto	u770
  3392                           
  3393                           ;../library/nrf24l01.c: 161:  unsigned char i;;../library/nrf24l01.c: 162:     NRF_Write
      +                          _Buf(0x20 + 0x10, tuf, 5);
  3394  0127  3048               	movlw	(low (NRF_Check@tuf| 0))& (0+255)
  3395  0128  00F8               	movwf	??_NRF_Check
  3396  0129  0878               	movf	??_NRF_Check,w
  3397  012A  00F1               	movwf	NRF_Write_Buf@pBuf
  3398  012B  3005               	movlw	5
  3399  012C  00F9               	movwf	??_NRF_Check+1
  3400  012D  0879               	movf	??_NRF_Check+1,w
  3401  012E  00F2               	movwf	NRF_Write_Buf@len
  3402  012F  3030               	movlw	48
  3403  0130  2294               	fcall	_NRF_Write_Buf
  3404                           
  3405                           ;../library/nrf24l01.c: 163:  NRF_Read_Buf(0x10, buf, 5);
  3406  0131  304D               	movlw	(low (NRF_Check@buf| 0))& (0+255)
  3407  0132  00F8               	movwf	??_NRF_Check
  3408  0133  0878               	movf	??_NRF_Check,w
  3409  0134  00F1               	movwf	NRF_Read_Buf@pBuf
  3410  0135  3005               	movlw	5
  3411  0136  00F9               	movwf	??_NRF_Check+1
  3412  0137  0879               	movf	??_NRF_Check+1,w
  3413  0138  00F2               	movwf	NRF_Read_Buf@len
  3414  0139  3010               	movlw	16
  3415  013A  225B               	fcall	_NRF_Read_Buf
  3416                           
  3417                           ;../library/nrf24l01.c: 164:  for(i = 0; i < 5; i++) if(tuf[i] != buf[i]) break;
  3418  013B  0020               	movlb	0	; select bank0
  3419  013C  01D2               	clrf	NRF_Check@i
  3420  013D                     l1814:	
  3421  013D  0852               	movf	NRF_Check@i,w
  3422  013E  3E4D               	addlw	(low (NRF_Check@buf| 0))& (0+255)
  3423  013F  0086               	movwf	6
  3424  0140  0187               	clrf	7
  3425  0141  0852               	movf	NRF_Check@i,w
  3426  0142  3E48               	addlw	(low (NRF_Check@tuf| 0))& (0+255)
  3427  0143  0084               	movwf	4
  3428  0144  0185               	clrf	5
  3429  0145  0800               	movf	0,w
  3430  0146  0601               	xorwf	1,w
  3431  0147  1D03               	btfss	3,2
  3432  0148  2951               	goto	l1822
  3433  0149  3001               	movlw	1
  3434  014A  00F8               	movwf	??_NRF_Check
  3435  014B  0878               	movf	??_NRF_Check,w
  3436  014C  07D2               	addwf	NRF_Check@i,f
  3437  014D  3005               	movlw	5
  3438  014E  0252               	subwf	NRF_Check@i,w
  3439  014F  1C03               	skipc
  3440  0150  293D               	goto	l1814
  3441  0151                     l1822:	
  3442                           
  3443                           ;../library/nrf24l01.c: 165:  if(i != 5) return 1;
  3444  0151  3005               	movlw	5
  3445  0152  0652               	xorwf	NRF_Check@i,w
  3446  0153  1903               	btfsc	3,2
  3447  0154  2957               	goto	l1828
  3448  0155  3001               	movlw	1
  3449  0156  0008               	return
  3450  0157                     l1828:	
  3451                           
  3452                           ;../library/nrf24l01.c: 166:  return 0;
  3453  0157  3000               	movlw	0
  3454  0158  0008               	return
  3455  0159                     __end_of_NRF_Check:	
  3456                           
  3457                           	psect	text20
  3458  0294                     __ptext20:	
  3459 ;; *************** function _NRF_Write_Buf *****************
  3460 ;; Defined at:
  3461 ;;		line 138 in file "../library/nrf24l01.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  reg             1    wreg     unsigned char 
  3464 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  3465 ;;		 -> tx_addr(5), pad_dat(2), pad_aux_dat(2), RX_ADDRESS_P5(5), 
  3466 ;;		 -> RX_ADDRESS_P4(5), RX_ADDRESS_P3(5), RX_ADDRESS_P2(5), RX_ADDRESS_P1(5), 
  3467 ;;		 -> RX_ADDRESS_P0(5), NRF_Check@tuf(5), 
  3468 ;;  len             1    2[COMMON] unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  reg             1    5[COMMON] unsigned char 
  3471 ;;  i               1    6[COMMON] unsigned char 
  3472 ;;  status          1    0        unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      unsigned char 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1
  3482 ;;      Params:         2       0       0
  3483 ;;      Locals:         3       0       0
  3484 ;;      Temps:          1       0       0
  3485 ;;      Totals:         6       0       0
  3486 ;;Total ram usage:        6 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    2
  3489 ;; This function calls:
  3490 ;;		_NRF_SPI_RW
  3491 ;; This function is called by:
  3492 ;;		_NRF_Check
  3493 ;;		_NRF_Tx_Set
  3494 ;;		_NRF_Tx_Send
  3495 ;;		_NRF_TX_Mode
  3496 ;;		_NRF_RX_Mode
  3497 ;;		_NRF_Rx_Set_P0
  3498 ;;		_NRF_Rx_Set_P1
  3499 ;;		_NRF_Rx_Set_P3
  3500 ;;		_NRF_Rx_Set_P4
  3501 ;;		_NRF_Rx_Set_P5
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function _NRF_Write_Buf
  3507  0294                     _NRF_Write_Buf:	
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in _NRF_Write_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3511                           ;NRF_Write_Buf@reg stored from wreg
  3512  0294  00F5               	movwf	NRF_Write_Buf@reg
  3513                           
  3514                           ;../library/nrf24l01.c: 138: unsigned char NRF_Write_Buf(unsigned char reg, unsigned cha
      +                          r *pBuf, unsigned char len);../library/nrf24l01.c: 139: {;../library/nrf24l01.c: 140:  u
      +                          nsigned char status, i;;../library/nrf24l01.c: 141:    RA2 = 0;
  3515  0295  0020               	movlb	0	; select bank0
  3516  0296  110C               	bcf	12,2	;volatile
  3517  0297  0875               	movf	NRF_Write_Buf@reg,w
  3518  0298  2339               	fcall	_NRF_SPI_RW
  3519                           
  3520                           ;../library/nrf24l01.c: 143:    for(i = 0; i < len; i++) {
  3521  0299  01F6               	clrf	NRF_Write_Buf@i
  3522  029A                     l1588:	
  3523  029A  0872               	movf	NRF_Write_Buf@len,w
  3524  029B  0276               	subwf	NRF_Write_Buf@i,w
  3525  029C  1803               	btfsc	3,0
  3526  029D  2AAC               	goto	l85
  3527                           
  3528                           ;../library/nrf24l01.c: 144:      NRF_SPI_RW(*pBuf++);
  3529  029E  0871               	movf	NRF_Write_Buf@pBuf,w
  3530  029F  0086               	movwf	6
  3531  02A0  0187               	clrf	7
  3532  02A1  0801               	movf	1,w
  3533  02A2  2339               	fcall	_NRF_SPI_RW
  3534  02A3  3001               	movlw	1
  3535  02A4  00F3               	movwf	??_NRF_Write_Buf
  3536  02A5  0873               	movf	??_NRF_Write_Buf,w
  3537  02A6  07F1               	addwf	NRF_Write_Buf@pBuf,f
  3538                           
  3539                           ;../library/nrf24l01.c: 145:  }
  3540  02A7  3001               	movlw	1
  3541  02A8  00F3               	movwf	??_NRF_Write_Buf
  3542  02A9  0873               	movf	??_NRF_Write_Buf,w
  3543  02AA  07F6               	addwf	NRF_Write_Buf@i,f
  3544  02AB  2A9A               	goto	l1588
  3545  02AC                     l85:	
  3546                           
  3547                           ;../library/nrf24l01.c: 146:    RA2 = 1;
  3548  02AC  0020               	movlb	0	; select bank0
  3549  02AD  150C               	bsf	12,2	;volatile
  3550                           
  3551                           ;../library/nrf24l01.c: 147:    return(status);;	Return value of _NRF_Write_Buf is never
      +                           used
  3552  02AE  0008               	return
  3553  02AF                     __end_of_NRF_Write_Buf:	
  3554                           
  3555                           	psect	text21
  3556  025B                     __ptext21:	
  3557 ;; *************** function _NRF_Read_Buf *****************
  3558 ;; Defined at:
  3559 ;;		line 119 in file "../library/nrf24l01.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  reg             1    wreg     unsigned char 
  3562 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  3563 ;;		 -> NRF_Check@buf(5), 
  3564 ;;  len             1    2[COMMON] unsigned char 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  reg             1    6[COMMON] unsigned char 
  3567 ;;  i               1    7[COMMON] unsigned char 
  3568 ;;  status          1    0        unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      unsigned char 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1
  3578 ;;      Params:         2       0       0
  3579 ;;      Locals:         3       0       0
  3580 ;;      Temps:          2       0       0
  3581 ;;      Totals:         7       0       0
  3582 ;;Total ram usage:        7 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    2
  3585 ;; This function calls:
  3586 ;;		_NRF_SPI_RW
  3587 ;; This function is called by:
  3588 ;;		_NRF_Check
  3589 ;;		_NRF_Read_RX_Pload
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _NRF_Read_Buf
  3595  025B                     _NRF_Read_Buf:	
  3596                           
  3597                           ;incstack = 0
  3598                           ; Regs used in _NRF_Read_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3599                           ;NRF_Read_Buf@reg stored from wreg
  3600  025B  00F6               	movwf	NRF_Read_Buf@reg
  3601                           
  3602                           ;../library/nrf24l01.c: 119: unsigned char NRF_Read_Buf(unsigned char reg, unsigned char
      +                           *pBuf, unsigned char len);../library/nrf24l01.c: 120: {;../library/nrf24l01.c: 121:  un
      +                          signed char status,i;;../library/nrf24l01.c: 122:    RA2 = 0;
  3603  025C  0020               	movlb	0	; select bank0
  3604  025D  110C               	bcf	12,2	;volatile
  3605  025E  0876               	movf	NRF_Read_Buf@reg,w
  3606  025F  2339               	fcall	_NRF_SPI_RW
  3607                           
  3608                           ;../library/nrf24l01.c: 124:    for(i = 0; i < len; i++)
  3609  0260  01F7               	clrf	NRF_Read_Buf@i
  3610  0261                     l1718:	
  3611  0261  0872               	movf	NRF_Read_Buf@len,w
  3612  0262  0277               	subwf	NRF_Read_Buf@i,w
  3613  0263  1803               	btfsc	3,0
  3614  0264  2A75               	goto	l79
  3615                           
  3616                           ;../library/nrf24l01.c: 125:  {;../library/nrf24l01.c: 126:      pBuf[i] = NRF_SPI_RW(0x
      +                          FF);
  3617  0265  30FF               	movlw	255
  3618  0266  2339               	fcall	_NRF_SPI_RW
  3619  0267  00F3               	movwf	??_NRF_Read_Buf
  3620  0268  0877               	movf	NRF_Read_Buf@i,w
  3621  0269  0771               	addwf	NRF_Read_Buf@pBuf,w
  3622  026A  00F4               	movwf	??_NRF_Read_Buf+1
  3623  026B  0874               	movf	??_NRF_Read_Buf+1,w
  3624  026C  0086               	movwf	6
  3625  026D  0187               	clrf	7
  3626  026E  0873               	movf	??_NRF_Read_Buf,w
  3627  026F  0081               	movwf	1
  3628                           
  3629                           ;../library/nrf24l01.c: 127:    }
  3630  0270  3001               	movlw	1
  3631  0271  00F3               	movwf	??_NRF_Read_Buf
  3632  0272  0873               	movf	??_NRF_Read_Buf,w
  3633  0273  07F7               	addwf	NRF_Read_Buf@i,f
  3634  0274  2A61               	goto	l1718
  3635  0275                     l79:	
  3636                           
  3637                           ;../library/nrf24l01.c: 128:  RA2 = 1;
  3638  0275  0020               	movlb	0	; select bank0
  3639  0276  150C               	bsf	12,2	;volatile
  3640                           
  3641                           ;../library/nrf24l01.c: 129:    return(status);;	Return value of _NRF_Read_Buf is never 
      +                          used
  3642  0277  0008               	return
  3643  0278                     __end_of_NRF_Read_Buf:	
  3644                           
  3645                           	psect	text22
  3646  0339                     __ptext22:	
  3647 ;; *************** function _NRF_SPI_RW *****************
  3648 ;; Defined at:
  3649 ;;		line 79 in file "../library/nrf24l01.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  dat             1    wreg     unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  dat             1    0[COMMON] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      unsigned char 
  3656 ;; Registers used:
  3657 ;;		wreg
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMMON   BANK0   BANK1
  3663 ;;      Params:         0       0       0
  3664 ;;      Locals:         1       0       0
  3665 ;;      Temps:          0       0       0
  3666 ;;      Totals:         1       0       0
  3667 ;;Total ram usage:        1 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_NRF_Read_Reg
  3674 ;;		_NRF_Write_Reg
  3675 ;;		_NRF_Read_Buf
  3676 ;;		_NRF_Write_Buf
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _NRF_SPI_RW
  3682  0339                     _NRF_SPI_RW:	
  3683                           
  3684                           ;incstack = 0
  3685                           ; Regs used in _NRF_SPI_RW: [wreg]
  3686                           ;NRF_SPI_RW@dat stored from wreg
  3687  0339  00F0               	movwf	NRF_SPI_RW@dat
  3688                           
  3689                           ;../library/nrf24l01.c: 80:     SSP1IF = 0;
  3690  033A  0020               	movlb	0	; select bank0
  3691  033B  1191               	bcf	17,3	;volatile
  3692                           
  3693                           ;../library/nrf24l01.c: 81:     SSP1BUF = dat;
  3694  033C  0870               	movf	NRF_SPI_RW@dat,w
  3695  033D  0024               	movlb	4	; select bank4
  3696  033E  0091               	movwf	17	;volatile
  3697  033F                     l65:	
  3698                           ;../library/nrf24l01.c: 82:     while(!SSP1IF);
  3699                           
  3700  033F  0020               	movlb	0	; select bank0
  3701  0340  1D91               	btfss	17,3	;volatile
  3702  0341  2B3F               	goto	l65
  3703                           
  3704                           ;../library/nrf24l01.c: 84:     return(SSP1BUF);
  3705  0342  0024               	movlb	4	; select bank4
  3706  0343  0811               	movf	17,w	;volatile
  3707  0344  0008               	return
  3708  0345                     __end_of_NRF_SPI_RW:	
  3709                           
  3710                           	psect	text23
  3711  0387                     __ptext23:	
  3712 ;; *************** function _PORT_Init *****************
  3713 ;; Defined at:
  3714 ;;		line 4 in file "../library/port.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		status,2, status,0, pclath, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1
  3728 ;;      Params:         0       0       0
  3729 ;;      Locals:         0       0       0
  3730 ;;      Temps:          0       0       0
  3731 ;;      Totals:         0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    2
  3735 ;; This function calls:
  3736 ;;		_PORTA_Init
  3737 ;;		_PORTC_Init
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function _PORT_Init
  3745  0387                     _PORT_Init:	
  3746                           
  3747                           ;../library/port.c: 5:     PORTA_Init();
  3748                           
  3749                           ;incstack = 0
  3750                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
  3751  0387  2362               	fcall	_PORTA_Init
  3752                           
  3753                           ;../library/port.c: 6:     PORTC_Init();
  3754  0388  2359               	fcall	_PORTC_Init
  3755  0389  0008               	return
  3756  038A                     __end_of_PORT_Init:	
  3757                           
  3758                           	psect	text24
  3759  0359                     __ptext24:	
  3760 ;; *************** function _PORTC_Init *****************
  3761 ;; Defined at:
  3762 ;;		line 16 in file "../library/port.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		status,2
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1
  3776 ;;      Params:         0       0       0
  3777 ;;      Locals:         0       0       0
  3778 ;;      Temps:          0       0       0
  3779 ;;      Totals:         0       0       0
  3780 ;;Total ram usage:        0 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; Hardware stack levels required when called:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_PORT_Init
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           
  3791                           ;psect for function _PORTC_Init
  3792  0359                     _PORTC_Init:	
  3793                           
  3794                           ;../library/port.c: 17:     PORTC = 0;
  3795                           
  3796                           ;incstack = 0
  3797                           ; Regs used in _PORTC_Init: [status,2]
  3798  0359  0020               	movlb	0	; select bank0
  3799  035A  018E               	clrf	14	;volatile
  3800                           
  3801                           ;../library/port.c: 18:     LATC = 0;
  3802  035B  0022               	movlb	2	; select bank2
  3803  035C  018E               	clrf	14	;volatile
  3804                           
  3805                           ;../library/port.c: 19:     ANSELC = 0;
  3806  035D  0023               	movlb	3	; select bank3
  3807  035E  018E               	clrf	14	;volatile
  3808                           
  3809                           ;../library/port.c: 20:     TRISC = 0;
  3810  035F  0021               	movlb	1	; select bank1
  3811  0360  018E               	clrf	14	;volatile
  3812  0361  0008               	return
  3813  0362                     __end_of_PORTC_Init:	
  3814                           
  3815                           	psect	text25
  3816  0362                     __ptext25:	
  3817 ;; *************** function _PORTA_Init *****************
  3818 ;; Defined at:
  3819 ;;		line 9 in file "../library/port.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		status,2
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1
  3833 ;;      Params:         0       0       0
  3834 ;;      Locals:         0       0       0
  3835 ;;      Temps:          0       0       0
  3836 ;;      Totals:         0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_PORT_Init
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _PORTA_Init
  3849  0362                     _PORTA_Init:	
  3850                           
  3851                           ;../library/port.c: 10:     PORTA = 0;
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _PORTA_Init: [status,2]
  3855  0362  0020               	movlb	0	; select bank0
  3856  0363  018C               	clrf	12	;volatile
  3857                           
  3858                           ;../library/port.c: 11:     LATA = 0;
  3859  0364  0022               	movlb	2	; select bank2
  3860  0365  018C               	clrf	12	;volatile
  3861                           
  3862                           ;../library/port.c: 12:     ANSELA = 0;
  3863  0366  0023               	movlb	3	; select bank3
  3864  0367  018C               	clrf	12	;volatile
  3865                           
  3866                           ;../library/port.c: 13:     TRISA = 0;
  3867  0368  0021               	movlb	1	; select bank1
  3868  0369  018C               	clrf	12	;volatile
  3869  036A  0008               	return
  3870  036B                     __end_of_PORTA_Init:	
  3871                           
  3872                           	psect	text26
  3873  037B                     __ptext26:	
  3874 ;; *************** function _LED_Init *****************
  3875 ;; Defined at:
  3876 ;;		line 5 in file "../library/ledx.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		None
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1
  3890 ;;      Params:         0       0       0
  3891 ;;      Locals:         0       0       0
  3892 ;;      Temps:          0       0       0
  3893 ;;      Totals:         0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_main
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           
  3905                           ;psect for function _LED_Init
  3906  037B                     _LED_Init:	
  3907                           
  3908                           ;../library/ledx.c: 6:     TRISC3 = 0;
  3909                           
  3910                           ;incstack = 0
  3911                           ; Regs used in _LED_Init: []
  3912  037B  0021               	movlb	1	; select bank1
  3913  037C  118E               	bcf	14,3	;volatile
  3914                           
  3915                           ;../library/ledx.c: 7:     LATC3 = 1;
  3916  037D  0022               	movlb	2	; select bank2
  3917  037E  158E               	bsf	14,3	;volatile
  3918  037F  0008               	return
  3919  0380                     __end_of_LED_Init:	
  3920                           
  3921                           	psect	text27
  3922  0380                     __ptext27:	
  3923 ;; *************** function _FOSC_Init *****************
  3924 ;; Defined at:
  3925 ;;		line 3 in file "../library/fosc.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;		None
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;		None
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMMON   BANK0   BANK1
  3939 ;;      Params:         0       0       0
  3940 ;;      Locals:         0       0       0
  3941 ;;      Temps:          0       0       0
  3942 ;;      Totals:         0       0       0
  3943 ;;Total ram usage:        0 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    1
  3946 ;; This function calls:
  3947 ;;		Nothing
  3948 ;; This function is called by:
  3949 ;;		_main
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           
  3954                           ;psect for function _FOSC_Init
  3955  0380                     _FOSC_Init:	
  3956                           
  3957                           ;../library/fosc.c: 4:     OSCCON = 0X68;
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in _FOSC_Init: [wreg]
  3961  0380  3068               	movlw	104
  3962  0381  0021               	movlb	1	; select bank1
  3963  0382  0099               	movwf	25	;volatile
  3964  0383  0008               	return
  3965  0384                     __end_of_FOSC_Init:	
  3966                           
  3967                           	psect	intentry
  3968  0004                     __pintentry:	
  3969 ;; *************** function _ISR *****************
  3970 ;; Defined at:
  3971 ;;		line 83 in file "main.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		None
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1
  3985 ;;      Params:         0       0       0
  3986 ;;      Locals:         0       0       0
  3987 ;;      Temps:          0       0       0
  3988 ;;      Totals:         0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		Interrupt level 1
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998  0004                     _ISR:	
  3999                           
  4000                           ;incstack = 0
  4001  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4002                           
  4003                           ; Regs used in _ISR: []
  4004  0005  3180               	pagesel	$
  4005                           
  4006                           ;main.c: 85:     if(IOCIF && IOCAF4) {
  4007  0006  1C0B               	btfss	11,0	;volatile
  4008  0007  280F               	goto	i1l282
  4009  0008  0027               	movlb	7	; select bank7
  4010  0009  1E13               	btfss	19,4	;volatile
  4011  000A  280F               	goto	i1l282
  4012                           
  4013                           ;main.c: 86:         IOCIE = 0;
  4014  000B  118B               	bcf	11,3	;volatile
  4015                           
  4016                           ;main.c: 87:         IOCIF = 0;
  4017  000C  100B               	bcf	11,0	;volatile
  4018                           
  4019                           ;main.c: 88:         IOCAF4 = 0;
  4020  000D  1213               	bcf	19,4	;volatile
  4021                           
  4022                           ;main.c: 94:         IOCIE = 1;
  4023                           
  4024                           ;main.c: 90:         if(RA4 == 1) {
  4025                           ;main.c: 92:         }
  4026  000E  158B               	bsf	11,3	;volatile
  4027  000F                     i1l282:	
  4028  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4029  0010  0009               	retfie
  4030  0011                     __end_of_ISR:	
  4031  007E                     btemp	set	126	;btemp
  4032  007E                     int$flags	set	126
  4033  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        45
    BSS         9
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      79
    BANK1            32      0      10

Pointer List with Targets:

    sp__memcpy	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    NRF_Tx_Send@txbuf	PTR unsigned char  size(1) Largest target is 2
		 -> pad_dat(BANK0[2]), pad_aux_dat(BANK0[2]), 

    NRF_Tx_Set@addr	PTR unsigned char  size(1) Largest target is 5
		 -> tx_addr(BANK0[5]), 

    NRF_Write_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> tx_addr(BANK0[5]), pad_dat(BANK0[2]), pad_aux_dat(BANK0[2]), RX_ADDRESS_P5(BANK0[5]), 
		 -> RX_ADDRESS_P4(BANK0[5]), RX_ADDRESS_P3(BANK0[5]), RX_ADDRESS_P2(BANK0[5]), RX_ADDRESS_P1(BANK0[5]), 
		 -> RX_ADDRESS_P0(BANK0[5]), NRF_Check@tuf(BANK0[5]), 

    NRF_Read_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> NRF_Check@buf(BANK0[5]), 


Critical Paths under _main in COMMON

    _WirelessPad->_Send_DS
    _NRF_Tx_Send->_NRF_Tx_CheckACK
    _NRF_Tx_Send->_NRF_Write_Buf
    _NRF_Tx_CheckACK->_NRF_Write_Reg
    _NRF_Read_Reg->_NRF_SPI_RW
    _DS_GetTemp->___lldiv
    ___lldiv->___lmul
    _DS_Convert->_DS_Write
    _NRF_Tx_Set->_NRF_Write_Buf
    _NRF_Write_Reg->_NRF_SPI_RW
    _NRF_Check->_NRF_Read_Buf
    _NRF_Write_Buf->_NRF_SPI_RW
    _NRF_Read_Buf->_NRF_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WirelessPad
    _WirelessPad->_Send_DS
    _Send_DS->_DS_GetTemp
    _DS_GetTemp->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17725
                          _FOSC_Init
                           _LED_Init
                          _PORT_Init
                        _WirelessPad
 ---------------------------------------------------------------------------------
 (1) _WirelessPad                                          2     2      0   17725
                                             33 BANK0      2     2      0
                               _LEDx
                          _NRF_Check
                             _NRF_On
                      _NRF_Port_Init
                       _NRF_SPI_Init
                         _NRF_Tx_Set
                            _Send_DS
 ---------------------------------------------------------------------------------
 (2) _Send_DS                                              3     3      0    7959
                                             13 COMMON     1     1      0
                                             31 BANK0      2     2      0
                         _DS_Convert
                         _DS_GetTemp
                               _LEDx
                        _NRF_Tx_Send
 ---------------------------------------------------------------------------------
 (3) _NRF_Tx_Send                                          4     3      1    6458
                                              7 COMMON     4     3      1
                    _NRF_Tx_CheckACK
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (4) _NRF_Tx_CheckACK                                      2     2      0    3340
                                              5 COMMON     2     2      0
                       _NRF_Read_Reg
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (5) _NRF_Read_Reg                                         3     3      0      67
                                              1 COMMON     3     3      0
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _LEDx                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _DS_GetTemp                                          18    16      2    1362
                                             13 BANK0     18    16      2
                            _DS_Read
                            _DS_Rest
                           _DS_Write
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     466
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _DS_Read                                              5     5      0     114
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (3) _DS_Convert                                           2     2      0      93
                                              3 COMMON     2     2      0
                            _DS_Rest
                           _DS_Write
 ---------------------------------------------------------------------------------
 (4) _DS_Write                                             3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DS_Rest                                              1     1      0      24
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _NRF_Tx_Set                                           4     3      1    6236
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (5) _NRF_Write_Reg                                        4     3      1    3205
                                              1 COMMON     4     3      1
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _NRF_SPI_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Check                                           13    13      0    3508
                                              8 COMMON     2     2      0
                                              0 BANK0     11    11      0
                       _NRF_Read_Buf
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (4) _NRF_Write_Buf                                        6     4      2    2856
                                              1 COMMON     6     4      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _NRF_Read_Buf                                         7     5      2     445
                                              1 COMMON     7     5      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (5) _NRF_SPI_RW                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FOSC_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FOSC_Init
   _LED_Init
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _WirelessPad
     _LEDx
     _NRF_Check
       _NRF_Read_Buf
         _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_On
     _NRF_Port_Init
     _NRF_SPI_Init
     _NRF_Tx_Set
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _Send_DS
       _DS_Convert
         _DS_Rest
         _DS_Write
       _DS_GetTemp
         _DS_Read
         _DS_Rest
         _DS_Write
         ___lldiv
           ___lmul (ARG)
         ___lmul
       _LEDx
       _NRF_Tx_Send
         _NRF_Tx_CheckACK
           _NRF_Read_Reg
             _NRF_SPI_RW
           _NRF_Write_Reg
             _NRF_SPI_RW
         _NRF_Write_Buf
           _NRF_SPI_RW

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      67       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     23      4F       6       98.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       A       8       31.3%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      67       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 21 01:35:30 2019

             __CFG_CP$OFF 0000                        l65 033F                        l85 02AC  
                      l79 0275            NRF_Check@F2230 00A0            NRF_Check@F2228 0020  
             __CFG_LVP$ON 0000                       l325 0256                       l334 01C4  
                     l329 021C                       l287 037A                       _GIE 005F  
                     _RA0 0060                       _RA2 0062                       _RA4 0064  
                     _RA5 0065                       _RC3 0073              __CFG_CPD$OFF 0000  
                     _ISR 0004                       u550 0228                       u615 01A6  
                     u625 01AD                       u564 022A                       u655 00D0  
                     u735 0059                       u760 0119                       u585 01DE  
                     u770 0124                       u675 00DC                       u685 00F0  
                     u695 00FC                       u947 0281                       u957 02F2  
                     u967 02D8                       u977 02BA                       u987 02C3  
                     u997 01C9              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_IESO$ON 0000                _TX_ADDRESS 00A5                      ?_ISR 0070  
                    l1600 0305                      l1620 0241                      l1700 00FB  
                    l1606 0309                      l1704 0106                      l1718 0261  
                    l1822 0151                      l1814 013D                      l1672 019B  
                    l1728 02DB                      l1690 00CD                      l1770 0091  
                    l1850 02E0                      l1588 029A                      l1828 0157  
                    l1692 00DB                      l1676 01A5                      l1772 007E  
                    l1598 02FF                      l1786 02B0                      l1890 028C  
                    l1892 028F                      u1007 01CF                      u1017 01D8  
                    u1027 0315                      u1037 0221                      u1047 022B  
                    u1057 023B                      u1067 0249                      u1077 024F  
                    _LATA 010C                      u1087 0258                      _LATC 010E  
                    _LEDx 02AF           __end_of_DS_Read 01F1           __end_of_DS_Rest 025B  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0376  
             ?_DS_GetTemp 0055                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E             __CFG_BOREN$ON 0000  
             ?_DS_Convert 0070        __size_of_FOSC_Init 0004                      start 0011  
        NRF_Write_Buf@len 0072          NRF_Write_Buf@reg 0075             __CFG_MCLRE$ON 0000  
        NRF_Write_Reg@reg 0073                     ??_ISR 0070           __end_of_Send_DS 02F6  
                   ?_LEDx 0070             __CFG_PLLEN$ON 0000          __end_of_LED_Init 0380  
             ?_NRF_SPI_RW 0070              _tx_pad_chair 0394                     ?_main 0070  
      NRF_Tx_CheckACK@sta 0076             __CFG_WDTE$OFF 0000           __end_of___lldiv 010F  
                   _LATC3 0873                     _IOCIE 005B                     _IOCIF 0058  
            _tx_pad_potty 0390                     i1l282 000F          ?_NRF_Tx_CheckACK 0070  
                   _PORTA 000C                     _PORTC 000E                     _TRISA 008C  
                   _TRISC 008E        __size_of_NRF_Check 004A          __end_of_DS_Write 023E  
     ___lmul@multiplicand 0074               ?_NRF_Tx_Set 0077               ?_PORTA_Init 0070  
             ?_PORTC_Init 0070        __size_of_PORT_Init 0003                     status 0003  
                   wtemp0 007E         NRF_Write_Buf@pBuf 0071              __end_of_LEDx 02C8  
         __initialization 0012              __end_of_main 037B                    ??_LEDx 0070  
                  ??_main 007E             _RX_ADDRESS_P0 0043             _RX_ADDRESS_P1 003E  
           _RX_ADDRESS_P2 0039             _RX_ADDRESS_P3 0034             _RX_ADDRESS_P4 002F  
           _RX_ADDRESS_P5 002A       __size_of_DS_GetTemp 0089         __end_of_FOSC_Init 0384  
     __size_of_DS_Convert 0012                 ??_DS_Read 0070                 ??_DS_Rest 0070  
                  _ANSELA 018C                    _ANSELC 018E                    _IOCAF4 1C9C  
                  _OSCCON 0099                    _NRF_On 0384                    _SSP1IF 008B  
                  _TRISA0 0460                    _TRISA2 0462                    _TRISC0 0470  
                  _TRISA4 0464                    _TRISC1 0471                    _TRISC2 0472  
                  _TRISC3 0473       __size_of_NRF_SPI_RW 000C            __CFG_PWRTE$OFF 0000  
            ?_NRF_Tx_Send 0077                 ??_Send_DS 007D         __end_of_NRF_Check 0159  
     __size_of_NRF_Tx_Set 003A       __size_of_PORTA_Init 0009       __size_of_PORTC_Init 0009  
                  ___lmul 0193            __CFG_STVREN$ON 0000                 ??___lldiv 007C  
       __end_of_PORT_Init 038A               Send_DS@temp 0067     __end_of_NRF_Port_Init 0359  
 __end_of__initialization 0030                 ?_LED_Init 0070            __pcstackCOMMON 0070  
               ?_DS_Write 0070              __pidataBANK0 01F1              __pidataBANK1 0371  
   __end_of_NRF_Write_Buf 02AF               DS_Read@temp 0072     __end_of_NRF_Write_Reg 0339  
      NRF_Write_Reg@value 0071             ??_WirelessPad 0069               DS_Rest@flag 0070  
              __pbssBANK0 006B                __pbssBANK1 00A0                   ?_NRF_On 0070  
            ??_DS_GetTemp 0057                ??_LED_Init 0070              ??_DS_Convert 0073  
                 LEDx@num 0071                __pmaintext 0376             ?_NRF_SPI_Init 0070  
               DS_Write@i 0072                ??_DS_Write 0070                   ?___lmul 0070  
              __pintentry 0004            ___lmul@product 0078              ??_NRF_SPI_RW 0070  
      __end_of_DS_GetTemp 00BC              ??_NRF_Tx_Set 0078              ??_PORTA_Init 0070  
            ??_PORTC_Init 0070        __end_of_DS_Convert 031D                   _DS_Read 01C2  
                 _DS_Rest 023E             ?_NRF_Read_Buf 0071             ?_NRF_Read_Reg 0070  
                 _SSP1BUF 0211       __end_of_WirelessPad 0294           __size_of_NRF_On 0003  
              _pad_aux_ok 0398                _pad_aux_on 038C        __end_of_NRF_SPI_RW 0345  
                 _Send_DS 02E0            ??_NRF_SPI_Init 0070      __size_of_NRF_Tx_Send 0018  
      __end_of_NRF_Tx_Set 0193        __end_of_PORTA_Init 036B           __size_of___lmul 002F  
      __end_of_PORTC_Init 0362                   ___lldiv 00BC            NRF_Tx_Set@addr 007A  
          NRF_Tx_Send@len 0077                   __ptext1 0278                   __ptext2 02E0  
                 __ptext3 02C8                   __ptext4 02F6                   __ptext5 031D  
                 __ptext6 02AF                   __ptext7 0033                   __ptext8 0193  
                 __ptext9 00BC                   _pad_dat 006B              __size_of_ISR 000D  
          ??_NRF_Read_Buf 0073            ??_NRF_Read_Reg 0071                   _tx_addr 0025  
               _FOSC_Init 0380      end_of_initialization 0030  __size_of_NRF_Tx_CheckACK 0015  
                 init_ram 036B                   initloop 036C           ___lldiv@divisor 0048  
         ___lldiv@counter 0054           DS_Write@command 0071                 _NRF_Check 010F  
           NRF_SPI_RW@dat 0070           NRF_Read_Buf@len 0072           NRF_Read_Buf@reg 0076  
               _PORT_Init 0387           NRF_Read_Reg@reg 0072          __CFG_FOSC$INTOSC 0000  
             _WirelessPad 0278                ?_FOSC_Init 0070            NRF_Write_Buf@i 0076  
              _tx_pad_bed 038E                _tx_pad_aux 0396                _tx_pad_nci 0392  
          __end_of_NRF_On 0387         __size_of_LED_Init 0005                ?_NRF_Check 0070  
          __end_of___lmul 01C2         __size_of_DS_Write 0025              DS_Read@value 0073  
              ?_PORT_Init 0070       start_initialization 0012               __end_of_ISR 0011  
      DS_GetTemp@ds_hight 0064      __end_of_NRF_SPI_Init 034F       NRF_Write_Reg@status 0074  
                ??_NRF_On 0070         ??_NRF_Tx_CheckACK 0075      __end_of_NRF_Read_Buf 0278  
    __end_of_NRF_Read_Reg 032B                  ??___lmul 0078               __pdataBANK0 0020  
             __pdataBANK1 00A5    __size_of_NRF_Port_Init 000A             NRF_Read_Buf@i 0077  
               ___latbits 0000             __pcstackBANK0 0048                  ?_DS_Read 0070  
                ?_DS_Rest 0070               ??_FOSC_Init 0070    __size_of_NRF_Write_Buf 001B  
  __size_of_NRF_Write_Reg 000E                  DS_Read@i 0074       __end_of_pad_aux_off 038C  
                ?_Send_DS 0070          NRF_Tx_Send@txbuf 007A                  ?___lldiv 0048  
             ??_NRF_Check 0078               ??_PORT_Init 0070                NRF_Check@i 0052  
           NRF_Tx_Set@ack 0077             _NRF_Port_Init 034F                  _LED_Init 037B  
           ??_NRF_Tx_Send 0078                  _DS_Write 0219                  _SSP1CON1 0215  
                _SSP1STAT 0214             _NRF_Write_Buf 0294             _NRF_Write_Reg 032B  
   __size_of_NRF_SPI_Init 000A              NRF_Check@buf 004D              NRF_Check@tuf 0048  
            ?_WirelessPad 0070          __size_of_DS_Read 002F          __size_of_DS_Rest 001D  
       ___lmul@multiplier 0070            ?_NRF_Port_Init 0070               _pad_aux_dat 006D  
             _pad_aux_off 038A     __size_of_NRF_Read_Buf 001D     __size_of_NRF_Read_Reg 000E  
        __size_of_Send_DS 0016              _NRF_SPI_Init 0345            ?_NRF_Write_Buf 0071  
          ?_NRF_Write_Reg 0071       __end_of_NRF_Tx_Send 02E0          __size_of___lldiv 0053  
      __end_of_pad_aux_ok 039A        __end_of_pad_aux_on 038E                  __ptext10 01C2  
                __ptext11 030B                  __ptext20 0294                  __ptext12 0219  
                __ptext21 025B                  __ptext13 023E                  __ptext22 0339  
                __ptext14 0159                  __ptext23 0387                  __ptext15 032B  
                __ptext24 0359                  __ptext16 0345                  __ptext25 0362  
                __ptext17 034F                  __ptext26 037B                  __ptext18 0384  
                __ptext27 0380                  __ptext19 010F              _NRF_Read_Buf 025B  
            _NRF_Read_Reg 031D           _NRF_Tx_CheckACK 02F6             __size_of_LEDx 0019  
    __end_of_tx_pad_chair 0396             __size_of_main 0005      __end_of_tx_pad_potty 0392  
                int$flags 007E              _SSP1STATbits 0214          DS_GetTemp@ds_crc 0061  
        DS_GetTemp@ds_rs1 005E          DS_GetTemp@ds_rs2 005F          DS_GetTemp@ds_rs3 0060  
        DS_GetTemp@ds_low 0063           ??_NRF_Port_Init 0070                  intlevel1 0000  
        ___lldiv@dividend 004C                _DS_GetTemp 0033         __CFG_CLKOUTEN$OFF 0000  
              _DS_Convert 030B               _NRF_Tx_Send 02C8           ??_NRF_Write_Buf 0073  
         ??_NRF_Write_Reg 0072           DS_GetTemp@ds_th 005B           DS_GetTemp@ds_tl 005C  
              _NRF_SPI_RW 0339             __pstringtext1 038A             __pstringtext2 038C  
           __pstringtext3 038E             __pstringtext4 0390             __pstringtext5 0392  
           __pstringtext6 0394             __pstringtext7 0396             __pstringtext8 0398  
      NRF_Read_Reg@status 0073   __end_of_NRF_Tx_CheckACK 030B          ___lldiv@quotient 0050  
      __end_of_tx_pad_bed 0390        __end_of_tx_pad_aux 0398        __end_of_tx_pad_nci 0394  
              _NRF_Tx_Set 0159                _PORTA_Init 0362                _PORTC_Init 0359  
        NRF_Read_Buf@pBuf 0071      __size_of_WirelessPad 001C            DS_GetTemp@temp 0062  
           DS_GetTemp@ret 0065  
