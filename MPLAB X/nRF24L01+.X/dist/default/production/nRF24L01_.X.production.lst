

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Aug 31 22:56:31 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1823 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  010C                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011D                     	;# 
   138  011D                     	;# 
   139  018C                     	;# 
   140  018E                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020C                     	;# 
   162  020E                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  0212                     	;# 
   166  0212                     	;# 
   167  0213                     	;# 
   168  0213                     	;# 
   169  0214                     	;# 
   170  0214                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0216                     	;# 
   175  0216                     	;# 
   176  0217                     	;# 
   177  0217                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0391                     	;# 
   187  0392                     	;# 
   188  0393                     	;# 
   189  039A                     	;# 
   190  039C                     	;# 
   191  039D                     	;# 
   192  039E                     	;# 
   193  039F                     	;# 
   194  0FE4                     	;# 
   195  0FE5                     	;# 
   196  0FE6                     	;# 
   197  0FE7                     	;# 
   198  0FE8                     	;# 
   199  0FE9                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEF                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000E                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0015                     	;# 
   222  0016                     	;# 
   223  0016                     	;# 
   224  0017                     	;# 
   225  0018                     	;# 
   226  0019                     	;# 
   227  001A                     	;# 
   228  001B                     	;# 
   229  001C                     	;# 
   230  001E                     	;# 
   231  001F                     	;# 
   232  008C                     	;# 
   233  008E                     	;# 
   234  0091                     	;# 
   235  0092                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009A                     	;# 
   242  009B                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  010C                     	;# 
   248  010E                     	;# 
   249  0111                     	;# 
   250  0112                     	;# 
   251  0113                     	;# 
   252  0114                     	;# 
   253  0115                     	;# 
   254  0116                     	;# 
   255  0117                     	;# 
   256  0118                     	;# 
   257  0119                     	;# 
   258  011A                     	;# 
   259  011B                     	;# 
   260  011D                     	;# 
   261  011D                     	;# 
   262  018C                     	;# 
   263  018E                     	;# 
   264  0191                     	;# 
   265  0191                     	;# 
   266  0192                     	;# 
   267  0193                     	;# 
   268  0193                     	;# 
   269  0193                     	;# 
   270  0194                     	;# 
   271  0195                     	;# 
   272  0196                     	;# 
   273  0199                     	;# 
   274  019A                     	;# 
   275  019B                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019C                     	;# 
   280  019C                     	;# 
   281  019D                     	;# 
   282  019E                     	;# 
   283  019F                     	;# 
   284  020C                     	;# 
   285  020E                     	;# 
   286  0211                     	;# 
   287  0211                     	;# 
   288  0212                     	;# 
   289  0212                     	;# 
   290  0213                     	;# 
   291  0213                     	;# 
   292  0214                     	;# 
   293  0214                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0216                     	;# 
   298  0216                     	;# 
   299  0217                     	;# 
   300  0217                     	;# 
   301  0291                     	;# 
   302  0291                     	;# 
   303  0292                     	;# 
   304  0293                     	;# 
   305  0294                     	;# 
   306  0295                     	;# 
   307  0295                     	;# 
   308  0296                     	;# 
   309  0391                     	;# 
   310  0392                     	;# 
   311  0393                     	;# 
   312  039A                     	;# 
   313  039C                     	;# 
   314  039D                     	;# 
   315  039E                     	;# 
   316  039F                     	;# 
   317  0FE4                     	;# 
   318  0FE5                     	;# 
   319  0FE6                     	;# 
   320  0FE7                     	;# 
   321  0FE8                     	;# 
   322  0FE9                     	;# 
   323  0FEA                     	;# 
   324  0FEB                     	;# 
   325  0FED                     	;# 
   326  0FEE                     	;# 
   327  0FEF                     	;# 
   328  0000                     	;# 
   329  0001                     	;# 
   330  0002                     	;# 
   331  0003                     	;# 
   332  0004                     	;# 
   333  0005                     	;# 
   334  0006                     	;# 
   335  0007                     	;# 
   336  0008                     	;# 
   337  0009                     	;# 
   338  000A                     	;# 
   339  000B                     	;# 
   340  000C                     	;# 
   341  000E                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001E                     	;# 
   354  001F                     	;# 
   355  008C                     	;# 
   356  008E                     	;# 
   357  0091                     	;# 
   358  0092                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  010C                     	;# 
   371  010E                     	;# 
   372  0111                     	;# 
   373  0112                     	;# 
   374  0113                     	;# 
   375  0114                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011D                     	;# 
   384  011D                     	;# 
   385  018C                     	;# 
   386  018E                     	;# 
   387  0191                     	;# 
   388  0191                     	;# 
   389  0192                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0194                     	;# 
   394  0195                     	;# 
   395  0196                     	;# 
   396  0199                     	;# 
   397  019A                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019C                     	;# 
   403  019C                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  020C                     	;# 
   408  020E                     	;# 
   409  0211                     	;# 
   410  0211                     	;# 
   411  0212                     	;# 
   412  0212                     	;# 
   413  0213                     	;# 
   414  0213                     	;# 
   415  0214                     	;# 
   416  0214                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0215                     	;# 
   420  0216                     	;# 
   421  0216                     	;# 
   422  0217                     	;# 
   423  0217                     	;# 
   424  0291                     	;# 
   425  0291                     	;# 
   426  0292                     	;# 
   427  0293                     	;# 
   428  0294                     	;# 
   429  0295                     	;# 
   430  0295                     	;# 
   431  0296                     	;# 
   432  0391                     	;# 
   433  0392                     	;# 
   434  0393                     	;# 
   435  039A                     	;# 
   436  039C                     	;# 
   437  039D                     	;# 
   438  039E                     	;# 
   439  039F                     	;# 
   440  0FE4                     	;# 
   441  0FE5                     	;# 
   442  0FE6                     	;# 
   443  0FE7                     	;# 
   444  0FE8                     	;# 
   445  0FE9                     	;# 
   446  0FEA                     	;# 
   447  0FEB                     	;# 
   448  0FED                     	;# 
   449  0FEE                     	;# 
   450  0FEF                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000E                     	;# 
   465  0011                     	;# 
   466  0012                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001E                     	;# 
   477  001F                     	;# 
   478  008C                     	;# 
   479  008E                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0095                     	;# 
   483  0096                     	;# 
   484  0097                     	;# 
   485  0098                     	;# 
   486  0099                     	;# 
   487  009A                     	;# 
   488  009B                     	;# 
   489  009B                     	;# 
   490  009C                     	;# 
   491  009D                     	;# 
   492  009E                     	;# 
   493  010C                     	;# 
   494  010E                     	;# 
   495  0111                     	;# 
   496  0112                     	;# 
   497  0113                     	;# 
   498  0114                     	;# 
   499  0115                     	;# 
   500  0116                     	;# 
   501  0117                     	;# 
   502  0118                     	;# 
   503  0119                     	;# 
   504  011A                     	;# 
   505  011B                     	;# 
   506  011D                     	;# 
   507  011D                     	;# 
   508  018C                     	;# 
   509  018E                     	;# 
   510  0191                     	;# 
   511  0191                     	;# 
   512  0192                     	;# 
   513  0193                     	;# 
   514  0193                     	;# 
   515  0193                     	;# 
   516  0194                     	;# 
   517  0195                     	;# 
   518  0196                     	;# 
   519  0199                     	;# 
   520  019A                     	;# 
   521  019B                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019C                     	;# 
   526  019C                     	;# 
   527  019D                     	;# 
   528  019E                     	;# 
   529  019F                     	;# 
   530  020C                     	;# 
   531  020E                     	;# 
   532  0211                     	;# 
   533  0211                     	;# 
   534  0212                     	;# 
   535  0212                     	;# 
   536  0213                     	;# 
   537  0213                     	;# 
   538  0214                     	;# 
   539  0214                     	;# 
   540  0215                     	;# 
   541  0215                     	;# 
   542  0215                     	;# 
   543  0216                     	;# 
   544  0216                     	;# 
   545  0217                     	;# 
   546  0217                     	;# 
   547  0291                     	;# 
   548  0291                     	;# 
   549  0292                     	;# 
   550  0293                     	;# 
   551  0294                     	;# 
   552  0295                     	;# 
   553  0295                     	;# 
   554  0296                     	;# 
   555  0391                     	;# 
   556  0392                     	;# 
   557  0393                     	;# 
   558  039A                     	;# 
   559  039C                     	;# 
   560  039D                     	;# 
   561  039E                     	;# 
   562  039F                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000E                     	;# 
   588  0011                     	;# 
   589  0012                     	;# 
   590  0015                     	;# 
   591  0016                     	;# 
   592  0016                     	;# 
   593  0017                     	;# 
   594  0018                     	;# 
   595  0019                     	;# 
   596  001A                     	;# 
   597  001B                     	;# 
   598  001C                     	;# 
   599  001E                     	;# 
   600  001F                     	;# 
   601  008C                     	;# 
   602  008E                     	;# 
   603  0091                     	;# 
   604  0092                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009B                     	;# 
   613  009C                     	;# 
   614  009D                     	;# 
   615  009E                     	;# 
   616  010C                     	;# 
   617  010E                     	;# 
   618  0111                     	;# 
   619  0112                     	;# 
   620  0113                     	;# 
   621  0114                     	;# 
   622  0115                     	;# 
   623  0116                     	;# 
   624  0117                     	;# 
   625  0118                     	;# 
   626  0119                     	;# 
   627  011A                     	;# 
   628  011B                     	;# 
   629  011D                     	;# 
   630  011D                     	;# 
   631  018C                     	;# 
   632  018E                     	;# 
   633  0191                     	;# 
   634  0191                     	;# 
   635  0192                     	;# 
   636  0193                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0194                     	;# 
   640  0195                     	;# 
   641  0196                     	;# 
   642  0199                     	;# 
   643  019A                     	;# 
   644  019B                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019C                     	;# 
   649  019C                     	;# 
   650  019D                     	;# 
   651  019E                     	;# 
   652  019F                     	;# 
   653  020C                     	;# 
   654  020E                     	;# 
   655  0211                     	;# 
   656  0211                     	;# 
   657  0212                     	;# 
   658  0212                     	;# 
   659  0213                     	;# 
   660  0213                     	;# 
   661  0214                     	;# 
   662  0214                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0216                     	;# 
   667  0216                     	;# 
   668  0217                     	;# 
   669  0217                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0391                     	;# 
   679  0392                     	;# 
   680  0393                     	;# 
   681  039A                     	;# 
   682  039C                     	;# 
   683  039D                     	;# 
   684  039E                     	;# 
   685  039F                     	;# 
   686  0FE4                     	;# 
   687  0FE5                     	;# 
   688  0FE6                     	;# 
   689  0FE7                     	;# 
   690  0FE8                     	;# 
   691  0FE9                     	;# 
   692  0FEA                     	;# 
   693  0FEB                     	;# 
   694  0FED                     	;# 
   695  0FEE                     	;# 
   696  0FEF                     	;# 
   697  0000                     	;# 
   698  0001                     	;# 
   699  0002                     	;# 
   700  0003                     	;# 
   701  0004                     	;# 
   702  0005                     	;# 
   703  0006                     	;# 
   704  0007                     	;# 
   705  0008                     	;# 
   706  0009                     	;# 
   707  000A                     	;# 
   708  000B                     	;# 
   709  000C                     	;# 
   710  000E                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0015                     	;# 
   714  0016                     	;# 
   715  0016                     	;# 
   716  0017                     	;# 
   717  0018                     	;# 
   718  0019                     	;# 
   719  001A                     	;# 
   720  001B                     	;# 
   721  001C                     	;# 
   722  001E                     	;# 
   723  001F                     	;# 
   724  008C                     	;# 
   725  008E                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0095                     	;# 
   729  0096                     	;# 
   730  0097                     	;# 
   731  0098                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009B                     	;# 
   736  009C                     	;# 
   737  009D                     	;# 
   738  009E                     	;# 
   739  010C                     	;# 
   740  010E                     	;# 
   741  0111                     	;# 
   742  0112                     	;# 
   743  0113                     	;# 
   744  0114                     	;# 
   745  0115                     	;# 
   746  0116                     	;# 
   747  0117                     	;# 
   748  0118                     	;# 
   749  0119                     	;# 
   750  011A                     	;# 
   751  011B                     	;# 
   752  011D                     	;# 
   753  011D                     	;# 
   754  018C                     	;# 
   755  018E                     	;# 
   756  0191                     	;# 
   757  0191                     	;# 
   758  0192                     	;# 
   759  0193                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0194                     	;# 
   763  0195                     	;# 
   764  0196                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019C                     	;# 
   772  019C                     	;# 
   773  019D                     	;# 
   774  019E                     	;# 
   775  019F                     	;# 
   776  020C                     	;# 
   777  020E                     	;# 
   778  0211                     	;# 
   779  0211                     	;# 
   780  0212                     	;# 
   781  0212                     	;# 
   782  0213                     	;# 
   783  0213                     	;# 
   784  0214                     	;# 
   785  0214                     	;# 
   786  0215                     	;# 
   787  0215                     	;# 
   788  0215                     	;# 
   789  0216                     	;# 
   790  0216                     	;# 
   791  0217                     	;# 
   792  0217                     	;# 
   793  0291                     	;# 
   794  0291                     	;# 
   795  0292                     	;# 
   796  0293                     	;# 
   797  0294                     	;# 
   798  0295                     	;# 
   799  0295                     	;# 
   800  0296                     	;# 
   801  0391                     	;# 
   802  0392                     	;# 
   803  0393                     	;# 
   804  039A                     	;# 
   805  039C                     	;# 
   806  039D                     	;# 
   807  039E                     	;# 
   808  039F                     	;# 
   809  0FE4                     	;# 
   810  0FE5                     	;# 
   811  0FE6                     	;# 
   812  0FE7                     	;# 
   813  0FE8                     	;# 
   814  0FE9                     	;# 
   815  0FEA                     	;# 
   816  0FEB                     	;# 
   817  0FED                     	;# 
   818  0FEE                     	;# 
   819  0FEF                     	;# 
   820                           
   821                           	psect	idataBANK0
   822  010F                     __pidataBANK0:	
   823                           
   824                           ;initializer for NRF_Check@F2717
   825  010F  34E1               	retlw	225
   826  0110  34E2               	retlw	226
   827  0111  34E3               	retlw	227
   828  0112  34E4               	retlw	228
   829  0113  3405               	retlw	5
   830                           
   831                           ;initializer for _TX_ADDRESS
   832  0114  340F               	retlw	15
   833  0115  340E               	retlw	14
   834  0116  340D               	retlw	13
   835  0117  340C               	retlw	12
   836  0118  340B               	retlw	11
   837                           
   838                           ;initializer for _RX_ADDRESS_P5
   839  0119  340E               	retlw	14
   840  011A  3410               	retlw	16
   841  011B  3409               	retlw	9
   842  011C  3408               	retlw	8
   843  011D  3407               	retlw	7
   844                           
   845                           ;initializer for _RX_ADDRESS_P4
   846  011E  340D               	retlw	13
   847  011F  3410               	retlw	16
   848  0120  3409               	retlw	9
   849  0121  3408               	retlw	8
   850  0122  3407               	retlw	7
   851                           
   852                           ;initializer for _RX_ADDRESS_P3
   853  0123  340C               	retlw	12
   854  0124  3410               	retlw	16
   855  0125  3409               	retlw	9
   856  0126  3408               	retlw	8
   857  0127  3407               	retlw	7
   858                           
   859                           ;initializer for _RX_ADDRESS_P2
   860  0128  340B               	retlw	11
   861  0129  3410               	retlw	16
   862  012A  3409               	retlw	9
   863  012B  3408               	retlw	8
   864  012C  3407               	retlw	7
   865                           
   866                           ;initializer for _RX_ADDRESS_P1
   867  012D  340A               	retlw	10
   868  012E  3410               	retlw	16
   869  012F  3409               	retlw	9
   870  0130  3408               	retlw	8
   871  0131  3407               	retlw	7
   872                           
   873                           ;initializer for _RX_ADDRESS_P0
   874  0132  340F               	retlw	15
   875  0133  340E               	retlw	14
   876  0134  340D               	retlw	13
   877  0135  340C               	retlw	12
   878  0136  340B               	retlw	11
   879                           
   880                           ;initializer for _rx_addr_0
   881  0137  340F               	retlw	15
   882  0138  340E               	retlw	14
   883  0139  340D               	retlw	13
   884  013A  340C               	retlw	12
   885  013B  340B               	retlw	11
   886                           
   887                           	psect	stringtext1
   888  02F8                     __pstringtext1:	
   889  02F8                     _pad_aux_off:	
   890  02F8  3403               	retlw	3
   891  02F9  3403               	retlw	3
   892  02FA                     __end_of_pad_aux_off:	
   893                           
   894                           	psect	stringtext2
   895  02FA                     __pstringtext2:	
   896  02FA                     _pad_aux_on:	
   897  02FA  3402               	retlw	2
   898  02FB  3402               	retlw	2
   899  02FC                     __end_of_pad_aux_on:	
   900                           
   901                           	psect	stringtext3
   902  02FC                     __pstringtext3:	
   903  02FC                     _tx_pad_bed:	
   904  02FC  3498               	retlw	152
   905  02FD  3458               	retlw	88
   906  02FE                     __end_of_tx_pad_bed:	
   907                           
   908                           	psect	stringtext4
   909  02FE                     __pstringtext4:	
   910  02FE                     _tx_pad_potty:	
   911  02FE  3488               	retlw	136
   912  02FF  3468               	retlw	104
   913  0300                     __end_of_tx_pad_potty:	
   914                           
   915                           	psect	stringtext5
   916  0300                     __pstringtext5:	
   917  0300                     _tx_pad_nci:	
   918  0300  3486               	retlw	134
   919  0301  3466               	retlw	102
   920  0302                     __end_of_tx_pad_nci:	
   921                           
   922                           	psect	stringtext6
   923  0302                     __pstringtext6:	
   924  0302                     _tx_pad_chair:	
   925  0302  3468               	retlw	104
   926  0303  3486               	retlw	134
   927  0304                     __end_of_tx_pad_chair:	
   928                           
   929                           	psect	stringtext7
   930  0304                     __pstringtext7:	
   931  0304                     _tx_pad_aux:	
   932  0304  3466               	retlw	102
   933  0305  3488               	retlw	136
   934  0306                     __end_of_tx_pad_aux:	
   935                           
   936                           	psect	stringtext8
   937  0306                     __pstringtext8:	
   938  0306                     _pad_aux_ok:	
   939  0306  3401               	retlw	1
   940  0307  3401               	retlw	1
   941  0308                     __end_of_pad_aux_ok:	
   942  000E                     _PORTC	set	14
   943  000C                     _PORTA	set	12
   944  0072                     _RC2	set	114
   945  0070                     _RC0	set	112
   946  0071                     _RC1	set	113
   947  008B                     _SSP1IF	set	139
   948  0062                     _RA2	set	98
   949  0060                     _RA0	set	96
   950  0065                     _RA5	set	101
   951  0064                     _RA4	set	100
   952  0075                     _RC5	set	117
   953  0074                     _RC4	set	116
   954  008E                     _TRISC	set	142
   955  008C                     _TRISA	set	140
   956  0099                     _OSCCON	set	153
   957  0460                     _TRISA0	set	1120
   958  0462                     _TRISA2	set	1122
   959  0470                     _TRISC0	set	1136
   960  0472                     _TRISC2	set	1138
   961  0471                     _TRISC1	set	1137
   962  0465                     _TRISA5	set	1125
   963  0464                     _TRISA4	set	1124
   964  010E                     _LATC	set	270
   965  010C                     _LATA	set	268
   966  0191                     _EEADR	set	401
   967  018E                     _ANSELC	set	398
   968  018C                     _ANSELA	set	396
   969  0196                     _EECON2	set	406
   970  0193                     _EEDATA	set	403
   971  0CA8                     _RD	set	3240
   972  0CAA                     _WREN	set	3242
   973  0CAF                     _EEPGD	set	3247
   974  0CA9                     _WR	set	3241
   975  0215                     _SSP1CON1	set	533
   976  0211                     _SSP1BUF	set	529
   977  0214                     _SSP1STATbits	set	532
   978  0214                     _SSP1STAT	set	532
   979                           
   980                           ; #config settings
   981  0000                     
   982                           	psect	cinit
   983  0009                     start_initialization:	
   984  0009                     __initialization:	
   985                           
   986                           ; Initialize objects allocated to BANK0
   987  0009  300F               	movlw	low __pidataBANK0
   988  000A  0084               	movwf	4
   989  000B  3081               	movlw	(high __pidataBANK0)| (0+128)
   990  000C  0085               	movwf	5
   991  000D  3020               	movlw	low __pdataBANK0
   992  000E  0086               	movwf	6
   993  000F  3000               	movlw	high __pdataBANK0
   994  0010  0087               	movwf	7
   995  0011  302D               	movlw	45
   996  0012  3182  22DB  3180   	fcall	init_ram
   997                           
   998                           ; Clear objects allocated to BANK0
   999  0015  01DC               	clrf	__pbssBANK0& (0+127)
  1000  0016  01DD               	clrf	(__pbssBANK0+1)& (0+127)
  1001  0017  01DE               	clrf	(__pbssBANK0+2)& (0+127)
  1002  0018  01DF               	clrf	(__pbssBANK0+3)& (0+127)
  1003  0019  01E0               	clrf	(__pbssBANK0+4)& (0+127)
  1004  001A  01E1               	clrf	(__pbssBANK0+5)& (0+127)
  1005  001B  01E2               	clrf	(__pbssBANK0+6)& (0+127)
  1006  001C  01E3               	clrf	(__pbssBANK0+7)& (0+127)
  1007  001D  01E4               	clrf	(__pbssBANK0+8)& (0+127)
  1008  001E                     end_of_initialization:	
  1009                           ;End of C runtime variable initialization code
  1010                           
  1011  001E                     __end_of__initialization:	
  1012  001E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1013  001F  0020               	movlb	0
  1014  0020  2A90               	ljmp	_main	;jump to C main() function
  1015                           
  1016                           	psect	bssBANK0
  1017  005C                     __pbssBANK0:	
  1018  005C                     NRF_Check@F2719:	
  1019  005C                     	ds	5
  1020  0061                     WirelessPad@F2711:	
  1021  0061                     	ds	2
  1022  0063                     _pad_aux_dat:	
  1023  0063                     	ds	2
  1024                           
  1025                           	psect	dataBANK0
  1026  0020                     __pdataBANK0:	
  1027  0020                     NRF_Check@F2717:	
  1028  0020                     	ds	5
  1029  0025                     _TX_ADDRESS:	
  1030  0025                     	ds	5
  1031  002A                     _RX_ADDRESS_P5:	
  1032  002A                     	ds	5
  1033  002F                     _RX_ADDRESS_P4:	
  1034  002F                     	ds	5
  1035  0034                     _RX_ADDRESS_P3:	
  1036  0034                     	ds	5
  1037  0039                     _RX_ADDRESS_P2:	
  1038  0039                     	ds	5
  1039  003E                     _RX_ADDRESS_P1:	
  1040  003E                     	ds	5
  1041  0043                     _RX_ADDRESS_P0:	
  1042  0043                     	ds	5
  1043  0048                     _rx_addr_0:	
  1044  0048                     	ds	5
  1045                           
  1046                           	psect	inittext
  1047  02DB                     init_ram:	
  1048  02DB  00FE               	movwf	btemp
  1049  02DC                     initloop:	
  1050  02DC  0012               	moviw fsr0++
  1051  02DD  001E               	movwi fsr1++
  1052  02DE  0BFE               	decfsz	btemp,f
  1053  02DF  2ADC               	goto	initloop
  1054  02E0  3400               	retlw	0
  1055                           
  1056                           	psect	cstackCOMMON
  1057  0070                     __pcstackCOMMON:	
  1058  0070                     ?_PORT_Init:	
  1059  0070                     ??_PORT_Init:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_NRF_IRQ_Init:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ??_NRF_IRQ_Init:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_WirelessPad:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_NRF_On:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ??_NRF_On:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_NRF_Port_Init:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ??_NRF_Port_Init:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ?_NRF_SPI_Init:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ??_NRF_SPI_Init:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ?_NRF_Check:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_NRF_Rx_Set:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     ?_memcpy:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0070                     ?_NRF_RxPacket:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101  0070                     ?_NRF_Clear_IRQ:	
  1102                           ; 1 bytes @ 0x0
  1103                           
  1104  0070                     ?_NRF_Get_Status:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0070                     ?_NRF_Read_RX_Pload:	
  1108                           ; 1 bytes @ 0x0
  1109                           
  1110  0070                     ?_NRF_Flush_RX:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0070                     ?_PORTA_Init:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0070                     ??_PORTA_Init:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0070                     ?_PORTC_Init:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0070                     ??_PORTC_Init:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0070                     ?_LED_Red:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0070                     ??_LED_Red:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0070                     ?_LED_Blue:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0070                     ??_LED_Blue:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0070                     ?_main:	
  1138                           ; 1 bytes @ 0x0
  1139                           
  1140  0070                     ?_ISR:	
  1141                           ; 1 bytes @ 0x0
  1142                           
  1143  0070                     ??_ISR:	
  1144                           ; 1 bytes @ 0x0
  1145                           
  1146  0070                     ?_NRF_SPI_RW:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0070                     ??_NRF_SPI_RW:	
  1150                           ; 1 bytes @ 0x0
  1151                           
  1152  0070                     ?_NRF_Read_Reg:	
  1153                           ; 1 bytes @ 0x0
  1154                           
  1155  0070                     ?_NRF_Get_Current_Pipenum:	
  1156                           ; 1 bytes @ 0x0
  1157                           
  1158  0070                     NRF_SPI_RW@dat:	
  1159                           ; 1 bytes @ 0x0
  1160                           
  1161  0070                     memcpy@s1:	
  1162                           ; 1 bytes @ 0x0
  1163                           
  1164                           
  1165                           ; 2 bytes @ 0x0
  1166  0070                     	ds	1
  1167  0071                     ??_NRF_Read_Reg:	
  1168  0071                     ?_NRF_Write_Reg:	
  1169                           ; 1 bytes @ 0x1
  1170                           
  1171  0071                     ?_NRF_Read_Buf:	
  1172                           ; 1 bytes @ 0x1
  1173                           
  1174  0071                     ?_NRF_Write_Buf:	
  1175                           ; 1 bytes @ 0x1
  1176                           
  1177  0071                     NRF_Write_Reg@value:	
  1178                           ; 1 bytes @ 0x1
  1179                           
  1180  0071                     NRF_Read_Buf@pBuf:	
  1181                           ; 1 bytes @ 0x1
  1182                           
  1183  0071                     NRF_Write_Buf@pBuf:	
  1184                           ; 1 bytes @ 0x1
  1185                           
  1186                           
  1187                           ; 1 bytes @ 0x1
  1188  0071                     	ds	1
  1189  0072                     ??_NRF_Write_Reg:	
  1190  0072                     LED_Red@num:	
  1191                           ; 1 bytes @ 0x2
  1192                           
  1193  0072                     LED_Blue@num:	
  1194                           ; 1 bytes @ 0x2
  1195                           
  1196  0072                     NRF_Read_Reg@reg:	
  1197                           ; 1 bytes @ 0x2
  1198                           
  1199  0072                     NRF_Read_Buf@len:	
  1200                           ; 1 bytes @ 0x2
  1201                           
  1202  0072                     NRF_Write_Buf@len:	
  1203                           ; 1 bytes @ 0x2
  1204                           
  1205  0072                     memcpy@n:	
  1206                           ; 1 bytes @ 0x2
  1207                           
  1208                           
  1209                           ; 2 bytes @ 0x2
  1210  0072                     	ds	1
  1211  0073                     ??_NRF_Read_Buf:	
  1212  0073                     ??_NRF_Write_Buf:	
  1213                           ; 1 bytes @ 0x3
  1214                           
  1215  0073                     NRF_Read_Reg@status:	
  1216                           ; 1 bytes @ 0x3
  1217                           
  1218  0073                     NRF_Write_Reg@reg:	
  1219                           ; 1 bytes @ 0x3
  1220                           
  1221                           
  1222                           ; 1 bytes @ 0x3
  1223  0073                     	ds	1
  1224  0074                     ??_memcpy:	
  1225  0074                     ??_NRF_Get_Status:	
  1226                           ; 1 bytes @ 0x4
  1227                           
  1228  0074                     ??_NRF_Get_Current_Pipenum:	
  1229                           ; 1 bytes @ 0x4
  1230                           
  1231  0074                     NRF_Write_Reg@status:	
  1232                           ; 1 bytes @ 0x4
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x4
  1236  0074                     	ds	1
  1237  0075                     ??_NRF_Rx_Set:	
  1238  0075                     ??_NRF_Clear_IRQ:	
  1239                           ; 1 bytes @ 0x5
  1240                           
  1241  0075                     ??_NRF_Flush_RX:	
  1242                           ; 1 bytes @ 0x5
  1243                           
  1244  0075                     NRF_Write_Buf@reg:	
  1245                           ; 1 bytes @ 0x5
  1246                           
  1247  0075                     memcpy@s:	
  1248                           ; 1 bytes @ 0x5
  1249                           
  1250                           
  1251                           ; 2 bytes @ 0x5
  1252  0075                     	ds	1
  1253  0076                     NRF_Read_Buf@reg:	
  1254  0076                     NRF_Write_Buf@i:	
  1255                           ; 1 bytes @ 0x6
  1256                           
  1257  0076                     NRF_Rx_Set@ack:	
  1258                           ; 1 bytes @ 0x6
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x6
  1262  0076                     	ds	1
  1263  0077                     ?_NRF_Rx_Set_P0:	
  1264  0077                     NRF_Read_Buf@i:	
  1265                           ; 1 bytes @ 0x7
  1266                           
  1267  0077                     NRF_Rx_Set_P0@buf_len:	
  1268                           ; 1 bytes @ 0x7
  1269                           
  1270  0077                     memcpy@tmp:	
  1271                           ; 1 bytes @ 0x7
  1272                           
  1273                           
  1274                           ; 1 bytes @ 0x7
  1275  0077                     	ds	1
  1276  0078                     ??_NRF_Check:	
  1277  0078                     ??_NRF_Rx_Set_P0:	
  1278                           ; 1 bytes @ 0x8
  1279                           
  1280  0078                     ??_NRF_Read_RX_Pload:	
  1281                           ; 1 bytes @ 0x8
  1282                           
  1283  0078                     NRF_Clear_IRQ@temp:	
  1284                           ; 1 bytes @ 0x8
  1285                           
  1286  0078                     memcpy@d1:	
  1287                           ; 1 bytes @ 0x8
  1288                           
  1289                           
  1290                           ; 1 bytes @ 0x8
  1291  0078                     	ds	1
  1292  0079                     memcpy@d:	
  1293                           
  1294                           ; 1 bytes @ 0x9
  1295  0079                     	ds	1
  1296  007A                     NRF_Read_RX_Pload@width:	
  1297  007A                     NRF_Rx_Set_P0@addr:	
  1298                           ; 1 bytes @ 0xA
  1299                           
  1300                           
  1301                           ; 1 bytes @ 0xA
  1302  007A                     	ds	1
  1303  007B                     NRF_Read_RX_Pload@pBuf:	
  1304                           
  1305                           ; 1 bytes @ 0xB
  1306  007B                     	ds	1
  1307  007C                     NRF_Read_RX_Pload@pipe:	
  1308                           
  1309                           ; 1 bytes @ 0xC
  1310  007C                     	ds	1
  1311  007D                     ??_NRF_RxPacket:	
  1312                           
  1313                           ; 1 bytes @ 0xD
  1314  007D                     	ds	1
  1315  007E                     ??_main:	
  1316                           
  1317                           	psect	cstackBANK0
  1318  004D                     __pcstackBANK0:	
  1319                           ; 1 bytes @ 0xE
  1320                           
  1321  004D                     NRF_RxPacket@rxbuf:	
  1322  004D                     NRF_Check@tuf:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325                           
  1326                           ; 5 bytes @ 0x0
  1327  004D                     	ds	1
  1328  004E                     NRF_RxPacket@status:	
  1329                           
  1330                           ; 1 bytes @ 0x1
  1331  004E                     	ds	4
  1332  0052                     NRF_Check@buf:	
  1333                           
  1334                           ; 5 bytes @ 0x5
  1335  0052                     	ds	5
  1336  0057                     NRF_Check@i:	
  1337                           
  1338                           ; 1 bytes @ 0xA
  1339  0057                     	ds	1
  1340  0058                     ??_WirelessPad:	
  1341                           
  1342                           ; 1 bytes @ 0xB
  1343  0058                     	ds	2
  1344  005A                     WirelessPad@rxbuf:	
  1345                           
  1346                           ; 2 bytes @ 0xD
  1347  005A                     	ds	2
  1348                           
  1349                           	psect	maintext
  1350  0290                     __pmaintext:	
  1351 ;;
  1352 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1353 ;;
  1354 ;; *************** function _main *****************
  1355 ;; Defined at:
  1356 ;;		line 81 in file "main.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : B1F/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1
  1370 ;;      Params:         0       0       0
  1371 ;;      Locals:         0       0       0
  1372 ;;      Temps:          0       0       0
  1373 ;;      Totals:         0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels required when called:    8
  1376 ;; This function calls:
  1377 ;;		_NRF_IRQ_Init
  1378 ;;		_PORT_Init
  1379 ;;		_WirelessPad
  1380 ;; This function is called by:
  1381 ;;		Startup code after reset
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _main
  1387  0290                     _main:	
  1388  0290                     l1719:	
  1389                           ;incstack = 0
  1390                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1391                           
  1392                           
  1393                           ;main.c: 83:     OSCCON = 0X58;
  1394  0290  3058               	movlw	88
  1395  0291  0021               	movlb	1	; select bank1
  1396  0292  0099               	movwf	25	;volatile
  1397  0293                     l1721:	
  1398                           
  1399                           ;main.c: 85:     PORT_Init();
  1400  0293  3182  22D4  3182   	fcall	_PORT_Init
  1401  0296                     l1723:	
  1402                           
  1403                           ;main.c: 87:     NRF_IRQ_Init();
  1404  0296  3182  22F5  3182   	fcall	_NRF_IRQ_Init
  1405  0299                     l1725:	
  1406                           
  1407                           ;main.c: 91:     WirelessPad();
  1408  0299  3180  2021  3182   	fcall	_WirelessPad
  1409  029C                     l77:	
  1410                           ;main.c: 95:     while(1);
  1411                           
  1412  029C                     l78:	
  1413  029C  2A9C               	goto	l77
  1414  029D  2808               	ljmp	start
  1415  029E                     __end_of_main:	
  1416                           
  1417                           	psect	text1
  1418  0021                     __ptext1:	
  1419 ;; *************** function _WirelessPad *****************
  1420 ;; Defined at:
  1421 ;;		line 175 in file "main.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  rxbuf           2   13[BANK0 ] unsigned char [2]
  1426 ;;  ledx            1    0        unsigned char 
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1
  1436 ;;      Params:         0       0       0
  1437 ;;      Locals:         0       3       0
  1438 ;;      Temps:          0       1       0
  1439 ;;      Totals:         0       4       0
  1440 ;;Total ram usage:        4 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    7
  1443 ;; This function calls:
  1444 ;;		_LED_Blue
  1445 ;;		_LED_Red
  1446 ;;		_NRF_Check
  1447 ;;		_NRF_Clear_IRQ
  1448 ;;		_NRF_On
  1449 ;;		_NRF_Port_Init
  1450 ;;		_NRF_RxPacket
  1451 ;;		_NRF_Rx_Set
  1452 ;;		_NRF_Rx_Set_P0
  1453 ;;		_NRF_SPI_Init
  1454 ;;		_memcpy
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _WirelessPad
  1462  0021                     _WirelessPad:	
  1463  0021                     l1667:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _WirelessPad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1466                           
  1467                           
  1468                           ;main.c: 177:     unsigned char ledx;;main.c: 178:     unsigned char rxbuf[2] ={0, 0};
  1469  0021  0020               	movlb	0	; select bank0
  1470  0022  01DA               	clrf	WirelessPad@rxbuf
  1471  0023  01DB               	clrf	WirelessPad@rxbuf+1
  1472  0024                     l1669:	
  1473                           
  1474                           ;main.c: 180:     NRF_On();
  1475  0024  3182  22F2  3180   	fcall	_NRF_On
  1476  0027                     l1671:	
  1477                           
  1478                           ;main.c: 181:     NRF_Port_Init();
  1479  0027  3182  22AC  3180   	fcall	_NRF_Port_Init
  1480  002A                     l1673:	
  1481                           
  1482                           ;main.c: 182:     NRF_SPI_Init();
  1483  002A  3182  22B8  3180   	fcall	_NRF_SPI_Init
  1484  002D                     l1675:	
  1485                           
  1486                           ;main.c: 184:     _delay((unsigned long)((500)*(1000000/4000.0)));
  1487  002D  30A3               	movlw	163
  1488  002E  0020               	movlb	0	; select bank0
  1489  002F  00D8               	movwf	??_WirelessPad
  1490  0030  3055               	movlw	85
  1491  0031                     u597:	
  1492  0031  0B89               	decfsz	9,f
  1493  0032  2831               	goto	u597
  1494  0033  0BD8               	decfsz	??_WirelessPad,f
  1495  0034  2831               	goto	u597
  1496  0035                     l1677:	
  1497                           
  1498                           ;main.c: 186:     if(NRF_Check()) {
  1499  0035  3180  208C  3180   	fcall	_NRF_Check
  1500  0038  3A00               	xorlw	0
  1501  0039  1903               	skipnz
  1502  003A  283C               	goto	u481
  1503  003B  283D               	goto	u480
  1504  003C                     u481:	
  1505  003C  2842               	goto	l1681
  1506  003D                     u480:	
  1507  003D                     l1679:	
  1508                           
  1509                           ;main.c: 188:             LED_Red(1);
  1510  003D  3001               	movlw	1
  1511  003E  3181  2165  3180   	fcall	_LED_Red
  1512  0041  283D               	goto	l1679
  1513  0042                     l1681:	
  1514                           
  1515                           ;main.c: 191:         LED_Blue(1);
  1516  0042  3001               	movlw	1
  1517  0043  3181  218E  3180   	fcall	_LED_Blue
  1518  0046                     l97:	
  1519                           ;main.c: 192:     }
  1520                           
  1521                           
  1522                           ;main.c: 194:     NRF_Rx_Set(0x01);
  1523  0046  3001               	movlw	1
  1524  0047  3181  21B7  3180   	fcall	_NRF_Rx_Set
  1525  004A                     l1683:	
  1526                           
  1527                           ;main.c: 195:     NRF_Rx_Set_P0(rx_addr_0, 2);
  1528  004A  3002               	movlw	2
  1529  004B  0020               	movlb	0	; select bank0
  1530  004C  00D8               	movwf	??_WirelessPad
  1531  004D  0858               	movf	??_WirelessPad,w
  1532  004E  00F7               	movwf	NRF_Rx_Set_P0@buf_len
  1533  004F  3048               	movlw	(low (_rx_addr_0| 0))& (0+255)
  1534  0050  3182  223C  3180   	fcall	_NRF_Rx_Set_P0
  1535  0053                     l1685:	
  1536                           
  1537                           ;main.c: 197:     memcpy(pad_aux_dat, pad_aux_ok, 2);
  1538  0053  3006               	movlw	low (_pad_aux_ok| (0+32768))
  1539  0054  00F0               	movwf	memcpy@s1
  1540  0055  3083               	movlw	high (_pad_aux_ok| (0+32768))
  1541  0056  00F1               	movwf	memcpy@s1+1
  1542  0057  3002               	movlw	2
  1543  0058  00F2               	movwf	memcpy@n
  1544  0059  3000               	movlw	0
  1545  005A  00F3               	movwf	memcpy@n+1
  1546  005B  3063               	movlw	(low (_pad_aux_dat| 0))& (0+255)
  1547  005C  3180  20E1  3180   	fcall	_memcpy
  1548  005F                     l1687:	
  1549                           
  1550                           ;main.c: 201:         if(RA4 == 0) {
  1551  005F  0020               	movlb	0	; select bank0
  1552  0060  1A0C               	btfsc	12,4	;volatile
  1553  0061  2863               	goto	u491
  1554  0062  2864               	goto	u490
  1555  0063                     u491:	
  1556  0063  287E               	goto	l99
  1557  0064                     u490:	
  1558  0064                     l1689:	
  1559                           
  1560                           ;main.c: 202:             rxbuf[0] = 0;
  1561  0064  01DA               	clrf	WirelessPad@rxbuf
  1562  0065                     l1691:	
  1563  0065  305A               	movlw	(low (WirelessPad@rxbuf| 0))& (0+255)
  1564  0066  3181  213C  3180   	fcall	_NRF_RxPacket
  1565  0069                     l1693:	
  1566                           
  1567                           ;main.c: 204:             NRF_Clear_IRQ();
  1568  0069  3182  2254  3180   	fcall	_NRF_Clear_IRQ
  1569  006C                     l1695:	
  1570                           
  1571                           ;main.c: 205:             if(rxbuf[0] == pad_aux_ok[0]) {
  1572  006C  3006               	movlw	low (_pad_aux_ok| (0+32768))
  1573  006D  0084               	movwf	4
  1574  006E  3083               	movlw	high (_pad_aux_ok| (0+32768))
  1575  006F  0085               	movwf	5
  1576  0070  0800               	movf	0,w	;code access
  1577  0071  0020               	movlb	0	; select bank0
  1578  0072  00D8               	movwf	??_WirelessPad
  1579  0073  085A               	movf	WirelessPad@rxbuf,w
  1580  0074  0658               	xorwf	??_WirelessPad,w
  1581  0075  1D03               	skipz
  1582  0076  2878               	goto	u501
  1583  0077  2879               	goto	u500
  1584  0078                     u501:	
  1585  0078  2882               	goto	l1699
  1586  0079                     u500:	
  1587  0079                     l1697:	
  1588                           
  1589                           ;main.c: 206:                 TRISA5 = 0; RA5 = 1;
  1590  0079  0021               	movlb	1	; select bank1
  1591  007A  128C               	bcf	12,5	;volatile
  1592  007B  0020               	movlb	0	; select bank0
  1593  007C  168C               	bsf	12,5	;volatile
  1594  007D  2882               	goto	l1699
  1595  007E                     l99:	
  1596                           
  1597                           ;main.c: 210:             TRISA5 = 1; RA5 = 0;
  1598  007E  0021               	movlb	1	; select bank1
  1599  007F  168C               	bsf	12,5	;volatile
  1600  0080  0020               	movlb	0	; select bank0
  1601  0081  128C               	bcf	12,5	;volatile
  1602  0082                     l1699:	
  1603                           
  1604                           ;main.c: 213:         _delay((unsigned long)((500)*(1000000/4000.0)));
  1605  0082  30A3               	movlw	163
  1606  0083  0020               	movlb	0	; select bank0
  1607  0084  00D8               	movwf	??_WirelessPad
  1608  0085  3055               	movlw	85
  1609  0086                     u607:	
  1610  0086  0B89               	decfsz	9,f
  1611  0087  2886               	goto	u607
  1612  0088  0BD8               	decfsz	??_WirelessPad,f
  1613  0089  2886               	goto	u607
  1614  008A  285F               	goto	l1687
  1615  008B  0008               	return
  1616  008C                     __end_of_WirelessPad:	
  1617                           
  1618                           	psect	text2
  1619  00E1                     __ptext2:	
  1620 ;; *************** function _memcpy *****************
  1621 ;; Defined at:
  1622 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;  d1              1    wreg     PTR void 
  1625 ;;		 -> pad_aux_dat(2), 
  1626 ;;  s1              2    0[COMMON] PTR const void 
  1627 ;;		 -> pad_aux_ok(2), 
  1628 ;;  n               2    2[COMMON] unsigned int 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  d1              1    8[COMMON] PTR void 
  1631 ;;		 -> pad_aux_dat(2), 
  1632 ;;  s               2    5[COMMON] PTR const unsigned char 
  1633 ;;		 -> pad_aux_ok(2), 
  1634 ;;  d               1    9[COMMON] PTR unsigned char 
  1635 ;;		 -> pad_aux_dat(2), 
  1636 ;;  tmp             1    7[COMMON] unsigned char 
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      PTR void 
  1639 ;; Registers used:
  1640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMMON   BANK0   BANK1
  1646 ;;      Params:         4       0       0
  1647 ;;      Locals:         5       0       0
  1648 ;;      Temps:          1       0       0
  1649 ;;      Totals:        10       0       0
  1650 ;;Total ram usage:       10 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    1
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_WirelessPad
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _memcpy
  1662  00E1                     _memcpy:	
  1663                           
  1664                           ;incstack = 0
  1665                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  1666                           ;memcpy@d1 stored from wreg
  1667  00E1  00F8               	movwf	memcpy@d1
  1668  00E2                     l1621:	
  1669  00E2  0871               	movf	memcpy@s1+1,w
  1670  00E3  00F6               	movwf	memcpy@s+1
  1671  00E4  0870               	movf	memcpy@s1,w
  1672  00E5  00F5               	movwf	memcpy@s
  1673  00E6  0878               	movf	memcpy@d1,w
  1674  00E7  00F4               	movwf	??_memcpy
  1675  00E8  0874               	movf	??_memcpy,w
  1676  00E9  00F9               	movwf	memcpy@d
  1677  00EA  2902               	goto	l1631
  1678  00EB                     l1623:	
  1679  00EB  0875               	movf	memcpy@s,w
  1680  00EC  0084               	movwf	4
  1681  00ED  0876               	movf	memcpy@s+1,w
  1682  00EE  0085               	movwf	5
  1683  00EF  0800               	movf	0,w	;code access
  1684  00F0  00F4               	movwf	??_memcpy
  1685  00F1  0874               	movf	??_memcpy,w
  1686  00F2  00F7               	movwf	memcpy@tmp
  1687  00F3                     l1625:	
  1688  00F3  3001               	movlw	1
  1689  00F4  07F5               	addwf	memcpy@s,f
  1690  00F5  3000               	movlw	0
  1691  00F6  3DF6               	addwfc	memcpy@s+1,f
  1692  00F7                     l1627:	
  1693  00F7  0877               	movf	memcpy@tmp,w
  1694  00F8  00F4               	movwf	??_memcpy
  1695  00F9  0879               	movf	memcpy@d,w
  1696  00FA  0086               	movwf	6
  1697  00FB  0187               	clrf	7
  1698  00FC  0874               	movf	??_memcpy,w
  1699  00FD  0081               	movwf	1
  1700  00FE                     l1629:	
  1701  00FE  3001               	movlw	1
  1702  00FF  00F4               	movwf	??_memcpy
  1703  0100  0874               	movf	??_memcpy,w
  1704  0101  07F9               	addwf	memcpy@d,f
  1705  0102                     l1631:	
  1706  0102  3001               	movlw	1
  1707  0103  02F2               	subwf	memcpy@n,f
  1708  0104  3000               	movlw	0
  1709  0105  3BF3               	subwfb	memcpy@n+1,f
  1710  0106  0A72               	incf	memcpy@n,w
  1711  0107  1D03               	skipz
  1712  0108  290D               	goto	u431
  1713  0109  0A73               	incf	memcpy@n+1,w
  1714  010A  1D03               	btfss	3,2
  1715  010B  290D               	goto	u431
  1716  010C  290E               	goto	u430
  1717  010D                     u431:	
  1718  010D  28EB               	goto	l1623
  1719  010E                     u430:	
  1720  010E                     l993:	
  1721  010E  0008               	return
  1722  010F                     __end_of_memcpy:	
  1723                           
  1724                           	psect	text3
  1725  02B8                     __ptext3:	
  1726 ;; *************** function _NRF_SPI_Init *****************
  1727 ;; Defined at:
  1728 ;;		line 70 in file "../library/nrf24l01.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1
  1742 ;;      Params:         0       0       0
  1743 ;;      Locals:         0       0       0
  1744 ;;      Temps:          0       0       0
  1745 ;;      Totals:         0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_WirelessPad
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _NRF_SPI_Init
  1758  02B8                     _NRF_SPI_Init:	
  1759  02B8                     l1571:	
  1760                           ;incstack = 0
  1761                           ; Regs used in _NRF_SPI_Init: [wreg+status,2]
  1762                           
  1763                           
  1764                           ;../library/nrf24l01.c: 71:     SSP1STAT = 0x00;
  1765  02B8  0024               	movlb	4	; select bank4
  1766  02B9  0194               	clrf	20	;volatile
  1767  02BA                     l1573:	
  1768                           
  1769                           ;../library/nrf24l01.c: 72:     SSP1STATbits.CKE = 1;
  1770  02BA  1714               	bsf	20,6	;volatile
  1771                           
  1772                           ;../library/nrf24l01.c: 74:     SSP1BUF = 0;
  1773  02BB  0191               	clrf	17	;volatile
  1774  02BC                     l1575:	
  1775                           
  1776                           ;../library/nrf24l01.c: 75:     SSP1IF = 0;
  1777  02BC  0020               	movlb	0	; select bank0
  1778  02BD  1191               	bcf	17,3	;volatile
  1779  02BE                     l1577:	
  1780                           
  1781                           ;../library/nrf24l01.c: 76:     SSP1CON1 = 0x20;
  1782  02BE  3020               	movlw	32
  1783  02BF  0024               	movlb	4	; select bank4
  1784  02C0  0095               	movwf	21	;volatile
  1785  02C1                     l198:	
  1786  02C1  0008               	return
  1787  02C2                     __end_of_NRF_SPI_Init:	
  1788                           
  1789                           	psect	text4
  1790  023C                     __ptext4:	
  1791 ;; *************** function _NRF_Rx_Set_P0 *****************
  1792 ;; Defined at:
  1793 ;;		line 426 in file "../library/nrf24l01.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  addr            1    wreg     PTR unsigned char 
  1796 ;;		 -> rx_addr_0(5), 
  1797 ;;  buf_len         1    7[COMMON] unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  addr            1   10[COMMON] PTR unsigned char 
  1800 ;;		 -> rx_addr_0(5), 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1
  1810 ;;      Params:         1       0       0
  1811 ;;      Locals:         1       0       0
  1812 ;;      Temps:          2       0       0
  1813 ;;      Totals:         4       0       0
  1814 ;;Total ram usage:        4 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    3
  1817 ;; This function calls:
  1818 ;;		_NRF_Write_Buf
  1819 ;;		_NRF_Write_Reg
  1820 ;; This function is called by:
  1821 ;;		_WirelessPad
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _NRF_Rx_Set_P0
  1827  023C                     _NRF_Rx_Set_P0:	
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _NRF_Rx_Set_P0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1831                           ;NRF_Rx_Set_P0@addr stored from wreg
  1832  023C  00FA               	movwf	NRF_Rx_Set_P0@addr
  1833  023D                     l1615:	
  1834                           
  1835                           ;../library/nrf24l01.c: 427:     RA0 = 0;
  1836  023D  0020               	movlb	0	; select bank0
  1837  023E  100C               	bcf	12,0	;volatile
  1838  023F                     l1617:	
  1839                           
  1840                           ;../library/nrf24l01.c: 428:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  1841  023F  087A               	movf	NRF_Rx_Set_P0@addr,w
  1842  0240  00F8               	movwf	??_NRF_Rx_Set_P0
  1843  0241  0878               	movf	??_NRF_Rx_Set_P0,w
  1844  0242  00F1               	movwf	NRF_Write_Buf@pBuf
  1845  0243  3005               	movlw	5
  1846  0244  00F9               	movwf	??_NRF_Rx_Set_P0+1
  1847  0245  0879               	movf	??_NRF_Rx_Set_P0+1,w
  1848  0246  00F2               	movwf	NRF_Write_Buf@len
  1849  0247  302A               	movlw	42
  1850  0248  3181  21FE  3182   	fcall	_NRF_Write_Buf
  1851  024B                     l1619:	
  1852                           
  1853                           ;../library/nrf24l01.c: 429:     NRF_Write_Reg(0x20 + 0x11, buf_len);
  1854  024B  0877               	movf	NRF_Rx_Set_P0@buf_len,w
  1855  024C  00F8               	movwf	??_NRF_Rx_Set_P0
  1856  024D  0878               	movf	??_NRF_Rx_Set_P0,w
  1857  024E  00F1               	movwf	NRF_Write_Reg@value
  1858  024F  3031               	movlw	49
  1859  0250  3182  227E  3182   	fcall	_NRF_Write_Reg
  1860  0253                     l300:	
  1861  0253  0008               	return
  1862  0254                     __end_of_NRF_Rx_Set_P0:	
  1863                           
  1864                           	psect	text5
  1865  01B7                     __ptext5:	
  1866 ;; *************** function _NRF_Rx_Set *****************
  1867 ;; Defined at:
  1868 ;;		line 417 in file "../library/nrf24l01.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  ack             1    wreg     unsigned char 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  ack             1    6[COMMON] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  1    wreg      void 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1
  1882 ;;      Params:         0       0       0
  1883 ;;      Locals:         1       0       0
  1884 ;;      Temps:          1       0       0
  1885 ;;      Totals:         2       0       0
  1886 ;;Total ram usage:        2 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    3
  1889 ;; This function calls:
  1890 ;;		_NRF_Write_Reg
  1891 ;; This function is called by:
  1892 ;;		_WirelessPad
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function _NRF_Rx_Set
  1898  01B7                     _NRF_Rx_Set:	
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in _NRF_Rx_Set: [wreg+status,2+status,0+pclath+cstack]
  1902                           ;NRF_Rx_Set@ack stored from wreg
  1903  01B7  00F6               	movwf	NRF_Rx_Set@ack
  1904  01B8                     l1611:	
  1905                           
  1906                           ;../library/nrf24l01.c: 418:     RA0 = 0;
  1907  01B8  0020               	movlb	0	; select bank0
  1908  01B9  100C               	bcf	12,0	;volatile
  1909  01BA                     l1613:	
  1910                           
  1911                           ;../library/nrf24l01.c: 419:     NRF_Write_Reg(0x20 + 0x01, ack);
  1912  01BA  0876               	movf	NRF_Rx_Set@ack,w
  1913  01BB  00F5               	movwf	??_NRF_Rx_Set
  1914  01BC  0875               	movf	??_NRF_Rx_Set,w
  1915  01BD  00F1               	movwf	NRF_Write_Reg@value
  1916  01BE  3021               	movlw	33
  1917  01BF  3182  227E  3181   	fcall	_NRF_Write_Reg
  1918                           
  1919                           ;../library/nrf24l01.c: 420:     NRF_Write_Reg(0x20 + 0x02, ack);
  1920  01C2  0876               	movf	NRF_Rx_Set@ack,w
  1921  01C3  00F5               	movwf	??_NRF_Rx_Set
  1922  01C4  0875               	movf	??_NRF_Rx_Set,w
  1923  01C5  00F1               	movwf	NRF_Write_Reg@value
  1924  01C6  3022               	movlw	34
  1925  01C7  3182  227E  3181   	fcall	_NRF_Write_Reg
  1926                           
  1927                           ;../library/nrf24l01.c: 422:     NRF_Write_Reg(0x20 + 0x05, 40);
  1928  01CA  3028               	movlw	40
  1929  01CB  00F5               	movwf	??_NRF_Rx_Set
  1930  01CC  0875               	movf	??_NRF_Rx_Set,w
  1931  01CD  00F1               	movwf	NRF_Write_Reg@value
  1932  01CE  3025               	movlw	37
  1933  01CF  3182  227E  3181   	fcall	_NRF_Write_Reg
  1934                           
  1935                           ;../library/nrf24l01.c: 423:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  1936  01D2  300F               	movlw	15
  1937  01D3  00F5               	movwf	??_NRF_Rx_Set
  1938  01D4  0875               	movf	??_NRF_Rx_Set,w
  1939  01D5  00F1               	movwf	NRF_Write_Reg@value
  1940  01D6  3026               	movlw	38
  1941  01D7  3182  227E  3181   	fcall	_NRF_Write_Reg
  1942  01DA                     l297:	
  1943  01DA  0008               	return
  1944  01DB                     __end_of_NRF_Rx_Set:	
  1945                           
  1946                           	psect	text6
  1947  013C                     __ptext6:	
  1948 ;; *************** function _NRF_RxPacket *****************
  1949 ;; Defined at:
  1950 ;;		line 264 in file "../library/nrf24l01.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  rxbuf           1    wreg     PTR unsigned char 
  1953 ;;		 -> WirelessPad@rxbuf(2), 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  rxbuf           1    0[BANK0 ] PTR unsigned char 
  1956 ;;		 -> WirelessPad@rxbuf(2), 
  1957 ;;  status          1    1[BANK0 ] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      unsigned char 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMMON   BANK0   BANK1
  1967 ;;      Params:         0       0       0
  1968 ;;      Locals:         0       2       0
  1969 ;;      Temps:          1       0       0
  1970 ;;      Totals:         1       2       0
  1971 ;;Total ram usage:        3 bytes
  1972 ;; Hardware stack levels used:    1
  1973 ;; Hardware stack levels required when called:    6
  1974 ;; This function calls:
  1975 ;;		_NRF_Flush_RX
  1976 ;;		_NRF_Get_Status
  1977 ;;		_NRF_Read_RX_Pload
  1978 ;;		_NRF_Write_Reg
  1979 ;; This function is called by:
  1980 ;;		_WirelessPad
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function _NRF_RxPacket
  1986  013C                     _NRF_RxPacket:	
  1987                           
  1988                           ;incstack = 0
  1989                           ; Regs used in _NRF_RxPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1990                           ;NRF_RxPacket@rxbuf stored from wreg
  1991  013C  0020               	movlb	0	; select bank0
  1992  013D  00CD               	movwf	NRF_RxPacket@rxbuf
  1993  013E                     l1633:	
  1994  013E                     l1635:	
  1995                           
  1996                           ;../library/nrf24l01.c: 268:     if(NRF_Get_Status() & 0X40) {
  1997  013E  3182  22ED  3181   	fcall	_NRF_Get_Status
  1998  0141  3940               	andlw	64
  1999  0142  1903               	btfsc	3,2
  2000  0143  2945               	goto	u441
  2001  0144  2946               	goto	u440
  2002  0145                     u441:	
  2003  0145  2961               	goto	l1645
  2004  0146                     u440:	
  2005  0146                     l1637:	
  2006                           
  2007                           ;../library/nrf24l01.c: 269:         status = NRF_Read_RX_Pload(rxbuf);
  2008  0146  0020               	movlb	0	; select bank0
  2009  0147  084D               	movf	NRF_RxPacket@rxbuf,w
  2010  0148  3182  221F  3181   	fcall	_NRF_Read_RX_Pload
  2011  014B  00FD               	movwf	??_NRF_RxPacket
  2012  014C  087D               	movf	??_NRF_RxPacket,w
  2013  014D  0020               	movlb	0	; select bank0
  2014  014E  00CE               	movwf	NRF_RxPacket@status
  2015  014F                     l1639:	
  2016                           
  2017                           ;../library/nrf24l01.c: 270:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  2018  014F  30FF               	movlw	255
  2019  0150  00FD               	movwf	??_NRF_RxPacket
  2020  0151  087D               	movf	??_NRF_RxPacket,w
  2021  0152  00F1               	movwf	NRF_Write_Reg@value
  2022  0153  3027               	movlw	39
  2023  0154  3182  227E  3181   	fcall	_NRF_Write_Reg
  2024  0157                     l1641:	
  2025                           
  2026                           ;../library/nrf24l01.c: 271:         NRF_Flush_RX();
  2027  0157  3182  22E7  3181   	fcall	_NRF_Flush_RX
  2028  015A                     l1643:	
  2029                           
  2030                           ;../library/nrf24l01.c: 272:         status = status + 1;
  2031  015A  0020               	movlb	0	; select bank0
  2032  015B  084E               	movf	NRF_RxPacket@status,w
  2033  015C  3E01               	addlw	1
  2034  015D  00FD               	movwf	??_NRF_RxPacket
  2035  015E  087D               	movf	??_NRF_RxPacket,w
  2036  015F  00CE               	movwf	NRF_RxPacket@status
  2037                           
  2038                           ;../library/nrf24l01.c: 273:     }else {
  2039  0160  2963               	goto	l1647
  2040  0161                     l1645:	
  2041                           
  2042                           ;../library/nrf24l01.c: 274:         status = 0;
  2043  0161  0020               	movlb	0	; select bank0
  2044  0162  01CE               	clrf	NRF_RxPacket@status
  2045  0163                     l1647:	
  2046                           
  2047                           ;../library/nrf24l01.c: 277:  return status;
  2048  0163  084E               	movf	NRF_RxPacket@status,w
  2049  0164                     l257:	
  2050  0164  0008               	return
  2051  0165                     __end_of_NRF_RxPacket:	
  2052                           
  2053                           	psect	text7
  2054  021F                     __ptext7:	
  2055 ;; *************** function _NRF_Read_RX_Pload *****************
  2056 ;; Defined at:
  2057 ;;		line 293 in file "../library/nrf24l01.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  pBuf            1    wreg     PTR unsigned char 
  2060 ;;		 -> WirelessPad@rxbuf(2), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  pBuf            1   11[COMMON] PTR unsigned char 
  2063 ;;		 -> WirelessPad@rxbuf(2), 
  2064 ;;  pipe            1   12[COMMON] unsigned char 
  2065 ;;  width           1   10[COMMON] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      unsigned char 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMMON   BANK0   BANK1
  2075 ;;      Params:         0       0       0
  2076 ;;      Locals:         3       0       0
  2077 ;;      Temps:          2       0       0
  2078 ;;      Totals:         5       0       0
  2079 ;;Total ram usage:        5 bytes
  2080 ;; Hardware stack levels used:    1
  2081 ;; Hardware stack levels required when called:    5
  2082 ;; This function calls:
  2083 ;;		_NRF_Get_Current_Pipenum
  2084 ;;		_NRF_Read_Buf
  2085 ;;		_NRF_Read_Reg
  2086 ;; This function is called by:
  2087 ;;		_NRF_RxPacket
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _NRF_Read_RX_Pload
  2093  021F                     _NRF_Read_RX_Pload:	
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in _NRF_Read_RX_Pload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2097                           ;NRF_Read_RX_Pload@pBuf stored from wreg
  2098  021F  00FB               	movwf	NRF_Read_RX_Pload@pBuf
  2099  0220                     l1537:	
  2100                           
  2101                           ;../library/nrf24l01.c: 294:     unsigned char pipe, width;;../library/nrf24l01.c: 295: 
      +                              pipe = NRF_Get_Current_Pipenum();
  2102  0220  3182  22E1  3182   	fcall	_NRF_Get_Current_Pipenum
  2103  0223  00F8               	movwf	??_NRF_Read_RX_Pload
  2104  0224  0878               	movf	??_NRF_Read_RX_Pload,w
  2105  0225  00FC               	movwf	NRF_Read_RX_Pload@pipe
  2106                           
  2107                           ;../library/nrf24l01.c: 296:     width = NRF_Read_Reg(0x11 + pipe);
  2108  0226  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2109  0227  3E11               	addlw	17
  2110  0228  3182  226C  3182   	fcall	_NRF_Read_Reg
  2111  022B  00F8               	movwf	??_NRF_Read_RX_Pload
  2112  022C  0878               	movf	??_NRF_Read_RX_Pload,w
  2113  022D  00FA               	movwf	NRF_Read_RX_Pload@width
  2114  022E                     l1539:	
  2115                           
  2116                           ;../library/nrf24l01.c: 297:     NRF_Read_Buf(0x61, pBuf, width);
  2117  022E  087B               	movf	NRF_Read_RX_Pload@pBuf,w
  2118  022F  00F8               	movwf	??_NRF_Read_RX_Pload
  2119  0230  0878               	movf	??_NRF_Read_RX_Pload,w
  2120  0231  00F1               	movwf	NRF_Read_Buf@pBuf
  2121  0232  087A               	movf	NRF_Read_RX_Pload@width,w
  2122  0233  00F9               	movwf	??_NRF_Read_RX_Pload+1
  2123  0234  0879               	movf	??_NRF_Read_RX_Pload+1,w
  2124  0235  00F2               	movwf	NRF_Read_Buf@len
  2125  0236  3061               	movlw	97
  2126  0237  3181  21DB  3182   	fcall	_NRF_Read_Buf
  2127  023A                     l1541:	
  2128                           
  2129                           ;../library/nrf24l01.c: 298:     return pipe;
  2130  023A  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2131  023B                     l263:	
  2132  023B  0008               	return
  2133  023C                     __end_of_NRF_Read_RX_Pload:	
  2134                           
  2135                           	psect	text8
  2136  02E1                     __ptext8:	
  2137 ;; *************** function _NRF_Get_Current_Pipenum *****************
  2138 ;; Defined at:
  2139 ;;		line 284 in file "../library/nrf24l01.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      unsigned char 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1
  2153 ;;      Params:         0       0       0
  2154 ;;      Locals:         0       0       0
  2155 ;;      Temps:          0       0       0
  2156 ;;      Totals:         0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    4
  2160 ;; This function calls:
  2161 ;;		_NRF_Get_Status
  2162 ;; This function is called by:
  2163 ;;		_NRF_Read_RX_Pload
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           
  2168                           ;psect for function _NRF_Get_Current_Pipenum
  2169  02E1                     _NRF_Get_Current_Pipenum:	
  2170  02E1                     l1519:	
  2171                           ;incstack = 0
  2172                           ; Regs used in _NRF_Get_Current_Pipenum: [wreg+status,2+status,0+pclath+cstack]
  2173                           
  2174                           
  2175                           ;../library/nrf24l01.c: 285:   return ((NRF_Get_Status() & 0x0E) >> 1);
  2176  02E1  3182  22ED  3182   	fcall	_NRF_Get_Status
  2177  02E4  3689               	lsrf	9,f
  2178  02E5  3907               	andlw	7
  2179  02E6                     l260:	
  2180  02E6  0008               	return
  2181  02E7                     __end_of_NRF_Get_Current_Pipenum:	
  2182                           
  2183                           	psect	text9
  2184  02ED                     __ptext9:	
  2185 ;; *************** function _NRF_Get_Status *****************
  2186 ;; Defined at:
  2187 ;;		line 304 in file "../library/nrf24l01.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      unsigned char 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1
  2201 ;;      Params:         0       0       0
  2202 ;;      Locals:         0       0       0
  2203 ;;      Temps:          0       0       0
  2204 ;;      Totals:         0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    3
  2208 ;; This function calls:
  2209 ;;		_NRF_Read_Reg
  2210 ;; This function is called by:
  2211 ;;		_NRF_RxPacket
  2212 ;;		_NRF_Get_Current_Pipenum
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _NRF_Get_Status
  2218  02ED                     _NRF_Get_Status:	
  2219  02ED                     l1491:	
  2220                           ;incstack = 0
  2221                           ; Regs used in _NRF_Get_Status: [wreg+status,2+status,0+pclath+cstack]
  2222                           
  2223                           
  2224                           ;../library/nrf24l01.c: 305:     return NRF_Read_Reg(0x07);
  2225  02ED  3007               	movlw	7
  2226  02EE  3182  226C  3182   	fcall	_NRF_Read_Reg
  2227  02F1                     l266:	
  2228  02F1  0008               	return
  2229  02F2                     __end_of_NRF_Get_Status:	
  2230                           
  2231                           	psect	text10
  2232  026C                     __ptext10:	
  2233 ;; *************** function _NRF_Read_Reg *****************
  2234 ;; Defined at:
  2235 ;;		line 87 in file "../library/nrf24l01.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  reg             1    wreg     unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  reg             1    2[COMMON] unsigned char 
  2240 ;;  status          1    3[COMMON] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1
  2250 ;;      Params:         0       0       0
  2251 ;;      Locals:         2       0       0
  2252 ;;      Temps:          1       0       0
  2253 ;;      Totals:         3       0       0
  2254 ;;Total ram usage:        3 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    2
  2257 ;; This function calls:
  2258 ;;		_NRF_SPI_RW
  2259 ;; This function is called by:
  2260 ;;		_NRF_Read_RX_Pload
  2261 ;;		_NRF_Get_Status
  2262 ;;		_NRF_TxPacket
  2263 ;;		_NRF_Tx_CheckACK
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _NRF_Read_Reg
  2269  026C                     _NRF_Read_Reg:	
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _NRF_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  2273                           ;NRF_Read_Reg@reg stored from wreg
  2274  026C  00F2               	movwf	NRF_Read_Reg@reg
  2275  026D                     l1479:	
  2276                           
  2277                           ;../library/nrf24l01.c: 88:  unsigned char status;;../library/nrf24l01.c: 89:    RA2 = 0
      +                          ;
  2278  026D  0020               	movlb	0	; select bank0
  2279  026E  110C               	bcf	12,2	;volatile
  2280  026F                     l1481:	
  2281                           
  2282                           ;../library/nrf24l01.c: 90:    NRF_SPI_RW(reg);
  2283  026F  0872               	movf	NRF_Read_Reg@reg,w
  2284  0270  3182  229E  3182   	fcall	_NRF_SPI_RW
  2285  0273                     l1483:	
  2286                           
  2287                           ;../library/nrf24l01.c: 91:    status = NRF_SPI_RW(0xFF);
  2288  0273  30FF               	movlw	255
  2289  0274  3182  229E  3182   	fcall	_NRF_SPI_RW
  2290  0277  00F1               	movwf	??_NRF_Read_Reg
  2291  0278  0871               	movf	??_NRF_Read_Reg,w
  2292  0279  00F3               	movwf	NRF_Read_Reg@status
  2293  027A                     l1485:	
  2294                           
  2295                           ;../library/nrf24l01.c: 92:    RA2 = 1;
  2296  027A  0020               	movlb	0	; select bank0
  2297  027B  150C               	bsf	12,2	;volatile
  2298  027C                     l1487:	
  2299                           
  2300                           ;../library/nrf24l01.c: 93:    return(status);
  2301  027C  0873               	movf	NRF_Read_Reg@status,w
  2302  027D                     l207:	
  2303  027D  0008               	return
  2304  027E                     __end_of_NRF_Read_Reg:	
  2305                           
  2306                           	psect	text11
  2307  02E7                     __ptext11:	
  2308 ;; *************** function _NRF_Flush_RX *****************
  2309 ;; Defined at:
  2310 ;;		line 318 in file "../library/nrf24l01.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1
  2324 ;;      Params:         0       0       0
  2325 ;;      Locals:         0       0       0
  2326 ;;      Temps:          0       0       0
  2327 ;;      Totals:         0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    3
  2331 ;; This function calls:
  2332 ;;		_NRF_Write_Reg
  2333 ;; This function is called by:
  2334 ;;		_NRF_RxPacket
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           
  2339                           ;psect for function _NRF_Flush_RX
  2340  02E7                     _NRF_Flush_RX:	
  2341  02E7                     l1545:	
  2342                           ;incstack = 0
  2343                           ; Regs used in _NRF_Flush_RX: [wreg+status,2+status,0+pclath+cstack]
  2344                           
  2345                           
  2346                           ;../library/nrf24l01.c: 319:     NRF_Write_Reg(0xE2, 0);
  2347  02E7  01F1               	clrf	NRF_Write_Reg@value
  2348  02E8  30E2               	movlw	226
  2349  02E9  3182  227E  3182   	fcall	_NRF_Write_Reg
  2350  02EC                     l272:	
  2351  02EC  0008               	return
  2352  02ED                     __end_of_NRF_Flush_RX:	
  2353                           
  2354                           	psect	text12
  2355  02AC                     __ptext12:	
  2356 ;; *************** function _NRF_Port_Init *****************
  2357 ;; Defined at:
  2358 ;;		line 44 in file "../library/nrf24l01.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		None
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1
  2372 ;;      Params:         0       0       0
  2373 ;;      Locals:         0       0       0
  2374 ;;      Temps:          0       0       0
  2375 ;;      Totals:         0       0       0
  2376 ;;Total ram usage:        0 bytes
  2377 ;; Hardware stack levels used:    1
  2378 ;; Hardware stack levels required when called:    1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_WirelessPad
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _NRF_Port_Init
  2388  02AC                     _NRF_Port_Init:	
  2389  02AC                     l1569:	
  2390                           ;incstack = 0
  2391                           ; Regs used in _NRF_Port_Init: []
  2392                           
  2393                           
  2394                           ;../library/nrf24l01.c: 45:     TRISC1 = 1;
  2395  02AC  0021               	movlb	1	; select bank1
  2396  02AD  148E               	bsf	14,1	;volatile
  2397                           
  2398                           ;../library/nrf24l01.c: 46:     TRISC2 = 0;
  2399  02AE  110E               	bcf	14,2	;volatile
  2400                           
  2401                           ;../library/nrf24l01.c: 47:     TRISC0 = 0;
  2402  02AF  100E               	bcf	14,0	;volatile
  2403                           
  2404                           ;../library/nrf24l01.c: 48:     TRISA2 = 0;
  2405  02B0  110C               	bcf	12,2	;volatile
  2406                           
  2407                           ;../library/nrf24l01.c: 49:     TRISA0 = 0;
  2408  02B1  100C               	bcf	12,0	;volatile
  2409                           
  2410                           ;../library/nrf24l01.c: 51:     TRISA4 = 1;
  2411  02B2  160C               	bsf	12,4	;volatile
  2412                           
  2413                           ;../library/nrf24l01.c: 52:     TRISA5 = 0;
  2414  02B3  128C               	bcf	12,5	;volatile
  2415                           
  2416                           ;../library/nrf24l01.c: 54:     RA0 = 0;
  2417  02B4  0020               	movlb	0	; select bank0
  2418  02B5  100C               	bcf	12,0	;volatile
  2419                           
  2420                           ;../library/nrf24l01.c: 55:     RA2 = 1;
  2421  02B6  150C               	bsf	12,2	;volatile
  2422  02B7                     l189:	
  2423  02B7  0008               	return
  2424  02B8                     __end_of_NRF_Port_Init:	
  2425                           
  2426                           	psect	text13
  2427  02F2                     __ptext13:	
  2428 ;; *************** function _NRF_On *****************
  2429 ;; Defined at:
  2430 ;;		line 58 in file "../library/nrf24l01.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		None
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1
  2444 ;;      Params:         0       0       0
  2445 ;;      Locals:         0       0       0
  2446 ;;      Temps:          0       0       0
  2447 ;;      Totals:         0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_WirelessPad
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _NRF_On
  2460  02F2                     _NRF_On:	
  2461  02F2                     l1567:	
  2462                           ;incstack = 0
  2463                           ; Regs used in _NRF_On: []
  2464                           
  2465                           
  2466                           ;../library/nrf24l01.c: 59:     RA5 = 0;
  2467  02F2  0020               	movlb	0	; select bank0
  2468  02F3  128C               	bcf	12,5	;volatile
  2469  02F4                     l192:	
  2470  02F4  0008               	return
  2471  02F5                     __end_of_NRF_On:	
  2472                           
  2473                           	psect	text14
  2474  0254                     __ptext14:	
  2475 ;; *************** function _NRF_Clear_IRQ *****************
  2476 ;; Defined at:
  2477 ;;		line 322 in file "../library/nrf24l01.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  buf             2    0        PTR unsigned char 
  2482 ;;  temp            1    8[COMMON] unsigned char 
  2483 ;;  IRQ_FLAG        1    0        unsigned char 
  2484 ;;  rx_pw           1    0        unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      unsigned char 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, pclath, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1
  2494 ;;      Params:         0       0       0
  2495 ;;      Locals:         2       0       0
  2496 ;;      Temps:          2       0       0
  2497 ;;      Totals:         4       0       0
  2498 ;;Total ram usage:        4 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; Hardware stack levels required when called:    3
  2501 ;; This function calls:
  2502 ;;		_NRF_Write_Reg
  2503 ;; This function is called by:
  2504 ;;		_WirelessPad
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           
  2509                           ;psect for function _NRF_Clear_IRQ
  2510  0254                     _NRF_Clear_IRQ:	
  2511  0254                     l1651:	
  2512                           ;incstack = 0
  2513                           ; Regs used in _NRF_Clear_IRQ: [wreg+status,2+status,0+pclath+cstack]
  2514                           
  2515                           
  2516                           ;../library/nrf24l01.c: 324:     unsigned char IRQ_FLAG;;../library/nrf24l01.c: 326:    
      +                           unsigned char temp, rx_pw;;../library/nrf24l01.c: 327:     unsigned char* buf;;../libra
      +                          ry/nrf24l01.c: 329:     temp = NRF_Write_Reg(0x20 + 0x07, 0x70);
  2517  0254  3070               	movlw	112
  2518  0255  00F5               	movwf	??_NRF_Clear_IRQ
  2519  0256  0875               	movf	??_NRF_Clear_IRQ,w
  2520  0257  00F1               	movwf	NRF_Write_Reg@value
  2521  0258  3027               	movlw	39
  2522  0259  3182  227E  3182   	fcall	_NRF_Write_Reg
  2523  025C  00F6               	movwf	??_NRF_Clear_IRQ+1
  2524  025D  0876               	movf	??_NRF_Clear_IRQ+1,w
  2525  025E  00F8               	movwf	NRF_Clear_IRQ@temp
  2526  025F                     l1653:	
  2527                           
  2528                           ;../library/nrf24l01.c: 331:     if(temp & 0X10) IRQ_FLAG = 0X10;
  2529  025F  1E78               	btfss	NRF_Clear_IRQ@temp,4
  2530  0260  2A62               	goto	u451
  2531  0261  2A63               	goto	u450
  2532  0262                     u451:	
  2533  0262  2A63               	goto	l1657
  2534  0263                     u450:	
  2535  0263                     l1655:	
  2536  0263                     l1657:	
  2537                           
  2538                           ;../library/nrf24l01.c: 332:     if(temp & 0X20) IRQ_FLAG = 0X20;
  2539  0263  1EF8               	btfss	NRF_Clear_IRQ@temp,5
  2540  0264  2A66               	goto	u461
  2541  0265  2A67               	goto	u460
  2542  0266                     u461:	
  2543  0266  2A67               	goto	l1661
  2544  0267                     u460:	
  2545  0267                     l1659:	
  2546  0267                     l1661:	
  2547                           
  2548                           ;../library/nrf24l01.c: 334:     if(temp & 0X40)
  2549  0267  1F78               	btfss	NRF_Clear_IRQ@temp,6
  2550  0268  2A6A               	goto	u471
  2551  0269  2A6B               	goto	u470
  2552  026A                     u471:	
  2553  026A  2A6B               	goto	l278
  2554  026B                     u470:	
  2555  026B                     l1663:	
  2556  026B                     l278:	
  2557  026B  0008               	return
  2558  026C                     __end_of_NRF_Clear_IRQ:	
  2559                           
  2560                           	psect	text15
  2561  027E                     __ptext15:	
  2562 ;; *************** function _NRF_Write_Reg *****************
  2563 ;; Defined at:
  2564 ;;		line 103 in file "../library/nrf24l01.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  reg             1    wreg     unsigned char 
  2567 ;;  value           1    1[COMMON] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  reg             1    3[COMMON] unsigned char 
  2570 ;;  status          1    4[COMMON] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      unsigned char 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, pclath, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1
  2580 ;;      Params:         1       0       0
  2581 ;;      Locals:         2       0       0
  2582 ;;      Temps:          1       0       0
  2583 ;;      Totals:         4       0       0
  2584 ;;Total ram usage:        4 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    2
  2587 ;; This function calls:
  2588 ;;		_NRF_SPI_RW
  2589 ;; This function is called by:
  2590 ;;		_NRF_RxPacket
  2591 ;;		_NRF_Flush_RX
  2592 ;;		_NRF_Clear_IRQ
  2593 ;;		_NRF_Rx_Set
  2594 ;;		_NRF_Rx_Set_P0
  2595 ;;		_NRF_Power_off
  2596 ;;		_NRF_TX_Mode
  2597 ;;		_NRF_TxPacket
  2598 ;;		_NRF_RX_Mode
  2599 ;;		_NRF_Flush_TX
  2600 ;;		_NRF_Tx_Set
  2601 ;;		_NRF_Tx_CheckACK
  2602 ;;		_NRF_Rx_Set_P1
  2603 ;;		_NRF_Rx_Set_P3
  2604 ;;		_NRF_Rx_Set_P4
  2605 ;;		_NRF_Rx_Set_P5
  2606 ;;		_NRF_Rx_Receive
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           
  2611                           ;psect for function _NRF_Write_Reg
  2612  027E                     _NRF_Write_Reg:	
  2613                           
  2614                           ;incstack = 0
  2615                           ; Regs used in _NRF_Write_Reg: [wreg+status,2+status,0+pclath+cstack]
  2616                           ;NRF_Write_Reg@reg stored from wreg
  2617  027E  00F3               	movwf	NRF_Write_Reg@reg
  2618  027F                     l1495:	
  2619                           
  2620                           ;../library/nrf24l01.c: 104:  unsigned char status;;../library/nrf24l01.c: 105:    RA2 =
      +                           0;
  2621  027F  0020               	movlb	0	; select bank0
  2622  0280  110C               	bcf	12,2	;volatile
  2623  0281                     l1497:	
  2624                           
  2625                           ;../library/nrf24l01.c: 106:    status = NRF_SPI_RW(reg);
  2626  0281  0873               	movf	NRF_Write_Reg@reg,w
  2627  0282  3182  229E  3182   	fcall	_NRF_SPI_RW
  2628  0285  00F2               	movwf	??_NRF_Write_Reg
  2629  0286  0872               	movf	??_NRF_Write_Reg,w
  2630  0287  00F4               	movwf	NRF_Write_Reg@status
  2631  0288                     l1499:	
  2632                           
  2633                           ;../library/nrf24l01.c: 107:    NRF_SPI_RW(value);
  2634  0288  0871               	movf	NRF_Write_Reg@value,w
  2635  0289  3182  229E  3182   	fcall	_NRF_SPI_RW
  2636  028C                     l1501:	
  2637                           
  2638                           ;../library/nrf24l01.c: 108:    RA2 = 1;
  2639  028C  0020               	movlb	0	; select bank0
  2640  028D  150C               	bsf	12,2	;volatile
  2641  028E                     l1503:	
  2642                           
  2643                           ;../library/nrf24l01.c: 109:    return(status);
  2644  028E  0874               	movf	NRF_Write_Reg@status,w
  2645  028F                     l210:	
  2646  028F  0008               	return
  2647  0290                     __end_of_NRF_Write_Reg:	
  2648                           
  2649                           	psect	text16
  2650  008C                     __ptext16:	
  2651 ;; *************** function _NRF_Check *****************
  2652 ;; Defined at:
  2653 ;;		line 158 in file "../library/nrf24l01.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  buf             5    5[BANK0 ] unsigned char [5]
  2658 ;;  tuf             5    0[BANK0 ] unsigned char [5]
  2659 ;;  i               1   10[BANK0 ] unsigned char 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      unsigned char 
  2662 ;; Registers used:
  2663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1
  2669 ;;      Params:         0       0       0
  2670 ;;      Locals:         0      11       0
  2671 ;;      Temps:          2       0       0
  2672 ;;      Totals:         2      11       0
  2673 ;;Total ram usage:       13 bytes
  2674 ;; Hardware stack levels used:    1
  2675 ;; Hardware stack levels required when called:    3
  2676 ;; This function calls:
  2677 ;;		_NRF_Read_Buf
  2678 ;;		_NRF_Write_Buf
  2679 ;; This function is called by:
  2680 ;;		_WirelessPad
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           
  2685                           ;psect for function _NRF_Check
  2686  008C                     _NRF_Check:	
  2687  008C                     l1579:	
  2688                           ;incstack = 0
  2689                           ; Regs used in _NRF_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2690                           
  2691                           
  2692                           ;../library/nrf24l01.c: 159:     unsigned char tuf[5] = {0xE1, 0xE2, 0xE3, 0xE4, 0x05};
  2693  008C  3020               	movlw	low NRF_Check@F2717
  2694  008D  0086               	movwf	6
  2695  008E  3000               	movlw	high NRF_Check@F2717
  2696  008F  0087               	movwf	7
  2697  0090  304D               	movlw	low NRF_Check@tuf
  2698  0091  0084               	movwf	4
  2699  0092  3000               	movlw	high NRF_Check@tuf
  2700  0093  0085               	movwf	5
  2701  0094  3005               	movlw	5
  2702  0095  00F8               	movwf	??_NRF_Check
  2703  0096                     u380:	
  2704  0096  0016               	moviw fsr1++
  2705  0097  001A               	movwi fsr0++
  2706  0098  0BF8               	decfsz	??_NRF_Check,f
  2707  0099  2896               	goto	u380
  2708  009A                     l1581:	
  2709                           
  2710                           ;../library/nrf24l01.c: 160:  unsigned char buf[5] = {0, 0, 0, 0, 0};
  2711  009A  3052               	movlw	low NRF_Check@buf
  2712  009B  0086               	movwf	6
  2713  009C  3000               	movlw	high NRF_Check@buf
  2714  009D  0087               	movwf	7
  2715  009E  3005               	movlw	5
  2716  009F  00F8               	movwf	??_NRF_Check
  2717  00A0  3000               	movlw	0
  2718  00A1                     u390:	
  2719  00A1  001E               	movwi fsr1++
  2720  00A2  0BF8               	decfsz	??_NRF_Check,f
  2721  00A3  28A1               	goto	u390
  2722  00A4                     l1583:	
  2723                           
  2724                           ;../library/nrf24l01.c: 161:  unsigned char i;;../library/nrf24l01.c: 162:     NRF_Write
      +                          _Buf(0x20 + 0x10, tuf, 5);
  2725  00A4  304D               	movlw	(low (NRF_Check@tuf| 0))& (0+255)
  2726  00A5  00F8               	movwf	??_NRF_Check
  2727  00A6  0878               	movf	??_NRF_Check,w
  2728  00A7  00F1               	movwf	NRF_Write_Buf@pBuf
  2729  00A8  3005               	movlw	5
  2730  00A9  00F9               	movwf	??_NRF_Check+1
  2731  00AA  0879               	movf	??_NRF_Check+1,w
  2732  00AB  00F2               	movwf	NRF_Write_Buf@len
  2733  00AC  3030               	movlw	48
  2734  00AD  3181  21FE  3180   	fcall	_NRF_Write_Buf
  2735  00B0                     l1585:	
  2736                           
  2737                           ;../library/nrf24l01.c: 163:  NRF_Read_Buf(0x10, buf, 5);
  2738  00B0  3052               	movlw	(low (NRF_Check@buf| 0))& (0+255)
  2739  00B1  00F8               	movwf	??_NRF_Check
  2740  00B2  0878               	movf	??_NRF_Check,w
  2741  00B3  00F1               	movwf	NRF_Read_Buf@pBuf
  2742  00B4  3005               	movlw	5
  2743  00B5  00F9               	movwf	??_NRF_Check+1
  2744  00B6  0879               	movf	??_NRF_Check+1,w
  2745  00B7  00F2               	movwf	NRF_Read_Buf@len
  2746  00B8  3010               	movlw	16
  2747  00B9  3181  21DB  3180   	fcall	_NRF_Read_Buf
  2748  00BC                     l1587:	
  2749                           
  2750                           ;../library/nrf24l01.c: 164:  for(i = 0; i < 5; i++) if(tuf[i] != buf[i]) break;
  2751  00BC  0020               	movlb	0	; select bank0
  2752  00BD  01D7               	clrf	NRF_Check@i
  2753  00BE                     l1593:	
  2754  00BE  0857               	movf	NRF_Check@i,w
  2755  00BF  3E52               	addlw	(low (NRF_Check@buf| 0))& (0+255)
  2756  00C0  0086               	movwf	6
  2757  00C1  0187               	clrf	7
  2758  00C2  0857               	movf	NRF_Check@i,w
  2759  00C3  3E4D               	addlw	(low (NRF_Check@tuf| 0))& (0+255)
  2760  00C4  0084               	movwf	4
  2761  00C5  0185               	clrf	5
  2762  00C6  0800               	movf	0,w
  2763  00C7  0601               	xorwf	1,w
  2764  00C8  1903               	skipnz
  2765  00C9  28CB               	goto	u401
  2766  00CA  28CC               	goto	u400
  2767  00CB                     u401:	
  2768  00CB  28CD               	goto	l1597
  2769  00CC                     u400:	
  2770  00CC  28D7               	goto	l1601
  2771  00CD                     l1597:	
  2772  00CD  3001               	movlw	1
  2773  00CE  00F8               	movwf	??_NRF_Check
  2774  00CF  0878               	movf	??_NRF_Check,w
  2775  00D0  07D7               	addwf	NRF_Check@i,f
  2776  00D1                     l1599:	
  2777  00D1  3005               	movlw	5
  2778  00D2  0257               	subwf	NRF_Check@i,w
  2779  00D3  1C03               	skipc
  2780  00D4  28D6               	goto	u411
  2781  00D5  28D7               	goto	u410
  2782  00D6                     u411:	
  2783  00D6  28BE               	goto	l1593
  2784  00D7                     u410:	
  2785  00D7                     l1601:	
  2786                           
  2787                           ;../library/nrf24l01.c: 165:  if(i != 5) return 1;
  2788  00D7  3005               	movlw	5
  2789  00D8  0657               	xorwf	NRF_Check@i,w
  2790  00D9  1903               	btfsc	3,2
  2791  00DA  28DC               	goto	u421
  2792  00DB  28DD               	goto	u420
  2793  00DC                     u421:	
  2794  00DC  28DF               	goto	l1607
  2795  00DD                     u420:	
  2796  00DD                     l1603:	
  2797  00DD  3001               	movlw	1
  2798  00DE  28E0               	goto	l236
  2799  00DF                     l1607:	
  2800                           
  2801                           ;../library/nrf24l01.c: 166:  return 0;
  2802  00DF  3000               	movlw	0
  2803  00E0                     l236:	
  2804  00E0  0008               	return
  2805  00E1                     __end_of_NRF_Check:	
  2806                           
  2807                           	psect	text17
  2808  01FE                     __ptext17:	
  2809 ;; *************** function _NRF_Write_Buf *****************
  2810 ;; Defined at:
  2811 ;;		line 138 in file "../library/nrf24l01.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  reg             1    wreg     unsigned char 
  2814 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  2815 ;;		 -> RX_ADDRESS_P5(5), RX_ADDRESS_P4(5), RX_ADDRESS_P3(5), RX_ADDRESS_P2(5), 
  2816 ;;		 -> RX_ADDRESS_P1(5), RX_ADDRESS_P0(5), NRF_Check@tuf(5), rx_addr_0(5), 
  2817 ;;  len             1    2[COMMON] unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  reg             1    5[COMMON] unsigned char 
  2820 ;;  i               1    6[COMMON] unsigned char 
  2821 ;;  status          1    0        unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      unsigned char 
  2824 ;; Registers used:
  2825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1
  2831 ;;      Params:         2       0       0
  2832 ;;      Locals:         3       0       0
  2833 ;;      Temps:          1       0       0
  2834 ;;      Totals:         6       0       0
  2835 ;;Total ram usage:        6 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:    2
  2838 ;; This function calls:
  2839 ;;		_NRF_SPI_RW
  2840 ;; This function is called by:
  2841 ;;		_NRF_Check
  2842 ;;		_NRF_Rx_Set_P0
  2843 ;;		_NRF_TX_Mode
  2844 ;;		_NRF_RX_Mode
  2845 ;;		_NRF_Tx_Set
  2846 ;;		_NRF_Tx_Send
  2847 ;;		_NRF_Rx_Set_P1
  2848 ;;		_NRF_Rx_Set_P3
  2849 ;;		_NRF_Rx_Set_P4
  2850 ;;		_NRF_Rx_Set_P5
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _NRF_Write_Buf
  2856  01FE                     _NRF_Write_Buf:	
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _NRF_Write_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2860                           ;NRF_Write_Buf@reg stored from wreg
  2861  01FE  00F5               	movwf	NRF_Write_Buf@reg
  2862  01FF                     l1523:	
  2863                           
  2864                           ;../library/nrf24l01.c: 138: unsigned char NRF_Write_Buf(unsigned char reg, unsigned cha
      +                          r *pBuf, unsigned char len);../library/nrf24l01.c: 139: {;../library/nrf24l01.c: 140:  u
      +                          nsigned char status, i;;../library/nrf24l01.c: 141:    RA2 = 0;
  2865  01FF  0020               	movlb	0	; select bank0
  2866  0200  110C               	bcf	12,2	;volatile
  2867  0201                     l1525:	
  2868  0201  0875               	movf	NRF_Write_Buf@reg,w
  2869  0202  3182  229E  3181   	fcall	_NRF_SPI_RW
  2870  0205                     l1527:	
  2871                           
  2872                           ;../library/nrf24l01.c: 143:    for(i = 0; i < len; i++) {
  2873  0205  01F6               	clrf	NRF_Write_Buf@i
  2874  0206  2A16               	goto	l1535
  2875  0207                     l1529:	
  2876                           
  2877                           ;../library/nrf24l01.c: 144:      NRF_SPI_RW(*pBuf++);
  2878  0207  0871               	movf	NRF_Write_Buf@pBuf,w
  2879  0208  0086               	movwf	6
  2880  0209  0187               	clrf	7
  2881  020A  0801               	movf	1,w
  2882  020B  3182  229E  3181   	fcall	_NRF_SPI_RW
  2883  020E                     l1531:	
  2884  020E  3001               	movlw	1
  2885  020F  00F3               	movwf	??_NRF_Write_Buf
  2886  0210  0873               	movf	??_NRF_Write_Buf,w
  2887  0211  07F1               	addwf	NRF_Write_Buf@pBuf,f
  2888  0212                     l1533:	
  2889                           
  2890                           ;../library/nrf24l01.c: 145:  }
  2891  0212  3001               	movlw	1
  2892  0213  00F3               	movwf	??_NRF_Write_Buf
  2893  0214  0873               	movf	??_NRF_Write_Buf,w
  2894  0215  07F6               	addwf	NRF_Write_Buf@i,f
  2895  0216                     l1535:	
  2896  0216  0872               	movf	NRF_Write_Buf@len,w
  2897  0217  0276               	subwf	NRF_Write_Buf@i,w
  2898  0218  1C03               	skipc
  2899  0219  2A1B               	goto	u351
  2900  021A  2A1C               	goto	u350
  2901  021B                     u351:	
  2902  021B  2A07               	goto	l1529
  2903  021C                     u350:	
  2904  021C                     l221:	
  2905                           
  2906                           ;../library/nrf24l01.c: 146:    RA2 = 1;
  2907  021C  0020               	movlb	0	; select bank0
  2908  021D  150C               	bsf	12,2	;volatile
  2909  021E                     l222:	
  2910                           ;../library/nrf24l01.c: 147:    return(status);;	Return value of _NRF_Write_Buf is never
      +                           used
  2911                           
  2912  021E  0008               	return
  2913  021F                     __end_of_NRF_Write_Buf:	
  2914                           
  2915                           	psect	text18
  2916  01DB                     __ptext18:	
  2917 ;; *************** function _NRF_Read_Buf *****************
  2918 ;; Defined at:
  2919 ;;		line 119 in file "../library/nrf24l01.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  reg             1    wreg     unsigned char 
  2922 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  2923 ;;		 -> NRF_Check@buf(5), WirelessPad@rxbuf(2), 
  2924 ;;  len             1    2[COMMON] unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  reg             1    6[COMMON] unsigned char 
  2927 ;;  i               1    7[COMMON] unsigned char 
  2928 ;;  status          1    0        unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      unsigned char 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMMON   BANK0   BANK1
  2938 ;;      Params:         2       0       0
  2939 ;;      Locals:         3       0       0
  2940 ;;      Temps:          2       0       0
  2941 ;;      Totals:         7       0       0
  2942 ;;Total ram usage:        7 bytes
  2943 ;; Hardware stack levels used:    1
  2944 ;; Hardware stack levels required when called:    2
  2945 ;; This function calls:
  2946 ;;		_NRF_SPI_RW
  2947 ;; This function is called by:
  2948 ;;		_NRF_Check
  2949 ;;		_NRF_Read_RX_Pload
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _NRF_Read_Buf
  2955  01DB                     _NRF_Read_Buf:	
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _NRF_Read_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2959                           ;NRF_Read_Buf@reg stored from wreg
  2960  01DB  00F6               	movwf	NRF_Read_Buf@reg
  2961  01DC                     l1507:	
  2962                           
  2963                           ;../library/nrf24l01.c: 119: unsigned char NRF_Read_Buf(unsigned char reg, unsigned char
      +                           *pBuf, unsigned char len);../library/nrf24l01.c: 120: {;../library/nrf24l01.c: 121:  un
      +                          signed char status,i;;../library/nrf24l01.c: 122:    RA2 = 0;
  2964  01DC  0020               	movlb	0	; select bank0
  2965  01DD  110C               	bcf	12,2	;volatile
  2966  01DE                     l1509:	
  2967  01DE  0876               	movf	NRF_Read_Buf@reg,w
  2968  01DF  3182  229E  3181   	fcall	_NRF_SPI_RW
  2969  01E2                     l1511:	
  2970                           
  2971                           ;../library/nrf24l01.c: 124:    for(i = 0; i < len; i++)
  2972  01E2  01F7               	clrf	NRF_Read_Buf@i
  2973  01E3  29F5               	goto	l1517
  2974  01E4                     l1513:	
  2975                           
  2976                           ;../library/nrf24l01.c: 125:  {;../library/nrf24l01.c: 126:      pBuf[i] = NRF_SPI_RW(0x
      +                          FF);
  2977  01E4  30FF               	movlw	255
  2978  01E5  3182  229E  3181   	fcall	_NRF_SPI_RW
  2979  01E8  00F3               	movwf	??_NRF_Read_Buf
  2980  01E9  0877               	movf	NRF_Read_Buf@i,w
  2981  01EA  0771               	addwf	NRF_Read_Buf@pBuf,w
  2982  01EB  00F4               	movwf	??_NRF_Read_Buf+1
  2983  01EC  0874               	movf	??_NRF_Read_Buf+1,w
  2984  01ED  0086               	movwf	6
  2985  01EE  0187               	clrf	7
  2986  01EF  0873               	movf	??_NRF_Read_Buf,w
  2987  01F0  0081               	movwf	1
  2988  01F1                     l1515:	
  2989                           
  2990                           ;../library/nrf24l01.c: 127:    }
  2991  01F1  3001               	movlw	1
  2992  01F2  00F3               	movwf	??_NRF_Read_Buf
  2993  01F3  0873               	movf	??_NRF_Read_Buf,w
  2994  01F4  07F7               	addwf	NRF_Read_Buf@i,f
  2995  01F5                     l1517:	
  2996  01F5  0872               	movf	NRF_Read_Buf@len,w
  2997  01F6  0277               	subwf	NRF_Read_Buf@i,w
  2998  01F7  1C03               	skipc
  2999  01F8  29FA               	goto	u341
  3000  01F9  29FB               	goto	u340
  3001  01FA                     u341:	
  3002  01FA  29E4               	goto	l1513
  3003  01FB                     u340:	
  3004  01FB                     l215:	
  3005                           
  3006                           ;../library/nrf24l01.c: 128:  RA2 = 1;
  3007  01FB  0020               	movlb	0	; select bank0
  3008  01FC  150C               	bsf	12,2	;volatile
  3009  01FD                     l216:	
  3010                           ;../library/nrf24l01.c: 129:    return(status);;	Return value of _NRF_Read_Buf is never 
      +                          used
  3011                           
  3012  01FD  0008               	return
  3013  01FE                     __end_of_NRF_Read_Buf:	
  3014                           
  3015                           	psect	text19
  3016  029E                     __ptext19:	
  3017 ;; *************** function _NRF_SPI_RW *****************
  3018 ;; Defined at:
  3019 ;;		line 79 in file "../library/nrf24l01.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  dat             1    wreg     unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  dat             1    0[COMMON] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      unsigned char 
  3026 ;; Registers used:
  3027 ;;		wreg
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1
  3033 ;;      Params:         0       0       0
  3034 ;;      Locals:         1       0       0
  3035 ;;      Temps:          0       0       0
  3036 ;;      Totals:         1       0       0
  3037 ;;Total ram usage:        1 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_NRF_Read_Reg
  3044 ;;		_NRF_Write_Reg
  3045 ;;		_NRF_Read_Buf
  3046 ;;		_NRF_Write_Buf
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function _NRF_SPI_RW
  3052  029E                     _NRF_SPI_RW:	
  3053                           
  3054                           ;incstack = 0
  3055                           ; Regs used in _NRF_SPI_RW: [wreg]
  3056                           ;NRF_SPI_RW@dat stored from wreg
  3057  029E  00F0               	movwf	NRF_SPI_RW@dat
  3058  029F                     l1471:	
  3059                           
  3060                           ;../library/nrf24l01.c: 80:     SSP1IF = 0;
  3061  029F  0020               	movlb	0	; select bank0
  3062  02A0  1191               	bcf	17,3	;volatile
  3063  02A1                     l1473:	
  3064                           
  3065                           ;../library/nrf24l01.c: 81:     SSP1BUF = dat;
  3066  02A1  0870               	movf	NRF_SPI_RW@dat,w
  3067  02A2  0024               	movlb	4	; select bank4
  3068  02A3  0091               	movwf	17	;volatile
  3069  02A4                     l201:	
  3070                           ;../library/nrf24l01.c: 82:     while(!SSP1IF);
  3071                           
  3072  02A4  0020               	movlb	0	; select bank0
  3073  02A5  1D91               	btfss	17,3	;volatile
  3074  02A6  2AA8               	goto	u331
  3075  02A7  2AA9               	goto	u330
  3076  02A8                     u331:	
  3077  02A8  2AA4               	goto	l201
  3078  02A9                     u330:	
  3079  02A9                     l1475:	
  3080                           
  3081                           ;../library/nrf24l01.c: 84:     return(SSP1BUF);
  3082  02A9  0024               	movlb	4	; select bank4
  3083  02AA  0811               	movf	17,w	;volatile
  3084  02AB                     l204:	
  3085  02AB  0008               	return
  3086  02AC                     __end_of_NRF_SPI_RW:	
  3087                           
  3088                           	psect	text20
  3089  0165                     __ptext20:	
  3090 ;; *************** function _LED_Red *****************
  3091 ;; Defined at:
  3092 ;;		line 61 in file "main.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  num             1    wreg     unsigned char 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  num             1    2[COMMON] unsigned char 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1
  3106 ;;      Params:         0       0       0
  3107 ;;      Locals:         1       0       0
  3108 ;;      Temps:          2       0       0
  3109 ;;      Totals:         3       0       0
  3110 ;;Total ram usage:        3 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    1
  3113 ;; This function calls:
  3114 ;;		Nothing
  3115 ;; This function is called by:
  3116 ;;		_WirelessPad
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _LED_Red
  3122  0165                     _LED_Red:	
  3123                           
  3124                           ;incstack = 0
  3125                           ; Regs used in _LED_Red: [wreg+status,2+status,0]
  3126                           ;LED_Red@num stored from wreg
  3127  0165  00F2               	movwf	LED_Red@num
  3128  0166                     l1547:	
  3129                           
  3130                           ;main.c: 62:     while(num--) {
  3131  0166  297B               	goto	l1553
  3132  0167                     l64:	
  3133                           
  3134                           ;main.c: 63:         RC4 = 1;;
  3135  0167  0020               	movlb	0	; select bank0
  3136  0168  160E               	bsf	14,4	;volatile
  3137  0169                     l1549:	
  3138                           
  3139                           ;main.c: 64:         _delay((unsigned long)((200)*(1000000/4000.0)));
  3140  0169  3041               	movlw	65
  3141  016A  00F0               	movwf	??_LED_Red
  3142  016B  30EE               	movlw	238
  3143  016C                     u617:	
  3144  016C  0B89               	decfsz	9,f
  3145  016D  296C               	goto	u617
  3146  016E  0BF0               	decfsz	??_LED_Red,f
  3147  016F  296C               	goto	u617
  3148  0170  3200               	nop2
  3149  0171                     l1551:	
  3150                           
  3151                           ;main.c: 65:         RC4 = 0;
  3152  0171  0020               	movlb	0	; select bank0
  3153  0172  120E               	bcf	14,4	;volatile
  3154                           
  3155                           ;main.c: 66:         _delay((unsigned long)((200)*(1000000/4000.0)));
  3156  0173  3041               	movlw	65
  3157  0174  00F0               	movwf	??_LED_Red
  3158  0175  30EE               	movlw	238
  3159  0176                     u627:	
  3160  0176  0B89               	decfsz	9,f
  3161  0177  2976               	goto	u627
  3162  0178  0BF0               	decfsz	??_LED_Red,f
  3163  0179  2976               	goto	u627
  3164  017A  3200               	nop2
  3165  017B                     l1553:	
  3166                           
  3167                           ;main.c: 62:     while(num--) {
  3168  017B  3001               	movlw	1
  3169  017C  02F2               	subwf	LED_Red@num,f
  3170  017D  0A72               	incf	LED_Red@num,w
  3171  017E  1D03               	btfss	3,2
  3172  017F  2981               	goto	u361
  3173  0180  2982               	goto	u360
  3174  0181                     u361:	
  3175  0181  2967               	goto	l64
  3176  0182                     u360:	
  3177  0182                     l1555:	
  3178                           
  3179                           ;main.c: 68:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  3180  0182  3002               	movlw	2
  3181  0183  00F1               	movwf	??_LED_Red+1
  3182  0184  3045               	movlw	69
  3183  0185  00F0               	movwf	??_LED_Red
  3184  0186  30AA               	movlw	170
  3185  0187                     u637:	
  3186  0187  0B89               	decfsz	9,f
  3187  0188  2987               	goto	u637
  3188  0189  0BF0               	decfsz	??_LED_Red,f
  3189  018A  2987               	goto	u637
  3190  018B  0BF1               	decfsz	??_LED_Red+1,f
  3191  018C  2987               	goto	u637
  3192  018D                     l66:	
  3193  018D  0008               	return
  3194  018E                     __end_of_LED_Red:	
  3195                           
  3196                           	psect	text21
  3197  018E                     __ptext21:	
  3198 ;; *************** function _LED_Blue *****************
  3199 ;; Defined at:
  3200 ;;		line 71 in file "main.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  num             1    wreg     unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  num             1    2[COMMON] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMMON   BANK0   BANK1
  3214 ;;      Params:         0       0       0
  3215 ;;      Locals:         1       0       0
  3216 ;;      Temps:          2       0       0
  3217 ;;      Totals:         3       0       0
  3218 ;;Total ram usage:        3 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    1
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_WirelessPad
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           
  3229                           ;psect for function _LED_Blue
  3230  018E                     _LED_Blue:	
  3231                           
  3232                           ;incstack = 0
  3233                           ; Regs used in _LED_Blue: [wreg+status,2+status,0]
  3234                           ;LED_Blue@num stored from wreg
  3235  018E  00F2               	movwf	LED_Blue@num
  3236  018F                     l1557:	
  3237                           
  3238                           ;main.c: 72:     while(num--) {
  3239  018F  29A4               	goto	l1563
  3240  0190                     l70:	
  3241                           
  3242                           ;main.c: 73:         RC5 = 1;;
  3243  0190  0020               	movlb	0	; select bank0
  3244  0191  168E               	bsf	14,5	;volatile
  3245  0192                     l1559:	
  3246                           
  3247                           ;main.c: 74:         _delay((unsigned long)((200)*(1000000/4000.0)));
  3248  0192  3041               	movlw	65
  3249  0193  00F0               	movwf	??_LED_Blue
  3250  0194  30EE               	movlw	238
  3251  0195                     u647:	
  3252  0195  0B89               	decfsz	9,f
  3253  0196  2995               	goto	u647
  3254  0197  0BF0               	decfsz	??_LED_Blue,f
  3255  0198  2995               	goto	u647
  3256  0199  3200               	nop2
  3257  019A                     l1561:	
  3258                           
  3259                           ;main.c: 75:         RC5 = 0;
  3260  019A  0020               	movlb	0	; select bank0
  3261  019B  128E               	bcf	14,5	;volatile
  3262                           
  3263                           ;main.c: 76:         _delay((unsigned long)((200)*(1000000/4000.0)));
  3264  019C  3041               	movlw	65
  3265  019D  00F0               	movwf	??_LED_Blue
  3266  019E  30EE               	movlw	238
  3267  019F                     u657:	
  3268  019F  0B89               	decfsz	9,f
  3269  01A0  299F               	goto	u657
  3270  01A1  0BF0               	decfsz	??_LED_Blue,f
  3271  01A2  299F               	goto	u657
  3272  01A3  3200               	nop2
  3273  01A4                     l1563:	
  3274                           
  3275                           ;main.c: 72:     while(num--) {
  3276  01A4  3001               	movlw	1
  3277  01A5  02F2               	subwf	LED_Blue@num,f
  3278  01A6  0A72               	incf	LED_Blue@num,w
  3279  01A7  1D03               	btfss	3,2
  3280  01A8  29AA               	goto	u371
  3281  01A9  29AB               	goto	u370
  3282  01AA                     u371:	
  3283  01AA  2990               	goto	l70
  3284  01AB                     u370:	
  3285  01AB                     l1565:	
  3286                           
  3287                           ;main.c: 78:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  3288  01AB  3002               	movlw	2
  3289  01AC  00F1               	movwf	??_LED_Blue+1
  3290  01AD  3045               	movlw	69
  3291  01AE  00F0               	movwf	??_LED_Blue
  3292  01AF  30AA               	movlw	170
  3293  01B0                     u667:	
  3294  01B0  0B89               	decfsz	9,f
  3295  01B1  29B0               	goto	u667
  3296  01B2  0BF0               	decfsz	??_LED_Blue,f
  3297  01B3  29B0               	goto	u667
  3298  01B4  0BF1               	decfsz	??_LED_Blue+1,f
  3299  01B5  29B0               	goto	u667
  3300  01B6                     l72:	
  3301  01B6  0008               	return
  3302  01B7                     __end_of_LED_Blue:	
  3303                           
  3304                           	psect	text22
  3305  02D4                     __ptext22:	
  3306 ;; *************** function _PORT_Init *****************
  3307 ;; Defined at:
  3308 ;;		line 4 in file "../library/port.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1
  3322 ;;      Params:         0       0       0
  3323 ;;      Locals:         0       0       0
  3324 ;;      Temps:          0       0       0
  3325 ;;      Totals:         0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    2
  3329 ;; This function calls:
  3330 ;;		_PORTA_Init
  3331 ;;		_PORTC_Init
  3332 ;; This function is called by:
  3333 ;;		_main
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _PORT_Init
  3339  02D4                     _PORT_Init:	
  3340  02D4                     l1201:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
  3343                           
  3344                           
  3345                           ;../library/port.c: 5:     PORTA_Init();
  3346  02D4  3182  22CB  3182   	fcall	_PORTA_Init
  3347                           
  3348                           ;../library/port.c: 6:     PORTC_Init();
  3349  02D7  3182  22C2  3182   	fcall	_PORTC_Init
  3350  02DA                     l338:	
  3351  02DA  0008               	return
  3352  02DB                     __end_of_PORT_Init:	
  3353                           
  3354                           	psect	text23
  3355  02C2                     __ptext23:	
  3356 ;; *************** function _PORTC_Init *****************
  3357 ;; Defined at:
  3358 ;;		line 16 in file "../library/port.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		status,2
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1
  3372 ;;      Params:         0       0       0
  3373 ;;      Locals:         0       0       0
  3374 ;;      Temps:          0       0       0
  3375 ;;      Totals:         0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    1
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_PORT_Init
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _PORTC_Init
  3388  02C2                     _PORTC_Init:	
  3389  02C2                     l1199:	
  3390                           ;incstack = 0
  3391                           ; Regs used in _PORTC_Init: [status,2]
  3392                           
  3393                           
  3394                           ;../library/port.c: 17:     PORTC = 0;
  3395  02C2  0020               	movlb	0	; select bank0
  3396  02C3  018E               	clrf	14	;volatile
  3397                           
  3398                           ;../library/port.c: 18:     LATC = 0;
  3399  02C4  0022               	movlb	2	; select bank2
  3400  02C5  018E               	clrf	14	;volatile
  3401                           
  3402                           ;../library/port.c: 19:     ANSELC = 0;
  3403  02C6  0023               	movlb	3	; select bank3
  3404  02C7  018E               	clrf	14	;volatile
  3405                           
  3406                           ;../library/port.c: 20:     TRISC = 0;
  3407  02C8  0021               	movlb	1	; select bank1
  3408  02C9  018E               	clrf	14	;volatile
  3409  02CA                     l344:	
  3410  02CA  0008               	return
  3411  02CB                     __end_of_PORTC_Init:	
  3412                           
  3413                           	psect	text24
  3414  02CB                     __ptext24:	
  3415 ;; *************** function _PORTA_Init *****************
  3416 ;; Defined at:
  3417 ;;		line 9 in file "../library/port.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		status,2
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1
  3431 ;;      Params:         0       0       0
  3432 ;;      Locals:         0       0       0
  3433 ;;      Temps:          0       0       0
  3434 ;;      Totals:         0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used:    1
  3437 ;; Hardware stack levels required when called:    1
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_PORT_Init
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _PORTA_Init
  3447  02CB                     _PORTA_Init:	
  3448  02CB                     l1197:	
  3449                           ;incstack = 0
  3450                           ; Regs used in _PORTA_Init: [status,2]
  3451                           
  3452                           
  3453                           ;../library/port.c: 10:     PORTA = 0;
  3454  02CB  0020               	movlb	0	; select bank0
  3455  02CC  018C               	clrf	12	;volatile
  3456                           
  3457                           ;../library/port.c: 11:     LATA = 0;
  3458  02CD  0022               	movlb	2	; select bank2
  3459  02CE  018C               	clrf	12	;volatile
  3460                           
  3461                           ;../library/port.c: 12:     ANSELA = 0;
  3462  02CF  0023               	movlb	3	; select bank3
  3463  02D0  018C               	clrf	12	;volatile
  3464                           
  3465                           ;../library/port.c: 13:     TRISA = 0;
  3466  02D1  0021               	movlb	1	; select bank1
  3467  02D2  018C               	clrf	12	;volatile
  3468  02D3                     l341:	
  3469  02D3  0008               	return
  3470  02D4                     __end_of_PORTA_Init:	
  3471                           
  3472                           	psect	text25
  3473  02F5                     __ptext25:	
  3474 ;; *************** function _NRF_IRQ_Init *****************
  3475 ;; Defined at:
  3476 ;;		line 99 in file "main.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		None
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1
  3490 ;;      Params:         0       0       0
  3491 ;;      Locals:         0       0       0
  3492 ;;      Temps:          0       0       0
  3493 ;;      Totals:         0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _NRF_IRQ_Init
  3506  02F5                     _NRF_IRQ_Init:	
  3507  02F5                     l1203:	
  3508                           ;incstack = 0
  3509                           ; Regs used in _NRF_IRQ_Init: []
  3510                           
  3511                           
  3512                           ;main.c: 100:     TRISA4 = 1;
  3513  02F5  0021               	movlb	1	; select bank1
  3514  02F6  160C               	bsf	12,4	;volatile
  3515  02F7                     l83:	
  3516  02F7  0008               	return
  3517  02F8                     __end_of_NRF_IRQ_Init:	
  3518                           
  3519                           	psect	intentry
  3520  0004                     __pintentry:	
  3521 ;; *************** function _ISR *****************
  3522 ;; Defined at:
  3523 ;;		line 114 in file "main.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;		None
  3526 ;; Auto vars:     Size  Location     Type
  3527 ;;		None
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  1    wreg      void 
  3530 ;; Registers used:
  3531 ;;		None
  3532 ;; Tracked objects:
  3533 ;;		On entry : 0/0
  3534 ;;		On exit  : 0/0
  3535 ;;		Unchanged: 0/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1
  3537 ;;      Params:         0       0       0
  3538 ;;      Locals:         0       0       0
  3539 ;;      Temps:          0       0       0
  3540 ;;      Totals:         0       0       0
  3541 ;;Total ram usage:        0 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		Interrupt level 1
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550  0004                     _ISR:	
  3551                           
  3552                           ;incstack = 0
  3553  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3554                           
  3555                           ; Regs used in _ISR: []
  3556  0005  3180               	pagesel	$
  3557  0006                     i1l88:	
  3558  0006  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3559  0007  0009               	retfie
  3560  0008                     __end_of_ISR:	
  3561  007E                     btemp	set	126	;btemp
  3562  007E                     int$flags	set	126
  3563  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        45
    BSS         9
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      69
    BANK1            32      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    NRF_Rx_Set_P0@addr	PTR unsigned char  size(1) Largest target is 5
		 -> rx_addr_0(BANK0[5]), 

    NRF_Read_RX_Pload@pBuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_RxPacket@rxbuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_Write_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> RX_ADDRESS_P5(BANK0[5]), RX_ADDRESS_P4(BANK0[5]), RX_ADDRESS_P3(BANK0[5]), RX_ADDRESS_P2(BANK0[5]), 
		 -> RX_ADDRESS_P1(BANK0[5]), RX_ADDRESS_P0(BANK0[5]), NRF_Check@tuf(BANK0[5]), rx_addr_0(BANK0[5]), 

    NRF_Read_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> NRF_Check@buf(BANK0[5]), WirelessPad@rxbuf(BANK0[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 


Critical Paths under _main in COMMON

    _WirelessPad->_NRF_RxPacket
    _NRF_Rx_Set_P0->_NRF_Write_Buf
    _NRF_Rx_Set->_NRF_Write_Reg
    _NRF_RxPacket->_NRF_Read_RX_Pload
    _NRF_Read_RX_Pload->_NRF_Read_Buf
    _NRF_Get_Status->_NRF_Read_Reg
    _NRF_Read_Reg->_NRF_SPI_RW
    _NRF_Flush_RX->_NRF_Write_Reg
    _NRF_Clear_IRQ->_NRF_Write_Reg
    _NRF_Write_Reg->_NRF_SPI_RW
    _NRF_Check->_NRF_Read_Buf
    _NRF_Write_Buf->_NRF_SPI_RW
    _NRF_Read_Buf->_NRF_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WirelessPad
    _WirelessPad->_NRF_Check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23955
                       _NRF_IRQ_Init
                          _PORT_Init
                        _WirelessPad
 ---------------------------------------------------------------------------------
 (1) _WirelessPad                                          4     4      0   23955
                                             11 BANK0      4     4      0
                           _LED_Blue
                            _LED_Red
                          _NRF_Check
                      _NRF_Clear_IRQ
                             _NRF_On
                      _NRF_Port_Init
                       _NRF_RxPacket
                         _NRF_Rx_Set
                      _NRF_Rx_Set_P0
                       _NRF_SPI_Init
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _NRF_SPI_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set_P0                                        4     3      1    6214
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set                                           2     2      0    3249
                                              5 COMMON     2     2      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_RxPacket                                         3     3      0    7282
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                       _NRF_Flush_RX
                     _NRF_Get_Status
                  _NRF_Read_RX_Pload
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Read_RX_Pload                                    5     5      0     702
                                              8 COMMON     5     5      0
            _NRF_Get_Current_Pipenum
                       _NRF_Read_Buf
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Get_Current_Pipenum                              0     0      0      67
                     _NRF_Get_Status
 ---------------------------------------------------------------------------------
 (5) _NRF_Get_Status                                       0     0      0      67
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Reg                                         3     3      0      67
                                              1 COMMON     3     3      0
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _NRF_Flush_RX                                         0     0      0    3205
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Clear_IRQ                                        7     7      0    3281
                                              5 COMMON     4     4      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Reg                                        4     3      1    3205
                                              1 COMMON     4     3      1
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _NRF_Check                                           13    13      0    3508
                                              8 COMMON     2     2      0
                                              0 BANK0     11    11      0
                       _NRF_Read_Buf
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Buf                                        6     4      2    2856
                                              1 COMMON     6     4      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Buf                                         7     5      2     445
                                              1 COMMON     7     5      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_SPI_RW                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Red                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LED_Blue                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NRF_IRQ_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _NRF_IRQ_Init
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _WirelessPad
     _LED_Blue
     _LED_Red
     _NRF_Check
       _NRF_Read_Buf
         _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_Clear_IRQ
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_On
     _NRF_Port_Init
     _NRF_RxPacket
       _NRF_Flush_RX
         _NRF_Write_Reg
           _NRF_SPI_RW
       _NRF_Get_Status
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Read_RX_Pload
         _NRF_Get_Current_Pipenum
           _NRF_Get_Status
             _NRF_Read_Reg
               _NRF_SPI_RW
         _NRF_Read_Buf
           _NRF_SPI_RW
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set_P0
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_SPI_Init
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      53       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Aug 31 22:56:31 2019

      __size_of_NRF_Read_RX_Pload 001D                       __CFG_CP$OFF 0000                                l70 0190  
                              l72 01B6                                l64 0167                                l66 018D  
                              l83 02F7                                l77 029C                                l78 029C  
                              l97 0046                                l99 007E                                _RD 0CA8  
                              _WR 0CA9                    NRF_Check@F2717 0020                    NRF_Check@F2719 005C  
                     __CFG_LVP$ON 0000                               l201 02A4                               l210 028F  
                             l204 02AB                               l300 0253                               l221 021C  
                             l222 021E                               l215 01FB                               l207 027D  
                             l216 01FD                               l236 00E0                               l260 02E6  
                             l341 02D3                               l263 023B                               l344 02CA  
                             l192 02F4                               l272 02EC                               l257 0164  
                             l338 02DA                               l266 02F1                               l189 02B7  
                             l278 026B                               l198 02C1                               l297 01DA  
                             l993 010E                               _RA0 0060                               _RA2 0062  
                             _RA4 0064                               _RC0 0070                               _RA5 0065  
                             _RC1 0071                               _RC2 0072                               _RC4 0074  
                             _RC5 0075                               u400 00CC                               u401 00CB  
                             u330 02A9                               u410 00D7                               u331 02A8  
                             u411 00D6                               u340 01FB                               u420 00DD  
                             u500 0079                               u341 01FA                               u421 00DC  
                             u501 0078                               u350 021C                               u430 010E  
                             u351 021B                               u431 010D                               u360 0182  
                             u440 0146                               u361 0181                               u441 0145  
                             u370 01AB                               u450 0263                      __CFG_CPD$OFF 0000  
                             u371 01AA                               u451 0262                               u380 0096  
                             u460 0267                               _ISR 0004                               u461 0266  
                             u390 00A1                               u470 026B                               u471 026A  
                             u607 0086                               u480 003D                               u617 016C  
                             u481 003C                               u490 0064                               u627 0176  
                             u491 0063                               u637 0187                               u647 0195  
                             u657 019F                               u667 01B0                               u597 0031  
                    __CFG_BORV$LO 0000                               wreg 0009                      __CFG_IESO$ON 0000  
                      _TX_ADDRESS 0025                 NRF_Rx_Set_P0@addr 007A                              ?_ISR 0070  
                 __end_of_LED_Red 018E                              l1201 02D4                              l1203 02F5  
                            l1501 028C                              l1511 01E2                              l1503 028E  
                            l1513 01E4                              l1601 00D7                              l1515 01F1  
                            l1507 01DC                              l1531 020E                              l1523 01FF  
                            l1603 00DD                              l1611 01B8                              l1197 02CB  
                            l1517 01F5                              l1509 01DE                              l1533 0212  
                            l1525 0201                              l1541 023A                              l1613 01BA  
                            l1621 00E2                              l1199 02C2                              l1551 0171  
                            l1471 029F                              l1535 0216                              l1527 0205  
                            l1607 00DF                              l1519 02E1                              l1615 023D  
                            l1623 00EB                              l1631 0102                              l1561 019A  
                            l1553 017B                              l1473 02A1                              l1529 0207  
                            l1545 02E7                              l1481 026F                              l1537 0220  
                            l1641 0157                              l1633 013E                              l1617 023F  
                            l1625 00F3                              l1721 0293                              l1563 01A4  
                            l1555 0182                              l1547 0166                              l1475 02A9  
                            l1651 0254                              l1483 0273                              l1491 02ED  
                            l1539 022E                              l1643 015A                              l1635 013E  
                            l1619 024B                              l1571 02B8                              l1627 00F7  
                            l1723 0296                              l1565 01AB                              l1557 018F  
                            l1549 0169                              l1581 009A                              l1661 0267  
                            l1653 025F                              l1485 027A                              l1637 0146  
                            l1645 0161                              l1573 02BA                              l1629 00FE  
                            l1725 0299                              l1559 0192                              l1583 00A4  
                            l1495 027F                              l1663 026B                              l1655 0263  
                            l1567 02F2                              l1487 027C                              l1479 026D  
                            l1647 0163                              l1639 014F                              l1575 02BC  
                            l1671 0027                              l1719 0290                              l1593 00BE  
                            l1585 00B0                              l1497 0281                              l1657 0263  
                            l1569 02AC                              l1577 02BE                              l1681 0042  
                            l1673 002A                              l1587 00BC                              l1579 008C  
                            l1499 0288                              l1659 0267                              l1691 0065  
                            l1683 004A                              l1675 002D                              l1667 0021  
                            l1597 00CD                              l1693 0069                              l1685 0053  
                            l1677 0035                              l1669 0024                              l1599 00D1  
                            l1695 006C                              l1687 005F                              l1679 003D  
                            l1697 0079                              l1689 0064                              l1699 0082  
                            _LATA 010C                              _LATC 010E                              i1l88 0006  
                            _WREN 0CAA                      __CFG_WRT$OFF 0000                     __CFG_FCMEN$ON 0000  
                WirelessPad@F2711 0061                              _main 0290                              fsr0h 0005  
                            fsr1h 0007                              indf0 0000                              fsr0l 0004  
                            indf1 0001                              fsr1l 0006                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0008                  NRF_Write_Buf@len 0072  
                NRF_Write_Buf@reg 0075                     __CFG_MCLRE$ON 0000                  NRF_Write_Reg@reg 0073  
                           ??_ISR 0070                  WirelessPad@rxbuf 005A                     __CFG_PLLEN$ON 0000  
                __end_of_LED_Blue 01B7                       ?_NRF_SPI_RW 0070                      _tx_pad_chair 0302  
                     LED_Blue@num 0072                             ?_main 0070                             _EEADR 0191  
                   __CFG_WDTE$OFF 0000                             _EEPGD 0CAF                      _tx_pad_potty 02FE  
                           _PORTA 000C                             _PORTC 000E                             _TRISA 008C  
                           _TRISC 008E                __size_of_NRF_Check 0055                       ?_NRF_Rx_Set 0070  
         _NRF_Get_Current_Pipenum 02E1                       ?_PORTA_Init 0070                       ?_PORTC_Init 0070  
         __size_of_NRF_Get_Status 0005             NRF_Read_RX_Pload@pBuf 007B                __size_of_PORT_Init 0007  
           NRF_Read_RX_Pload@pipe 007C                             status 0003                             wtemp0 007E  
               NRF_Write_Buf@pBuf 0071                   __initialization 0009                      __end_of_main 029E  
                          ??_main 007E                     _RX_ADDRESS_P0 0043                     _RX_ADDRESS_P1 003E  
                   _RX_ADDRESS_P2 0039                     _RX_ADDRESS_P3 0034                     _RX_ADDRESS_P4 002F  
                   _RX_ADDRESS_P5 002A                         ??_LED_Red 0070             __end_of_NRF_Clear_IRQ 026C  
                          _EEDATA 0193                            _EECON2 0196                            _ANSELA 018C  
                          _ANSELC 018E                            _OSCCON 0099                            _NRF_On 02F2  
                          _SSP1IF 008B                            _TRISA0 0460                            _TRISA2 0462  
                          _TRISA4 0464                            _TRISC0 0470                            _TRISA5 0465  
                          _TRISC1 0471                            _TRISC2 0472               __size_of_NRF_SPI_RW 000E  
                  __CFG_PWRTE$OFF 0000                 __end_of_NRF_Check 00E1               __size_of_NRF_Rx_Set 0024  
             __size_of_PORTA_Init 0009               __size_of_PORTC_Init 0009                    __CFG_STVREN$ON 0000  
               __end_of_PORT_Init 02DB                            _memcpy 00E1         ??_NRF_Get_Current_Pipenum 0074  
          NRF_Read_RX_Pload@width 007A             __end_of_NRF_Rx_Set_P0 0254             __end_of_NRF_Port_Init 02B8  
         __end_of__initialization 001E                         ?_LED_Blue 0070                    __pcstackCOMMON 0070  
                    __pidataBANK0 010F             __end_of_NRF_Write_Buf 021F             __end_of_NRF_Write_Reg 0290  
              NRF_Write_Reg@value 0071                     ??_WirelessPad 0058                    _NRF_Get_Status 02ED  
                      __pbssBANK0 005C                           ?_NRF_On 0070                        ??_LED_Blue 0070  
                   ?_NRF_IRQ_Init 0070              NRF_Rx_Set_P0@buf_len 0077                        __pmaintext 0290  
                   ?_NRF_SPI_Init 0070                        __pintentry 0004                           ?_memcpy 0070  
                    ??_NRF_SPI_RW 0070            __end_of_NRF_Get_Status 02F2                           _LED_Red 0165  
                    ??_NRF_Rx_Set 0075                      ??_PORTA_Init 0070                      ??_PORTC_Init 0070  
                   ?_NRF_Flush_RX 0070                     ?_NRF_Read_Buf 0071                     ?_NRF_Read_Reg 0070  
                         _SSP1BUF 0211               __end_of_WirelessPad 008C                     ?_NRF_RxPacket 0070  
                  ??_NRF_IRQ_Init 0070                   __size_of_NRF_On 0003                        _pad_aux_ok 0306  
                      _pad_aux_on 02FA                __end_of_NRF_SPI_RW 02AC                    ??_NRF_SPI_Init 0070  
              __end_of_NRF_Rx_Set 01DB                __end_of_PORTA_Init 02D4                __end_of_PORTC_Init 02CB  
                 __size_of_memcpy 002E                           __ptext1 0021                           __ptext2 00E1  
                         __ptext3 02B8                           __ptext4 023C                           __ptext5 01B7  
                         __ptext6 013C                           __ptext7 021F                           __ptext8 02E1  
                         __ptext9 02ED                      __size_of_ISR 0004                   ?_NRF_Get_Status 0070  
                  ??_NRF_Flush_RX 0075                    ??_NRF_Read_Buf 0073                    ??_NRF_Read_Reg 0071  
            end_of_initialization 001E                    ??_NRF_RxPacket 007D                           memcpy@d 0079  
                         memcpy@n 0072                           memcpy@s 0075                           init_ram 02DB  
                         initloop 02DC                         _NRF_Check 008C                     NRF_SPI_RW@dat 0070  
                 NRF_Read_Buf@len 0072                   NRF_Read_Buf@reg 0076                         _PORT_Init 02D4  
                 NRF_Read_Reg@reg 0072                  __CFG_FOSC$INTOSC 0000                       _WirelessPad 0021  
                  NRF_Write_Buf@i 0076                        _tx_pad_bed 02FC                        _tx_pad_aux 0304  
                      _tx_pad_nci 0300                    __end_of_NRF_On 02F5                 __size_of_LED_Blue 0029  
          __size_of_NRF_Clear_IRQ 0018                        ?_NRF_Check 0070                        LED_Red@num 0072  
                  __end_of_memcpy 010F              __end_of_NRF_IRQ_Init 02F8                        ?_PORT_Init 0070  
             start_initialization 0009                       __end_of_ISR 0008              __end_of_NRF_SPI_Init 02C2  
              NRF_RxPacket@status 004E               NRF_Write_Reg@status 0074                          ??_NRF_On 0070  
            __end_of_NRF_Flush_RX 02ED              __end_of_NRF_Read_Buf 01FE              __end_of_NRF_Read_Reg 027E  
        ?_NRF_Get_Current_Pipenum 0070                       __pdataBANK0 0020            __size_of_NRF_Rx_Set_P0 0018  
                        ??_memcpy 0074              __end_of_NRF_RxPacket 0165            __size_of_NRF_Port_Init 000C  
                   NRF_Read_Buf@i 0077                          ?_LED_Red 0070                         ___latbits 0000  
                   __pcstackBANK0 004D                 NRF_Clear_IRQ@temp 0078                     _NRF_Clear_IRQ 0254  
          __size_of_NRF_Write_Buf 0021            __size_of_NRF_Write_Reg 0012               __end_of_pad_aux_off 02FA  
                     ??_NRF_Check 0078                  ??_NRF_Get_Status 0074                       ??_PORT_Init 0070  
                   NRF_Rx_Set@ack 0076                        NRF_Check@i 0057                    ?_NRF_Clear_IRQ 0070  
                   _NRF_Rx_Set_P0 023C                     _NRF_Port_Init 02AC                          _LED_Blue 018E  
 __end_of_NRF_Get_Current_Pipenum 02E7             __size_of_NRF_IRQ_Init 0003                          _SSP1CON1 0215  
                        _SSP1STAT 0214                     _NRF_Write_Buf 01FE                     _NRF_Write_Reg 027E  
                       _rx_addr_0 0048             __size_of_NRF_SPI_Init 000A                      NRF_Check@buf 0052  
                    NRF_Check@tuf 004D                      ?_WirelessPad 0070                  __size_of_LED_Red 0029  
                  ?_NRF_Rx_Set_P0 0077                    ?_NRF_Port_Init 0070                       _pad_aux_dat 0063  
                     _pad_aux_off 02F8             __size_of_NRF_Flush_RX 0006             __size_of_NRF_Read_Buf 0023  
                    _NRF_IRQ_Init 02F5             __size_of_NRF_Read_Reg 0012                 NRF_RxPacket@rxbuf 004D  
                       memcpy@tmp 0077             __size_of_NRF_RxPacket 0029                      _NRF_SPI_Init 02B8  
                  ?_NRF_Write_Buf 0071                    ?_NRF_Write_Reg 0071                 _NRF_Read_RX_Pload 021F  
              ?_NRF_Read_RX_Pload 0070                   ??_NRF_Clear_IRQ 0075                __end_of_pad_aux_ok 0308  
              __end_of_pad_aux_on 02FC               ??_NRF_Read_RX_Pload 0078                      _NRF_Flush_RX 02E7  
                        __ptext10 026C                          __ptext11 02E7                          __ptext20 0165  
                        __ptext12 02AC                          __ptext21 018E                          __ptext13 02F2  
                        __ptext22 02D4                          __ptext14 0254                          __ptext23 02C2  
                        __ptext15 027E                          __ptext24 02CB                          __ptext16 008C  
                        __ptext25 02F5                          __ptext17 01FE                          __ptext18 01DB  
                        __ptext19 029E                      _NRF_Read_Buf 01DB                      _NRF_Read_Reg 026C  
            __end_of_tx_pad_chair 0304                      _NRF_RxPacket 013C                     __size_of_main 000E  
            __end_of_tx_pad_potty 0300         __end_of_NRF_Read_RX_Pload 023C                          int$flags 007E  
                    _SSP1STATbits 0214                          memcpy@d1 0078                          memcpy@s1 0070  
                 ??_NRF_Rx_Set_P0 0078  __size_of_NRF_Get_Current_Pipenum 0006                   ??_NRF_Port_Init 0070  
                        intlevel1 0000                 __CFG_CLKOUTEN$OFF 0000                   ??_NRF_Write_Buf 0073  
                 ??_NRF_Write_Reg 0072                        _NRF_SPI_RW 029E                     __pstringtext1 02F8  
                   __pstringtext2 02FA                     __pstringtext3 02FC                     __pstringtext4 02FE  
                   __pstringtext5 0300                     __pstringtext6 0302                     __pstringtext7 0304  
                   __pstringtext8 0306                NRF_Read_Reg@status 0073                __end_of_tx_pad_bed 02FE  
              __end_of_tx_pad_aux 0306                __end_of_tx_pad_nci 0302                        _NRF_Rx_Set 01B7  
                      _PORTA_Init 02CB                        _PORTC_Init 02C2                  NRF_Read_Buf@pBuf 0071  
            __size_of_WirelessPad 006B  
