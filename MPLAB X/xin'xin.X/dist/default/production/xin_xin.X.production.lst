

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sun Aug 05 10:37:56 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.44
    24                           ; Generated 14/09/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F1823 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  008C                     	;# 
    85  008E                     	;# 
    86  0091                     	;# 
    87  0092                     	;# 
    88  0095                     	;# 
    89  0096                     	;# 
    90  0097                     	;# 
    91  0098                     	;# 
    92  0099                     	;# 
    93  009A                     	;# 
    94  009B                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  010C                     	;# 
   100  010E                     	;# 
   101  0111                     	;# 
   102  0112                     	;# 
   103  0113                     	;# 
   104  0114                     	;# 
   105  0115                     	;# 
   106  0116                     	;# 
   107  0117                     	;# 
   108  0118                     	;# 
   109  0119                     	;# 
   110  011A                     	;# 
   111  011B                     	;# 
   112  011D                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  018E                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019B                     	;# 
   129  019B                     	;# 
   130  019B                     	;# 
   131  019C                     	;# 
   132  019C                     	;# 
   133  019D                     	;# 
   134  019E                     	;# 
   135  019F                     	;# 
   136  020C                     	;# 
   137  020E                     	;# 
   138  0211                     	;# 
   139  0211                     	;# 
   140  0212                     	;# 
   141  0212                     	;# 
   142  0213                     	;# 
   143  0213                     	;# 
   144  0214                     	;# 
   145  0214                     	;# 
   146  0215                     	;# 
   147  0215                     	;# 
   148  0215                     	;# 
   149  0216                     	;# 
   150  0216                     	;# 
   151  0217                     	;# 
   152  0217                     	;# 
   153  0291                     	;# 
   154  0291                     	;# 
   155  0292                     	;# 
   156  0293                     	;# 
   157  0294                     	;# 
   158  0295                     	;# 
   159  0295                     	;# 
   160  0296                     	;# 
   161  0391                     	;# 
   162  0392                     	;# 
   163  0393                     	;# 
   164  039A                     	;# 
   165  039C                     	;# 
   166  039D                     	;# 
   167  039E                     	;# 
   168  039F                     	;# 
   169  0FE4                     	;# 
   170  0FE5                     	;# 
   171  0FE6                     	;# 
   172  0FE7                     	;# 
   173  0FE8                     	;# 
   174  0FE9                     	;# 
   175  0FEA                     	;# 
   176  0FEB                     	;# 
   177  0FED                     	;# 
   178  0FEE                     	;# 
   179  0FEF                     	;# 
   180                           
   181                           	psect	stringtext1
   182  0103                     __pstringtext1:	
   183  0103                     _Music_Encode:	
   184  0103  340F               	retlw	15
   185  0104  3401               	retlw	1
   186  0105  3415               	retlw	21
   187  0106  3402               	retlw	2
   188  0107  3416               	retlw	22
   189  0108  3402               	retlw	2
   190  0109  3417               	retlw	23
   191  010A  3466               	retlw	102
   192  010B  3418               	retlw	24
   193  010C  3403               	retlw	3
   194  010D  3417               	retlw	23
   195  010E  3402               	retlw	2
   196  010F  3415               	retlw	21
   197  0110  3402               	retlw	2
   198  0111  3416               	retlw	22
   199  0112  3401               	retlw	1
   200  0113  3415               	retlw	21
   201  0114  3402               	retlw	2
   202  0115  3410               	retlw	16
   203  0116  3402               	retlw	2
   204  0117  3415               	retlw	21
   205  0118  3400               	retlw	0
   206  0119  340F               	retlw	15
   207  011A  3401               	retlw	1
   208  011B  3415               	retlw	21
   209  011C  3402               	retlw	2
   210  011D  3416               	retlw	22
   211  011E  3402               	retlw	2
   212  011F  3417               	retlw	23
   213  0120  3402               	retlw	2
   214  0121  3417               	retlw	23
   215  0122  3403               	retlw	3
   216  0123  3418               	retlw	24
   217  0124  3403               	retlw	3
   218  0125  3419               	retlw	25
   219  0126  3402               	retlw	2
   220  0127  3415               	retlw	21
   221  0128  3402               	retlw	2
   222  0129  3418               	retlw	24
   223  012A  3466               	retlw	102
   224  012B  3417               	retlw	23
   225  012C  3403               	retlw	3
   226  012D  3419               	retlw	25
   227  012E  3402               	retlw	2
   228  012F  3416               	retlw	22
   229  0130  3403               	retlw	3
   230  0131  3417               	retlw	23
   231  0132  3403               	retlw	3
   232  0133  3416               	retlw	22
   233  0134  3400               	retlw	0
   234  0135  3400               	retlw	0
   235  0136  3400               	retlw	0
   236  0137                     __end_of_Music_Encode:	
   237                           
   238                           	psect	stringtext2
   239  0186                     __pstringtext2:	
   240  0186                     _LengthTab:	
   241  0186  3401               	retlw	1
   242  0187  3402               	retlw	2
   243  0188  3404               	retlw	4
   244  0189  3408               	retlw	8
   245  018A  3410               	retlw	16
   246  018B  3420               	retlw	32
   247  018C  3440               	retlw	64
   248  018D                     __end_of_LengthTab:	
   249                           
   250                           	psect	stringtext3
   251  018D                     __pstringtext3:	
   252  018D                     _SignTab:	
   253  018D  3400               	retlw	0
   254  018E  3402               	retlw	2
   255  018F  3404               	retlw	4
   256  0190  3405               	retlw	5
   257  0191  3407               	retlw	7
   258  0192  3409               	retlw	9
   259  0193  340B               	retlw	11
   260  0194                     __end_of_SignTab:	
   261                           
   262                           	psect	stringtext4
   263  0152                     __pstringtext4:	
   264  0152                     _FreTab:	
   265  0152  3406               	retlw	6
   266  0153  3401               	retlw	1
   267  0154  3415               	retlw	21
   268  0155  3401               	retlw	1
   269  0156  3426               	retlw	38
   270  0157  3401               	retlw	1
   271  0158  3437               	retlw	55
   272  0159  3401               	retlw	1
   273  015A  344A               	retlw	74
   274  015B  3401               	retlw	1
   275  015C  345D               	retlw	93
   276  015D  3401               	retlw	1
   277  015E  3471               	retlw	113
   278  015F  3401               	retlw	1
   279  0160  3488               	retlw	136
   280  0161  3401               	retlw	1
   281  0162  349F               	retlw	159
   282  0163  3401               	retlw	1
   283  0164  34B8               	retlw	184
   284  0165  3401               	retlw	1
   285  0166  34D2               	retlw	210
   286  0167  3401               	retlw	1
   287  0168  34EE               	retlw	238
   288  0169  3401               	retlw	1
   289  016A                     __end_of_FreTab:	
   290  000E                     _PORTC	set	14
   291  000C                     _PORTA	set	12
   292  0015                     _TMR0	set	21
   293  0016                     _TMR1L	set	22
   294  0017                     _TMR1H	set	23
   295  0075                     _RC5	set	117
   296  0088                     _TMR1IF	set	136
   297  005A                     _TMR0IF	set	90
   298  00C0                     _TMR1ON	set	192
   299  005D                     _TMR0IE	set	93
   300  005E                     _PEIE	set	94
   301  005F                     _GIE	set	95
   302  0099                     _OSCCON	set	153
   303  008E                     _TRISC	set	142
   304  008C                     _TRISA	set	140
   305  0095                     _OPTION_REG	set	149
   306  0475                     _TRISC5	set	1141
   307  0488                     _TMR1IE	set	1160
   308  010E                     _LATC	set	270
   309  010C                     _LATA	set	268
   310  018E                     _ANSELC	set	398
   311  018C                     _ANSELA	set	396
   312                           
   313                           ; #config settings
   314  0000                     
   315                           	psect	cinit
   316  0017                     start_initialization:	
   317  0017                     __initialization:	
   318                           
   319                           ; Clear objects allocated to COMMON
   320  0017  01FA               	clrf	__pbssCOMMON& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK0
   323  0018  0020               	movlb	0	; select bank0
   324  0019  01B3               	clrf	__pbssBANK0& (0+127)
   325  001A  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   326  001B  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   327  001C  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   328  001D                     end_of_initialization:	
   329                           ;End of C runtime variable initialization code
   330                           
   331  001D                     __end_of__initialization:	
   332  001D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   333  001E  0020               	movlb	0
   334  001F  28A2               	ljmp	_main	;jump to C main() function
   335                           
   336                           	psect	bssCOMMON
   337  007A                     __pbssCOMMON:	
   338  007A                     _Sound_Temp_TH0:	
   339  007A                     	ds	1
   340                           
   341                           	psect	bssBANK0
   342  0033                     __pbssBANK0:	
   343  0033                     _Sound_Temp_TL1:	
   344  0033                     	ds	1
   345  0034                     _Sound_Temp_TH1:	
   346  0034                     	ds	1
   347  0035                     _Sound_Temp_0:	
   348  0035                     	ds	1
   349  0036                     _Sound_Temp_TL0:	
   350  0036                     	ds	1
   351                           
   352                           	psect	cstackCOMMON
   353  0070                     __pcstackCOMMON:	
   354  0070                     ?_PORTA_Init:	
   355  0070                     ?_PORTC_Init:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_PORT_Init:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_TMR0_Init:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_main:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_isr:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_isr:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 1 bytes @ 0x0
   375  0070                     	ds	1
   376  0071                     ??_PORTA_Init:	
   377  0071                     ??_PORTC_Init:	
   378                           ; 1 bytes @ 0x1
   379                           
   380  0071                     ??_PORT_Init:	
   381                           ; 1 bytes @ 0x1
   382                           
   383  0071                     ??_TMR0_Init:	
   384                           ; 1 bytes @ 0x1
   385                           
   386  0071                     ?___wmul:	
   387                           ; 1 bytes @ 0x1
   388                           
   389  0071                     ___wmul@multiplier:	
   390                           ; 2 bytes @ 0x1
   391                           
   392                           
   393                           ; 2 bytes @ 0x1
   394  0071                     	ds	2
   395  0073                     ___wmul@multiplicand:	
   396                           
   397                           ; 2 bytes @ 0x3
   398  0073                     	ds	2
   399  0075                     ??___wmul:	
   400  0075                     ___wmul@product:	
   401                           ; 1 bytes @ 0x5
   402                           
   403                           
   404                           ; 2 bytes @ 0x5
   405  0075                     	ds	2
   406  0077                     ??___aldiv:	
   407                           
   408                           ; 1 bytes @ 0x7
   409  0077                     	ds	1
   410  0078                     main@i:	
   411                           
   412                           ; 2 bytes @ 0x8
   413  0078                     	ds	2
   414                           
   415                           	psect	cstackBANK0
   416  0020                     __pcstackBANK0:	
   417  0020                     ?___aldiv:	
   418  0020                     ___aldiv@divisor:	
   419                           ; 4 bytes @ 0x0
   420                           
   421                           
   422                           ; 4 bytes @ 0x0
   423  0020                     	ds	4
   424  0024                     ___aldiv@dividend:	
   425                           
   426                           ; 4 bytes @ 0x4
   427  0024                     	ds	4
   428  0028                     ___aldiv@counter:	
   429                           
   430                           ; 1 bytes @ 0x8
   431  0028                     	ds	1
   432  0029                     ___aldiv@sign:	
   433                           
   434                           ; 1 bytes @ 0x9
   435  0029                     	ds	1
   436  002A                     ___aldiv@quotient:	
   437                           
   438                           ; 4 bytes @ 0xA
   439  002A                     	ds	4
   440  002E                     ??_main:	
   441                           
   442                           ; 1 bytes @ 0xE
   443  002E                     	ds	5
   444                           
   445                           	psect	maintext
   446  00A2                     __pmaintext:	
   447 ;;
   448 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
   449 ;;
   450 ;; *************** function _main *****************
   451 ;; Defined at:
   452 ;;		line 238 in file "main.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;  i               2    8[COMMON] int 
   457 ;;  temp            2    0        unsigned int 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : B1F/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMMON   BANK0   BANK1
   467 ;;      Params:         0       0       0
   468 ;;      Locals:         2       0       0
   469 ;;      Temps:          0       5       0
   470 ;;      Totals:         2       5       0
   471 ;;Total ram usage:        7 bytes
   472 ;; Hardware stack levels required when called:    3
   473 ;; This function calls:
   474 ;;		_PORT_Init
   475 ;;		_TMR0_Init
   476 ;;		___aldiv
   477 ;;		___wmul
   478 ;; This function is called by:
   479 ;;		Startup code after reset
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           
   484                           ;psect for function _main
   485  00A2                     _main:	
   486                           
   487                           ;main.c: 239: OSCCON = 0X28;
   488                           
   489                           ;incstack = 0
   490                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   491  00A2  3028               	movlw	40
   492  00A3  0021               	movlb	1	; select bank1
   493  00A4  0099               	movwf	25	;volatile
   494                           
   495                           ;main.c: 241: unsigned temp;
   496                           ;main.c: 243: PORT_Init();
   497  00A5  2194               	fcall	_PORT_Init
   498                           
   499                           ;main.c: 244: TMR0_Init();
   500  00A6  216A               	fcall	_TMR0_Init
   501  00A7                     l1428:	
   502                           ;main.c: 249: while(1) {
   503                           
   504                           
   505                           ;main.c: 252: for(int i = 0; i < 12; i++) {
   506  00A7  01F8               	clrf	main@i
   507  00A8  01F9               	clrf	main@i+1
   508  00A9  0879               	movf	main@i+1,w
   509  00AA  3A80               	xorlw	128
   510  00AB  0020               	movlb	0	; select bank0
   511  00AC  00AE               	movwf	??_main
   512  00AD  3080               	movlw	128
   513  00AE  022E               	subwf	??_main,w
   514  00AF  1D03               	skipz
   515  00B0  28B3               	goto	u1565
   516  00B1  300C               	movlw	12
   517  00B2  0278               	subwf	main@i,w
   518  00B3                     u1565:	
   519  00B3  1803               	btfsc	3,0
   520  00B4  2901               	goto	l127
   521  00B5                     l1434:	
   522                           
   523                           ;main.c: 254: Sound_Temp_0 = 256-(125000/(4*(FreTab[i]*3)));
   524  00B5  300C               	movlw	12
   525  00B6  00F3               	movwf	___wmul@multiplicand
   526  00B7  3000               	movlw	0
   527  00B8  00F4               	movwf	___wmul@multiplicand+1
   528  00B9  0879               	movf	main@i+1,w
   529  00BA  0085               	movwf	5
   530  00BB  0878               	movf	main@i,w
   531  00BC  0084               	movwf	4
   532  00BD  3584               	lslf	4,f
   533  00BE  0D85               	rlf	5,f
   534  00BF  3052               	movlw	low (_FreTab| (0+32768))
   535  00C0  0784               	addwf	4,f
   536  00C1  3081               	movlw	high (_FreTab| (0+32768))
   537  00C2  3D85               	addwfc	5,f
   538  00C3  3F00               	moviw [0]fsr0
   539  00C4  00F1               	movwf	___wmul@multiplier
   540  00C5  3F01               	moviw [1]fsr0
   541  00C6  00F2               	movwf	___wmul@multiplier+1
   542  00C7  2137               	fcall	___wmul
   543  00C8  0871               	movf	?___wmul,w
   544  00C9  0020               	movlb	0	; select bank0
   545  00CA  00AE               	movwf	??_main
   546  00CB  0872               	movf	?___wmul+1,w
   547  00CC  00AF               	movwf	??_main+1
   548  00CD  01B0               	clrf	??_main+2
   549  00CE  01B1               	clrf	??_main+3
   550  00CF  0831               	movf	??_main+3,w
   551  00D0  00A3               	movwf	___aldiv@divisor+3
   552  00D1  0830               	movf	??_main+2,w
   553  00D2  00A2               	movwf	___aldiv@divisor+2
   554  00D3  082F               	movf	??_main+1,w
   555  00D4  00A1               	movwf	___aldiv@divisor+1
   556  00D5  082E               	movf	??_main,w
   557  00D6  00A0               	movwf	___aldiv@divisor
   558  00D7  3000               	movlw	0
   559  00D8  00A7               	movwf	___aldiv@dividend+3
   560  00D9  3001               	movlw	1
   561  00DA  00A6               	movwf	___aldiv@dividend+2
   562  00DB  30E8               	movlw	232
   563  00DC  00A5               	movwf	___aldiv@dividend+1
   564  00DD  3048               	movlw	72
   565  00DE  00A4               	movwf	___aldiv@dividend
   566  00DF  2020               	fcall	___aldiv
   567  00E0  0020               	movlb	0	; select bank0
   568  00E1  0320               	decf	?___aldiv,w
   569  00E2  3AFF               	xorlw	255
   570  00E3  00B2               	movwf	??_main+4
   571  00E4  0832               	movf	??_main+4,w
   572  00E5  00B5               	movwf	_Sound_Temp_0
   573                           
   574                           ;main.c: 255: TMR0 = Sound_Temp_0;
   575  00E6  0835               	movf	_Sound_Temp_0,w
   576  00E7  0095               	movwf	21	;volatile
   577                           
   578                           ;main.c: 256: _delay((unsigned long)((200)*(125000/4000.0)));
   579  00E8  3009               	movlw	9
   580  00E9  0020               	movlb	0	; select bank0
   581  00EA  00AE               	movwf	??_main
   582  00EB  301C               	movlw	28
   583  00EC                     u1587:	
   584  00EC  0B89               	decfsz	9,f
   585  00ED  28EC               	goto	u1587
   586  00EE  0BAE               	decfsz	??_main,f
   587  00EF  28EC               	goto	u1587
   588  00F0  0000               	nop
   589  00F1  3001               	movlw	1
   590  00F2  07F8               	addwf	main@i,f
   591  00F3  3000               	movlw	0
   592  00F4  3DF9               	addwfc	main@i+1,f
   593  00F5  0879               	movf	main@i+1,w
   594  00F6  3A80               	xorlw	128
   595  00F7  0020               	movlb	0	; select bank0
   596  00F8  00AE               	movwf	??_main
   597  00F9  3080               	movlw	128
   598  00FA  022E               	subwf	??_main,w
   599  00FB  1D03               	skipz
   600  00FC  28FF               	goto	u1575
   601  00FD  300C               	movlw	12
   602  00FE  0278               	subwf	main@i,w
   603  00FF                     u1575:	
   604  00FF  1C03               	skipc
   605  0100  28B5               	goto	l1434
   606  0101                     l127:	
   607                           
   608                           ;main.c: 257: }
   609                           ;main.c: 259: __nop();
   610  0101  0000               	nop
   611  0102  28A7               	goto	l1428
   612  0103                     __end_of_main:	
   613                           
   614                           	psect	text1
   615  0137                     __ptext1:	
   616 ;; *************** function ___wmul *****************
   617 ;; Defined at:
   618 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\Umul16.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;  multiplier      2    1[COMMON] unsigned int 
   621 ;;  multiplicand    2    3[COMMON] unsigned int 
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  product         2    5[COMMON] unsigned int 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  2    1[COMMON] unsigned int 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1
   633 ;;      Params:         4       0       0
   634 ;;      Locals:         2       0       0
   635 ;;      Temps:          0       0       0
   636 ;;      Totals:         6       0       0
   637 ;;Total ram usage:        6 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function ___wmul
   649  0137                     ___wmul:	
   650                           
   651                           ;incstack = 0
   652                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   653  0137  01F5               	clrf	___wmul@product
   654  0138  01F6               	clrf	___wmul@product+1
   655  0139                     l1232:	
   656  0139  1C71               	btfss	___wmul@multiplier,0
   657  013A  293F               	goto	l226
   658  013B  0873               	movf	___wmul@multiplicand,w
   659  013C  07F5               	addwf	___wmul@product,f
   660  013D  0874               	movf	___wmul@multiplicand+1,w
   661  013E  3DF6               	addwfc	___wmul@product+1,f
   662  013F                     l226:	
   663  013F  3001               	movlw	1
   664  0140                     u1165:	
   665  0140  35F3               	lslf	___wmul@multiplicand,f
   666  0141  0DF4               	rlf	___wmul@multiplicand+1,f
   667  0142  0B89               	decfsz	9,f
   668  0143  2940               	goto	u1165
   669  0144  3001               	movlw	1
   670  0145                     u1175:	
   671  0145  36F2               	lsrf	___wmul@multiplier+1,f
   672  0146  0CF1               	rrf	___wmul@multiplier,f
   673  0147  0B89               	decfsz	9,f
   674  0148  2945               	goto	u1175
   675  0149  0871               	movf	___wmul@multiplier,w
   676  014A  0472               	iorwf	___wmul@multiplier+1,w
   677  014B  1D03               	btfss	3,2
   678  014C  2939               	goto	l1232
   679  014D  0876               	movf	___wmul@product+1,w
   680  014E  00F2               	movwf	?___wmul+1
   681  014F  0875               	movf	___wmul@product,w
   682  0150  00F1               	movwf	?___wmul
   683  0151  0008               	return
   684  0152                     __end_of___wmul:	
   685                           
   686                           	psect	text2
   687  0020                     __ptext2:	
   688 ;; *************** function ___aldiv *****************
   689 ;; Defined at:
   690 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.44\sources\common\aldiv.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;  divisor         4    0[BANK0 ] long 
   693 ;;  dividend        4    4[BANK0 ] long 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  quotient        4   10[BANK0 ] long 
   696 ;;  sign            1    9[BANK0 ] unsigned char 
   697 ;;  counter         1    8[BANK0 ] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  4    0[BANK0 ] long 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1
   707 ;;      Params:         0       8       0
   708 ;;      Locals:         0       6       0
   709 ;;      Temps:          1       0       0
   710 ;;      Totals:         1      14       0
   711 ;;Total ram usage:       15 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;;		_Play
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function ___aldiv
   724  0020                     ___aldiv:	
   725                           
   726                           ;incstack = 0
   727                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   728  0020  0020               	movlb	0	; select bank0
   729  0021  01A9               	clrf	___aldiv@sign
   730  0022  1FA3               	btfss	___aldiv@divisor+3,7
   731  0023  2831               	goto	l281
   732  0024  09A0               	comf	___aldiv@divisor,f
   733  0025  09A1               	comf	___aldiv@divisor+1,f
   734  0026  09A2               	comf	___aldiv@divisor+2,f
   735  0027  09A3               	comf	___aldiv@divisor+3,f
   736  0028  0AA0               	incf	___aldiv@divisor,f
   737  0029  1903               	skipnz
   738  002A  0AA1               	incf	___aldiv@divisor+1,f
   739  002B  1903               	skipnz
   740  002C  0AA2               	incf	___aldiv@divisor+2,f
   741  002D  1903               	skipnz
   742  002E  0AA3               	incf	___aldiv@divisor+3,f
   743  002F  01A9               	clrf	___aldiv@sign
   744  0030  0AA9               	incf	___aldiv@sign,f
   745  0031                     l281:	
   746  0031  1FA7               	btfss	___aldiv@dividend+3,7
   747  0032  2842               	goto	l1254
   748  0033  09A4               	comf	___aldiv@dividend,f
   749  0034  09A5               	comf	___aldiv@dividend+1,f
   750  0035  09A6               	comf	___aldiv@dividend+2,f
   751  0036  09A7               	comf	___aldiv@dividend+3,f
   752  0037  0AA4               	incf	___aldiv@dividend,f
   753  0038  1903               	skipnz
   754  0039  0AA5               	incf	___aldiv@dividend+1,f
   755  003A  1903               	skipnz
   756  003B  0AA6               	incf	___aldiv@dividend+2,f
   757  003C  1903               	skipnz
   758  003D  0AA7               	incf	___aldiv@dividend+3,f
   759  003E  3001               	movlw	1
   760  003F  00F7               	movwf	??___aldiv
   761  0040  0877               	movf	??___aldiv,w
   762  0041  06A9               	xorwf	___aldiv@sign,f
   763  0042                     l1254:	
   764  0042  3000               	movlw	0
   765  0043  00AD               	movwf	___aldiv@quotient+3
   766  0044  3000               	movlw	0
   767  0045  00AC               	movwf	___aldiv@quotient+2
   768  0046  3000               	movlw	0
   769  0047  00AB               	movwf	___aldiv@quotient+1
   770  0048  3000               	movlw	0
   771  0049  00AA               	movwf	___aldiv@quotient
   772  004A  0823               	movf	___aldiv@divisor+3,w
   773  004B  0422               	iorwf	___aldiv@divisor+2,w
   774  004C  0421               	iorwf	___aldiv@divisor+1,w
   775  004D  0420               	iorwf	___aldiv@divisor,w
   776  004E  1903               	skipnz
   777  004F  288B               	goto	l1276
   778  0050  01A8               	clrf	___aldiv@counter
   779  0051  0AA8               	incf	___aldiv@counter,f
   780  0052                     l1262:	
   781  0052  1BA3               	btfsc	___aldiv@divisor+3,7
   782  0053  2860               	goto	l1264
   783  0054  3001               	movlw	1
   784  0055                     u1225:	
   785  0055  35A0               	lslf	___aldiv@divisor,f
   786  0056  0DA1               	rlf	___aldiv@divisor+1,f
   787  0057  0DA2               	rlf	___aldiv@divisor+2,f
   788  0058  0DA3               	rlf	___aldiv@divisor+3,f
   789  0059  0B89               	decfsz	9,f
   790  005A  2855               	goto	u1225
   791  005B  3001               	movlw	1
   792  005C  00F7               	movwf	??___aldiv
   793  005D  0877               	movf	??___aldiv,w
   794  005E  07A8               	addwf	___aldiv@counter,f
   795  005F  2852               	goto	l1262
   796  0060                     l1264:	
   797  0060  3001               	movlw	1
   798  0061                     u1245:	
   799  0061  35AA               	lslf	___aldiv@quotient,f
   800  0062  0DAB               	rlf	___aldiv@quotient+1,f
   801  0063  0DAC               	rlf	___aldiv@quotient+2,f
   802  0064  0DAD               	rlf	___aldiv@quotient+3,f
   803  0065  0B89               	decfsz	9,f
   804  0066  2861               	goto	u1245
   805  0067  0823               	movf	___aldiv@divisor+3,w
   806  0068  0227               	subwf	___aldiv@dividend+3,w
   807  0069  1D03               	skipz
   808  006A  2875               	goto	u1255
   809  006B  0822               	movf	___aldiv@divisor+2,w
   810  006C  0226               	subwf	___aldiv@dividend+2,w
   811  006D  1D03               	skipz
   812  006E  2875               	goto	u1255
   813  006F  0821               	movf	___aldiv@divisor+1,w
   814  0070  0225               	subwf	___aldiv@dividend+1,w
   815  0071  1D03               	skipz
   816  0072  2875               	goto	u1255
   817  0073  0820               	movf	___aldiv@divisor,w
   818  0074  0224               	subwf	___aldiv@dividend,w
   819  0075                     u1255:	
   820  0075  1C03               	skipc
   821  0076  2880               	goto	l1272
   822  0077  0820               	movf	___aldiv@divisor,w
   823  0078  02A4               	subwf	___aldiv@dividend,f
   824  0079  0821               	movf	___aldiv@divisor+1,w
   825  007A  3BA5               	subwfb	___aldiv@dividend+1,f
   826  007B  0822               	movf	___aldiv@divisor+2,w
   827  007C  3BA6               	subwfb	___aldiv@dividend+2,f
   828  007D  0823               	movf	___aldiv@divisor+3,w
   829  007E  3BA7               	subwfb	___aldiv@dividend+3,f
   830  007F  142A               	bsf	___aldiv@quotient,0
   831  0080                     l1272:	
   832  0080  3001               	movlw	1
   833  0081                     u1265:	
   834  0081  36A3               	lsrf	___aldiv@divisor+3,f
   835  0082  0CA2               	rrf	___aldiv@divisor+2,f
   836  0083  0CA1               	rrf	___aldiv@divisor+1,f
   837  0084  0CA0               	rrf	___aldiv@divisor,f
   838  0085  0B89               	decfsz	9,f
   839  0086  2881               	goto	u1265
   840  0087  3001               	movlw	1
   841  0088  02A8               	subwf	___aldiv@counter,f
   842  0089  1D03               	btfss	3,2
   843  008A  2860               	goto	l1264
   844  008B                     l1276:	
   845  008B  0829               	movf	___aldiv@sign,w
   846  008C  1903               	btfsc	3,2
   847  008D  2899               	goto	l1280
   848  008E  09AA               	comf	___aldiv@quotient,f
   849  008F  09AB               	comf	___aldiv@quotient+1,f
   850  0090  09AC               	comf	___aldiv@quotient+2,f
   851  0091  09AD               	comf	___aldiv@quotient+3,f
   852  0092  0AAA               	incf	___aldiv@quotient,f
   853  0093  1903               	skipnz
   854  0094  0AAB               	incf	___aldiv@quotient+1,f
   855  0095  1903               	skipnz
   856  0096  0AAC               	incf	___aldiv@quotient+2,f
   857  0097  1903               	skipnz
   858  0098  0AAD               	incf	___aldiv@quotient+3,f
   859  0099                     l1280:	
   860  0099  082D               	movf	___aldiv@quotient+3,w
   861  009A  00A3               	movwf	?___aldiv+3
   862  009B  082C               	movf	___aldiv@quotient+2,w
   863  009C  00A2               	movwf	?___aldiv+2
   864  009D  082B               	movf	___aldiv@quotient+1,w
   865  009E  00A1               	movwf	?___aldiv+1
   866  009F  082A               	movf	___aldiv@quotient,w
   867  00A0  00A0               	movwf	?___aldiv
   868  00A1  0008               	return
   869  00A2                     __end_of___aldiv:	
   870                           
   871                           	psect	text3
   872  016A                     __ptext3:	
   873 ;; *************** function _TMR0_Init *****************
   874 ;; Defined at:
   875 ;;		line 227 in file "main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1
   889 ;;      Params:         0       0       0
   890 ;;      Locals:         0       0       0
   891 ;;      Temps:          0       0       0
   892 ;;      Totals:         0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _TMR0_Init
   905  016A                     _TMR0_Init:	
   906                           
   907                           ;main.c: 228: GIE = 1;
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _TMR0_Init: [wreg+status,2]
   911  016A  178B               	bsf	11,7	;volatile
   912                           
   913                           ;main.c: 229: PEIE = 1;
   914  016B  170B               	bsf	11,6	;volatile
   915                           
   916                           ;main.c: 230: TMR0IE = 1;
   917  016C  168B               	bsf	11,5	;volatile
   918                           
   919                           ;main.c: 232: OPTION_REG = 0x88;
   920  016D  3088               	movlw	136
   921  016E  0021               	movlb	1	; select bank1
   922  016F  0095               	movwf	21	;volatile
   923                           
   924                           ;main.c: 234: TMR0IF = 0;
   925  0170  110B               	bcf	11,2	;volatile
   926                           
   927                           ;main.c: 235: TMR0 = 0;
   928  0171  0020               	movlb	0	; select bank0
   929  0172  0195               	clrf	21	;volatile
   930  0173  0008               	return
   931  0174                     __end_of_TMR0_Init:	
   932                           
   933                           	psect	text4
   934  0194                     __ptext4:	
   935 ;; *************** function _PORT_Init *****************
   936 ;; Defined at:
   937 ;;		line 222 in file "main.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;		None
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		status,2, status,0, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1
   951 ;;      Params:         0       0       0
   952 ;;      Locals:         0       0       0
   953 ;;      Temps:          0       0       0
   954 ;;      Totals:         0       0       0
   955 ;;Total ram usage:        0 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    2
   958 ;; This function calls:
   959 ;;		_PORTA_Init
   960 ;;		_PORTC_Init
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _PORT_Init
   968  0194                     _PORT_Init:	
   969                           
   970                           ;main.c: 223: PORTA_Init();
   971                           
   972                           ;incstack = 0
   973                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
   974  0194  217D               	fcall	_PORTA_Init
   975                           
   976                           ;main.c: 224: PORTC_Init();
   977  0195  2174               	fcall	_PORTC_Init
   978  0196  0008               	return
   979  0197                     __end_of_PORT_Init:	
   980                           
   981                           	psect	text5
   982  0174                     __ptext5:	
   983 ;; *************** function _PORTC_Init *****************
   984 ;; Defined at:
   985 ;;		line 215 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		status,2
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMMON   BANK0   BANK1
   999 ;;      Params:         0       0       0
  1000 ;;      Locals:         0       0       0
  1001 ;;      Temps:          0       0       0
  1002 ;;      Totals:         0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    1
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_PORT_Init
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           
  1014                           ;psect for function _PORTC_Init
  1015  0174                     _PORTC_Init:	
  1016                           
  1017                           ;main.c: 216: TRISC = 0;
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _PORTC_Init: [status,2]
  1021  0174  0021               	movlb	1	; select bank1
  1022  0175  018E               	clrf	14	;volatile
  1023                           
  1024                           ;main.c: 217: PORTC = 0;
  1025  0176  0020               	movlb	0	; select bank0
  1026  0177  018E               	clrf	14	;volatile
  1027                           
  1028                           ;main.c: 218: LATC = 0;
  1029  0178  0022               	movlb	2	; select bank2
  1030  0179  018E               	clrf	14	;volatile
  1031                           
  1032                           ;main.c: 219: ANSELC = 0;
  1033  017A  0023               	movlb	3	; select bank3
  1034  017B  018E               	clrf	14	;volatile
  1035  017C  0008               	return
  1036  017D                     __end_of_PORTC_Init:	
  1037                           
  1038                           	psect	text6
  1039  017D                     __ptext6:	
  1040 ;; *************** function _PORTA_Init *****************
  1041 ;; Defined at:
  1042 ;;		line 208 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		status,2
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1
  1056 ;;      Params:         0       0       0
  1057 ;;      Locals:         0       0       0
  1058 ;;      Temps:          0       0       0
  1059 ;;      Totals:         0       0       0
  1060 ;;Total ram usage:        0 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    1
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_PORT_Init
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _PORTA_Init
  1072  017D                     _PORTA_Init:	
  1073                           
  1074                           ;main.c: 209: TRISA = 0;
  1075                           
  1076                           ;incstack = 0
  1077                           ; Regs used in _PORTA_Init: [status,2]
  1078  017D  0021               	movlb	1	; select bank1
  1079  017E  018C               	clrf	12	;volatile
  1080                           
  1081                           ;main.c: 210: PORTA = 0;
  1082  017F  0020               	movlb	0	; select bank0
  1083  0180  018C               	clrf	12	;volatile
  1084                           
  1085                           ;main.c: 211: LATA = 0;
  1086  0181  0022               	movlb	2	; select bank2
  1087  0182  018C               	clrf	12	;volatile
  1088                           
  1089                           ;main.c: 212: ANSELA = 0;
  1090  0183  0023               	movlb	3	; select bank3
  1091  0184  018C               	clrf	12	;volatile
  1092  0185  0008               	return
  1093  0186                     __end_of_PORTA_Init:	
  1094                           
  1095                           	psect	intentry
  1096  0004                     __pintentry:	
  1097 ;; *************** function _isr *****************
  1098 ;; Defined at:
  1099 ;;		line 265 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1
  1113 ;;      Params:         0       0       0
  1114 ;;      Locals:         0       0       0
  1115 ;;      Temps:          1       0       0
  1116 ;;      Totals:         1       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		Interrupt level 1
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126  0004                     _isr:	
  1127                           
  1128                           ;incstack = 0
  1129  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1130                           
  1131                           ; Regs used in _isr: [wreg]
  1132  0005  3180               	pagesel	$
  1133  0006  0020               	movlb	0	; select bank0
  1134  0007  087F               	movf	127,w
  1135  0008  00F0               	movwf	??_isr
  1136                           
  1137                           ;main.c: 266: if(TMR0IF) {
  1138  0009  1D0B               	btfss	11,2	;volatile
  1139  000A  2812               	goto	i1l136
  1140                           
  1141                           ;main.c: 267: TRISC5 = !TRISC5;
  1142  000B  3020               	movlw	32
  1143  000C  0021               	movlb	1	; select bank1
  1144  000D  068E               	xorwf	14,f
  1145                           
  1146                           ;main.c: 268: TMR0IF = 0;
  1147  000E  110B               	bcf	11,2	;volatile
  1148                           
  1149                           ;main.c: 269: TMR0 = Sound_Temp_0;
  1150  000F  0020               	movlb	0	; select bank0
  1151  0010  0835               	movf	_Sound_Temp_0,w
  1152  0011  0095               	movwf	21	;volatile
  1153  0012                     i1l136:	
  1154  0012  0870               	movf	??_isr,w
  1155  0013  00FF               	movwf	127
  1156  0014  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1157  0015  0009               	retfie
  1158  0016                     __end_of_isr:	
  1159  007E                     btemp	set	126	;btemp
  1160  007E                     int$flags	set	126
  1161  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    90
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     19      23
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___aldiv
    ___aldiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1070
                                              8 COMMON     2     2      0
                                             14 BANK0      5     5      0
                          _PORT_Init
                          _TMR0_Init
                            ___aldiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     266
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     705
                                              7 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _TMR0_Init
   ___aldiv
     ___wmul (ARG)
   ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      22       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      17       6       28.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      22       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sun Aug 05 10:37:56 2018

            __CFG_CP$OFF 0000      ___wmul@multiplicand 0073                      l127 0101  
                    l226 013F                      l281 0031                      _GIE 005F  
                    _RC5 0075             __CFG_CPD$OFF 0000                      _isr 0004  
           __CFG_BORV$LO 0000                      wreg 0009             __CFG_LVP$OFF 0000  
                   l1232 0139                     l1262 0052                     l1254 0042  
                   l1280 0099                     l1272 0080                     l1264 0060  
                   l1434 00B5                     l1276 008B                     l1428 00A7  
                   ?_isr 0070                     u1225 0055                     u1245 0061  
                   u1165 0140                     _LATA 010C                     u1255 0075  
                   u1175 0145                     _LATC 010E                     u1265 0081  
                   u1565 00B3                     u1575 00FF                     u1587 00EC  
                   _PEIE 005E                     _TMR0 0015             __CFG_WRT$OFF 0000  
                   _main 00A2                     fsr0h 0005                     fsr0l 0004  
                   btemp 007E                     start 0016            __CFG_IESO$OFF 0000  
                  ??_isr 0070          __end_of_SignTab 0194          __end_of___aldiv 00A2  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    i1l136 0012  
                  _TMR1H 0017                    _TMR1L 0016                    _PORTA 000C  
                  _PORTC 000E                    _TRISA 008C                    _TRISC 008E  
            ?_PORTA_Init 0070           __CFG_FCMEN$OFF 0000              ?_PORTC_Init 0070  
     __size_of_TMR0_Init 000A       __size_of_PORT_Init 0003                    main@i 0078  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 0017             __end_of_main 0103  
                 ??_main 002E           __CFG_PLLEN$OFF 0000                   _ANSELA 018C  
                 _ANSELC 018E                   _OSCCON 0099                   _TMR0IE 005D  
                 _TMR0IF 005A                   _TMR1IE 0488                   _TMR1IF 0088  
                 _TMR1ON 00C0                   _TRISC5 0475                   _FreTab 0152  
         __CFG_PWRTE$OFF 0000      __size_of_PORTA_Init 0009      __size_of_PORTC_Init 0009  
      __end_of_TMR0_Init 0174                ??___aldiv 0077                   ___wmul 0137  
      __end_of_PORT_Init 0197  __end_of__initialization 001D           __pcstackCOMMON 0070  
      __end_of_LengthTab 018D               __pbssBANK0 0033               __pmaintext 00A2  
                ?___wmul 0071               __pintentry 0004             ??_PORTA_Init 0071  
           ??_PORTC_Init 0071                  _SignTab 018D                  ___aldiv 0020  
     __end_of_PORTA_Init 0186       __end_of_PORTC_Init 017D          __size_of___wmul 001B  
        __CFG_STVREN$OFF 0000                  __ptext1 0137                  __ptext2 0020  
                __ptext3 016A                  __ptext4 0194                  __ptext5 0174  
                __ptext6 017D             __size_of_isr 0012         ___aldiv@dividend 0024  
   end_of_initialization 001D         ___aldiv@quotient 002A                _TMR0_Init 016A  
              _PORT_Init 0194         __CFG_FOSC$INTOSC 0000           __end_of_FreTab 016A  
         __end_of___wmul 0152               ?_TMR0_Init 0070               ?_PORT_Init 0070  
    start_initialization 0017                _LengthTab 0186              __end_of_isr 0016  
   __end_of_Music_Encode 0137                 ??___wmul 0075              __pbssCOMMON 007A  
              ___latbits 0000            __pcstackBANK0 0020                 ?___aldiv 0020  
            ??_TMR0_Init 0071              ??_PORT_Init 0071          ___aldiv@divisor 0020  
        ___aldiv@counter 0028           ___wmul@product 0075        ___wmul@multiplier 0071  
       __size_of___aldiv 0082             _Music_Encode 0103            __size_of_main 0061  
               int$flags 007E                 intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
          __pstringtext1 0103            __pstringtext2 0186            __pstringtext3 018D  
          __pstringtext4 0152           _Sound_Temp_TH0 007A           _Sound_Temp_TH1 0034  
         _Sound_Temp_TL0 0036           _Sound_Temp_TL1 0033               _OPTION_REG 0095  
             _PORTA_Init 017D             ___aldiv@sign 0029               _PORTC_Init 0174  
           _Sound_Temp_0 0035  
