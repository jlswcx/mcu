

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 13 21:17:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.10
    45                           ; Generated 31/07/2019 GMT
    46                           ; 
    47                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F1823 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000E                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011D                     	;# 
   134  011D                     	;# 
   135  018C                     	;# 
   136  018E                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020C                     	;# 
   158  020E                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0295                     	;# 
   180  0295                     	;# 
   181  0296                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  039A                     	;# 
   186  039C                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0FE4                     	;# 
   191  0FE5                     	;# 
   192  0FE6                     	;# 
   193  0FE7                     	;# 
   194  0FE8                     	;# 
   195  0FE9                     	;# 
   196  0FEA                     	;# 
   197  0FEB                     	;# 
   198  0FED                     	;# 
   199  0FEE                     	;# 
   200  0FEF                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000E                     	;# 
   215  0011                     	;# 
   216  0012                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001E                     	;# 
   227  001F                     	;# 
   228  008C                     	;# 
   229  008E                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0095                     	;# 
   233  0096                     	;# 
   234  0097                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009A                     	;# 
   238  009B                     	;# 
   239  009B                     	;# 
   240  009C                     	;# 
   241  009D                     	;# 
   242  009E                     	;# 
   243  010C                     	;# 
   244  010E                     	;# 
   245  0111                     	;# 
   246  0112                     	;# 
   247  0113                     	;# 
   248  0114                     	;# 
   249  0115                     	;# 
   250  0116                     	;# 
   251  0117                     	;# 
   252  0118                     	;# 
   253  0119                     	;# 
   254  011A                     	;# 
   255  011B                     	;# 
   256  011D                     	;# 
   257  011D                     	;# 
   258  018C                     	;# 
   259  018E                     	;# 
   260  0191                     	;# 
   261  0191                     	;# 
   262  0192                     	;# 
   263  0193                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  0199                     	;# 
   270  019A                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019B                     	;# 
   275  019C                     	;# 
   276  019C                     	;# 
   277  019D                     	;# 
   278  019E                     	;# 
   279  019F                     	;# 
   280  020C                     	;# 
   281  020E                     	;# 
   282  0211                     	;# 
   283  0211                     	;# 
   284  0212                     	;# 
   285  0212                     	;# 
   286  0213                     	;# 
   287  0213                     	;# 
   288  0214                     	;# 
   289  0214                     	;# 
   290  0215                     	;# 
   291  0215                     	;# 
   292  0215                     	;# 
   293  0216                     	;# 
   294  0216                     	;# 
   295  0217                     	;# 
   296  0217                     	;# 
   297  0291                     	;# 
   298  0291                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0294                     	;# 
   302  0295                     	;# 
   303  0295                     	;# 
   304  0296                     	;# 
   305  0391                     	;# 
   306  0392                     	;# 
   307  0393                     	;# 
   308  039A                     	;# 
   309  039C                     	;# 
   310  039D                     	;# 
   311  039E                     	;# 
   312  039F                     	;# 
   313  0FE4                     	;# 
   314  0FE5                     	;# 
   315  0FE6                     	;# 
   316  0FE7                     	;# 
   317  0FE8                     	;# 
   318  0FE9                     	;# 
   319  0FEA                     	;# 
   320  0FEB                     	;# 
   321  0FED                     	;# 
   322  0FEE                     	;# 
   323  0FEF                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000E                     	;# 
   338  0011                     	;# 
   339  0012                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0016                     	;# 
   343  0017                     	;# 
   344  0018                     	;# 
   345  0019                     	;# 
   346  001A                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  008C                     	;# 
   352  008E                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  010C                     	;# 
   367  010E                     	;# 
   368  0111                     	;# 
   369  0112                     	;# 
   370  0113                     	;# 
   371  0114                     	;# 
   372  0115                     	;# 
   373  0116                     	;# 
   374  0117                     	;# 
   375  0118                     	;# 
   376  0119                     	;# 
   377  011A                     	;# 
   378  011B                     	;# 
   379  011D                     	;# 
   380  011D                     	;# 
   381  018C                     	;# 
   382  018E                     	;# 
   383  0191                     	;# 
   384  0191                     	;# 
   385  0192                     	;# 
   386  0193                     	;# 
   387  0193                     	;# 
   388  0193                     	;# 
   389  0194                     	;# 
   390  0195                     	;# 
   391  0196                     	;# 
   392  0199                     	;# 
   393  019A                     	;# 
   394  019B                     	;# 
   395  019B                     	;# 
   396  019B                     	;# 
   397  019B                     	;# 
   398  019C                     	;# 
   399  019C                     	;# 
   400  019D                     	;# 
   401  019E                     	;# 
   402  019F                     	;# 
   403  020C                     	;# 
   404  020E                     	;# 
   405  0211                     	;# 
   406  0211                     	;# 
   407  0212                     	;# 
   408  0212                     	;# 
   409  0213                     	;# 
   410  0213                     	;# 
   411  0214                     	;# 
   412  0214                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0216                     	;# 
   417  0216                     	;# 
   418  0217                     	;# 
   419  0217                     	;# 
   420  0291                     	;# 
   421  0291                     	;# 
   422  0292                     	;# 
   423  0293                     	;# 
   424  0294                     	;# 
   425  0295                     	;# 
   426  0295                     	;# 
   427  0296                     	;# 
   428  0391                     	;# 
   429  0392                     	;# 
   430  0393                     	;# 
   431  039A                     	;# 
   432  039C                     	;# 
   433  039D                     	;# 
   434  039E                     	;# 
   435  039F                     	;# 
   436  0FE4                     	;# 
   437  0FE5                     	;# 
   438  0FE6                     	;# 
   439  0FE7                     	;# 
   440  0FE8                     	;# 
   441  0FE9                     	;# 
   442  0FEA                     	;# 
   443  0FEB                     	;# 
   444  0FED                     	;# 
   445  0FEE                     	;# 
   446  0FEF                     	;# 
   447  0000                     	;# 
   448  0001                     	;# 
   449  0002                     	;# 
   450  0003                     	;# 
   451  0004                     	;# 
   452  0005                     	;# 
   453  0006                     	;# 
   454  0007                     	;# 
   455  0008                     	;# 
   456  0009                     	;# 
   457  000A                     	;# 
   458  000B                     	;# 
   459  000C                     	;# 
   460  000E                     	;# 
   461  0011                     	;# 
   462  0012                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  001A                     	;# 
   470  001B                     	;# 
   471  001C                     	;# 
   472  001E                     	;# 
   473  001F                     	;# 
   474  008C                     	;# 
   475  008E                     	;# 
   476  0091                     	;# 
   477  0092                     	;# 
   478  0095                     	;# 
   479  0096                     	;# 
   480  0097                     	;# 
   481  0098                     	;# 
   482  0099                     	;# 
   483  009A                     	;# 
   484  009B                     	;# 
   485  009B                     	;# 
   486  009C                     	;# 
   487  009D                     	;# 
   488  009E                     	;# 
   489  010C                     	;# 
   490  010E                     	;# 
   491  0111                     	;# 
   492  0112                     	;# 
   493  0113                     	;# 
   494  0114                     	;# 
   495  0115                     	;# 
   496  0116                     	;# 
   497  0117                     	;# 
   498  0118                     	;# 
   499  0119                     	;# 
   500  011A                     	;# 
   501  011B                     	;# 
   502  011D                     	;# 
   503  011D                     	;# 
   504  018C                     	;# 
   505  018E                     	;# 
   506  0191                     	;# 
   507  0191                     	;# 
   508  0192                     	;# 
   509  0193                     	;# 
   510  0193                     	;# 
   511  0193                     	;# 
   512  0194                     	;# 
   513  0195                     	;# 
   514  0196                     	;# 
   515  0199                     	;# 
   516  019A                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019B                     	;# 
   520  019B                     	;# 
   521  019C                     	;# 
   522  019C                     	;# 
   523  019D                     	;# 
   524  019E                     	;# 
   525  019F                     	;# 
   526  020C                     	;# 
   527  020E                     	;# 
   528  0211                     	;# 
   529  0211                     	;# 
   530  0212                     	;# 
   531  0212                     	;# 
   532  0213                     	;# 
   533  0213                     	;# 
   534  0214                     	;# 
   535  0214                     	;# 
   536  0215                     	;# 
   537  0215                     	;# 
   538  0215                     	;# 
   539  0216                     	;# 
   540  0216                     	;# 
   541  0217                     	;# 
   542  0217                     	;# 
   543  0291                     	;# 
   544  0291                     	;# 
   545  0292                     	;# 
   546  0293                     	;# 
   547  0294                     	;# 
   548  0295                     	;# 
   549  0295                     	;# 
   550  0296                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  039A                     	;# 
   555  039C                     	;# 
   556  039D                     	;# 
   557  039E                     	;# 
   558  039F                     	;# 
   559  0FE4                     	;# 
   560  0FE5                     	;# 
   561  0FE6                     	;# 
   562  0FE7                     	;# 
   563  0FE8                     	;# 
   564  0FE9                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEF                     	;# 
   570  0000                     	;# 
   571  0001                     	;# 
   572  0002                     	;# 
   573  0003                     	;# 
   574  0004                     	;# 
   575  0005                     	;# 
   576  0006                     	;# 
   577  0007                     	;# 
   578  0008                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000E                     	;# 
   584  0011                     	;# 
   585  0012                     	;# 
   586  0015                     	;# 
   587  0016                     	;# 
   588  0016                     	;# 
   589  0017                     	;# 
   590  0018                     	;# 
   591  0019                     	;# 
   592  001A                     	;# 
   593  001B                     	;# 
   594  001C                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008E                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0095                     	;# 
   602  0096                     	;# 
   603  0097                     	;# 
   604  0098                     	;# 
   605  0099                     	;# 
   606  009A                     	;# 
   607  009B                     	;# 
   608  009B                     	;# 
   609  009C                     	;# 
   610  009D                     	;# 
   611  009E                     	;# 
   612  010C                     	;# 
   613  010E                     	;# 
   614  0111                     	;# 
   615  0112                     	;# 
   616  0113                     	;# 
   617  0114                     	;# 
   618  0115                     	;# 
   619  0116                     	;# 
   620  0117                     	;# 
   621  0118                     	;# 
   622  0119                     	;# 
   623  011A                     	;# 
   624  011B                     	;# 
   625  011D                     	;# 
   626  011D                     	;# 
   627  018C                     	;# 
   628  018E                     	;# 
   629  0191                     	;# 
   630  0191                     	;# 
   631  0192                     	;# 
   632  0193                     	;# 
   633  0193                     	;# 
   634  0193                     	;# 
   635  0194                     	;# 
   636  0195                     	;# 
   637  0196                     	;# 
   638  0199                     	;# 
   639  019A                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019C                     	;# 
   645  019C                     	;# 
   646  019D                     	;# 
   647  019E                     	;# 
   648  019F                     	;# 
   649  020C                     	;# 
   650  020E                     	;# 
   651  0211                     	;# 
   652  0211                     	;# 
   653  0212                     	;# 
   654  0212                     	;# 
   655  0213                     	;# 
   656  0213                     	;# 
   657  0214                     	;# 
   658  0214                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0216                     	;# 
   664  0217                     	;# 
   665  0217                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0295                     	;# 
   672  0295                     	;# 
   673  0296                     	;# 
   674  0391                     	;# 
   675  0392                     	;# 
   676  0393                     	;# 
   677  039A                     	;# 
   678  039C                     	;# 
   679  039D                     	;# 
   680  039E                     	;# 
   681  039F                     	;# 
   682  0FE4                     	;# 
   683  0FE5                     	;# 
   684  0FE6                     	;# 
   685  0FE7                     	;# 
   686  0FE8                     	;# 
   687  0FE9                     	;# 
   688  0FEA                     	;# 
   689  0FEB                     	;# 
   690  0FED                     	;# 
   691  0FEE                     	;# 
   692  0FEF                     	;# 
   693  0000                     	;# 
   694  0001                     	;# 
   695  0002                     	;# 
   696  0003                     	;# 
   697  0004                     	;# 
   698  0005                     	;# 
   699  0006                     	;# 
   700  0007                     	;# 
   701  0008                     	;# 
   702  0009                     	;# 
   703  000A                     	;# 
   704  000B                     	;# 
   705  000C                     	;# 
   706  000E                     	;# 
   707  0011                     	;# 
   708  0012                     	;# 
   709  0015                     	;# 
   710  0016                     	;# 
   711  0016                     	;# 
   712  0017                     	;# 
   713  0018                     	;# 
   714  0019                     	;# 
   715  001A                     	;# 
   716  001B                     	;# 
   717  001C                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  008C                     	;# 
   721  008E                     	;# 
   722  0091                     	;# 
   723  0092                     	;# 
   724  0095                     	;# 
   725  0096                     	;# 
   726  0097                     	;# 
   727  0098                     	;# 
   728  0099                     	;# 
   729  009A                     	;# 
   730  009B                     	;# 
   731  009B                     	;# 
   732  009C                     	;# 
   733  009D                     	;# 
   734  009E                     	;# 
   735  010C                     	;# 
   736  010E                     	;# 
   737  0111                     	;# 
   738  0112                     	;# 
   739  0113                     	;# 
   740  0114                     	;# 
   741  0115                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0118                     	;# 
   745  0119                     	;# 
   746  011A                     	;# 
   747  011B                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  018C                     	;# 
   751  018E                     	;# 
   752  0191                     	;# 
   753  0191                     	;# 
   754  0192                     	;# 
   755  0193                     	;# 
   756  0193                     	;# 
   757  0193                     	;# 
   758  0194                     	;# 
   759  0195                     	;# 
   760  0196                     	;# 
   761  0199                     	;# 
   762  019A                     	;# 
   763  019B                     	;# 
   764  019B                     	;# 
   765  019B                     	;# 
   766  019B                     	;# 
   767  019C                     	;# 
   768  019C                     	;# 
   769  019D                     	;# 
   770  019E                     	;# 
   771  019F                     	;# 
   772  020C                     	;# 
   773  020E                     	;# 
   774  0211                     	;# 
   775  0211                     	;# 
   776  0212                     	;# 
   777  0212                     	;# 
   778  0213                     	;# 
   779  0213                     	;# 
   780  0214                     	;# 
   781  0214                     	;# 
   782  0215                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0216                     	;# 
   786  0216                     	;# 
   787  0217                     	;# 
   788  0217                     	;# 
   789  0291                     	;# 
   790  0291                     	;# 
   791  0292                     	;# 
   792  0293                     	;# 
   793  0294                     	;# 
   794  0295                     	;# 
   795  0295                     	;# 
   796  0296                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  0393                     	;# 
   800  039A                     	;# 
   801  039C                     	;# 
   802  039D                     	;# 
   803  039E                     	;# 
   804  039F                     	;# 
   805  0FE4                     	;# 
   806  0FE5                     	;# 
   807  0FE6                     	;# 
   808  0FE7                     	;# 
   809  0FE8                     	;# 
   810  0FE9                     	;# 
   811  0FEA                     	;# 
   812  0FEB                     	;# 
   813  0FED                     	;# 
   814  0FEE                     	;# 
   815  0FEF                     	;# 
   816                           
   817                           	psect	idataBANK0
   818  014E                     __pidataBANK0:	
   819                           
   820                           ;initializer for NRF_Check@F2718
   821  014E  34E1               	retlw	225
   822  014F  34E2               	retlw	226
   823  0150  34E3               	retlw	227
   824  0151  34E4               	retlw	228
   825  0152  3405               	retlw	5
   826                           
   827                           ;initializer for _TX_ADDRESS
   828  0153  340F               	retlw	15
   829  0154  340E               	retlw	14
   830  0155  340D               	retlw	13
   831  0156  340C               	retlw	12
   832  0157  340B               	retlw	11
   833                           
   834                           ;initializer for _tx_addr
   835  0158  340F               	retlw	15
   836  0159  340E               	retlw	14
   837  015A  340D               	retlw	13
   838  015B  340C               	retlw	12
   839  015C  340B               	retlw	11
   840                           
   841                           ;initializer for _RX_ADDRESS_P5
   842  015D  340E               	retlw	14
   843  015E  3410               	retlw	16
   844  015F  3409               	retlw	9
   845  0160  3408               	retlw	8
   846  0161  3407               	retlw	7
   847                           
   848                           ;initializer for _RX_ADDRESS_P4
   849  0162  340D               	retlw	13
   850  0163  3410               	retlw	16
   851  0164  3409               	retlw	9
   852  0165  3408               	retlw	8
   853  0166  3407               	retlw	7
   854                           
   855                           ;initializer for _RX_ADDRESS_P3
   856  0167  340C               	retlw	12
   857  0168  3410               	retlw	16
   858  0169  3409               	retlw	9
   859  016A  3408               	retlw	8
   860  016B  3407               	retlw	7
   861                           
   862                           ;initializer for _RX_ADDRESS_P2
   863  016C  340B               	retlw	11
   864  016D  3410               	retlw	16
   865  016E  3409               	retlw	9
   866  016F  3408               	retlw	8
   867  0170  3407               	retlw	7
   868                           
   869                           ;initializer for _RX_ADDRESS_P1
   870  0171  340A               	retlw	10
   871  0172  3410               	retlw	16
   872  0173  3409               	retlw	9
   873  0174  3408               	retlw	8
   874  0175  3407               	retlw	7
   875                           
   876                           ;initializer for _RX_ADDRESS_P0
   877  0176  340F               	retlw	15
   878  0177  340E               	retlw	14
   879  0178  340D               	retlw	13
   880  0179  340C               	retlw	12
   881  017A  340B               	retlw	11
   882                           
   883                           	psect	stringtext1
   884  027B                     __pstringtext1:	
   885  027B                     _pad_aux_off:	
   886  027B  3403               	retlw	3
   887  027C  3403               	retlw	3
   888  027D                     __end_of_pad_aux_off:	
   889                           
   890                           	psect	stringtext2
   891  027D                     __pstringtext2:	
   892  027D                     _pad_aux_on:	
   893  027D  3402               	retlw	2
   894  027E  3402               	retlw	2
   895  027F                     __end_of_pad_aux_on:	
   896                           
   897                           	psect	stringtext3
   898  027F                     __pstringtext3:	
   899  027F                     _tx_pad_bed:	
   900  027F  3498               	retlw	152
   901  0280  3458               	retlw	88
   902  0281                     __end_of_tx_pad_bed:	
   903                           
   904                           	psect	stringtext4
   905  0281                     __pstringtext4:	
   906  0281                     _tx_pad_potty:	
   907  0281  3488               	retlw	136
   908  0282  3468               	retlw	104
   909  0283                     __end_of_tx_pad_potty:	
   910                           
   911                           	psect	stringtext5
   912  0283                     __pstringtext5:	
   913  0283                     _tx_pad_nci:	
   914  0283  3486               	retlw	134
   915  0284  3466               	retlw	102
   916  0285                     __end_of_tx_pad_nci:	
   917                           
   918                           	psect	stringtext6
   919  0285                     __pstringtext6:	
   920  0285                     _tx_pad_chair:	
   921  0285  3468               	retlw	104
   922  0286  3486               	retlw	134
   923  0287                     __end_of_tx_pad_chair:	
   924                           
   925                           	psect	stringtext7
   926  0287                     __pstringtext7:	
   927  0287                     _tx_pad_aux:	
   928  0287  3466               	retlw	102
   929  0288  3488               	retlw	136
   930  0289                     __end_of_tx_pad_aux:	
   931                           
   932                           	psect	stringtext8
   933  028B                     __pstringtext8:	
   934  028B                     _pad_mode:	
   935  028B  3400               	retlw	0
   936  028C                     __end_of_pad_mode:	
   937                           
   938                           	psect	stringtext9
   939  0289                     __pstringtext9:	
   940  0289                     _pad_aux_ok:	
   941  0289  3401               	retlw	1
   942  028A  3401               	retlw	1
   943  028B                     __end_of_pad_aux_ok:	
   944  000E                     _PORTC	set	14
   945  000C                     _PORTA	set	12
   946  005B                     _IOCIE	set	91
   947  0058                     _IOCIF	set	88
   948  0064                     _RA4	set	100
   949  0073                     _RC3	set	115
   950  0072                     _RC2	set	114
   951  0070                     _RC0	set	112
   952  0071                     _RC1	set	113
   953  008B                     _SSP1IF	set	139
   954  0065                     _RA5	set	101
   955  0062                     _RA2	set	98
   956  0060                     _RA0	set	96
   957  0099                     _OSCCON	set	153
   958  008E                     _TRISC	set	142
   959  008C                     _TRISA	set	140
   960  0464                     _TRISA4	set	1124
   961  0473                     _TRISC3	set	1139
   962  0460                     _TRISA0	set	1120
   963  0462                     _TRISA2	set	1122
   964  0470                     _TRISC0	set	1136
   965  0472                     _TRISC2	set	1138
   966  0471                     _TRISC1	set	1137
   967  010E                     _LATC	set	270
   968  010C                     _LATA	set	268
   969  0191                     _EEADR	set	401
   970  018E                     _ANSELC	set	398
   971  018C                     _ANSELA	set	396
   972  0196                     _EECON2	set	406
   973  0193                     _EEDATA	set	403
   974  0CA8                     _RD	set	3240
   975  0CAA                     _WREN	set	3242
   976  0CAF                     _EEPGD	set	3247
   977  0CA9                     _WR	set	3241
   978  0215                     _SSP1CON1	set	533
   979  0211                     _SSP1BUF	set	529
   980  0214                     _SSP1STATbits	set	532
   981  0214                     _SSP1STAT	set	532
   982  1C9C                     _IOCAF4	set	7324
   983                           
   984                           ; #config settings
   985  0000                     
   986                           	psect	cinit
   987  0016                     start_initialization:	
   988  0016                     __initialization:	
   989                           
   990                           ; Initialize objects allocated to BANK0
   991  0016  304E               	movlw	low __pidataBANK0
   992  0017  0084               	movwf	4
   993  0018  3081               	movlw	(high __pidataBANK0)| (0+128)
   994  0019  0085               	movwf	5
   995  001A  3020               	movlw	low __pdataBANK0
   996  001B  0086               	movwf	6
   997  001C  3000               	movlw	high __pdataBANK0
   998  001D  0087               	movwf	7
   999  001E  302D               	movlw	45
  1000  001F  3182  2268  3180   	fcall	init_ram
  1001                           
  1002                           ; Clear objects allocated to COMMON
  1003  0022  01FC               	clrf	__pbssCOMMON& (0+127)
  1004  0023  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1005                           
  1006                           ; Clear objects allocated to BANK0
  1007  0024  01D8               	clrf	__pbssBANK0& (0+127)
  1008  0025  01D9               	clrf	(__pbssBANK0+1)& (0+127)
  1009  0026  01DA               	clrf	(__pbssBANK0+2)& (0+127)
  1010  0027  01DB               	clrf	(__pbssBANK0+3)& (0+127)
  1011  0028  01DC               	clrf	(__pbssBANK0+4)& (0+127)
  1012  0029                     end_of_initialization:	
  1013                           ;End of C runtime variable initialization code
  1014                           
  1015  0029                     __end_of__initialization:	
  1016  0029  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1017  002A  0020               	movlb	0
  1018  002B  2A1C               	ljmp	_main	;jump to C main() function
  1019                           
  1020                           	psect	bssCOMMON
  1021  007C                     __pbssCOMMON:	
  1022  007C                     _pad_aux_dat:	
  1023  007C                     	ds	2
  1024                           
  1025                           	psect	bssBANK0
  1026  0058                     __pbssBANK0:	
  1027  0058                     NRF_Check@F2720:	
  1028  0058                     	ds	5
  1029                           
  1030                           	psect	dataBANK0
  1031  0020                     __pdataBANK0:	
  1032  0020                     NRF_Check@F2718:	
  1033  0020                     	ds	5
  1034  0025                     _TX_ADDRESS:	
  1035  0025                     	ds	5
  1036  002A                     _tx_addr:	
  1037  002A                     	ds	5
  1038  002F                     _RX_ADDRESS_P5:	
  1039  002F                     	ds	5
  1040  0034                     _RX_ADDRESS_P4:	
  1041  0034                     	ds	5
  1042  0039                     _RX_ADDRESS_P3:	
  1043  0039                     	ds	5
  1044  003E                     _RX_ADDRESS_P2:	
  1045  003E                     	ds	5
  1046  0043                     _RX_ADDRESS_P1:	
  1047  0043                     	ds	5
  1048  0048                     _RX_ADDRESS_P0:	
  1049  0048                     	ds	5
  1050                           
  1051                           	psect	inittext
  1052  0268                     init_ram:	
  1053  0268  00FE               	movwf	btemp
  1054  0269                     initloop:	
  1055  0269  0012               	moviw fsr0++
  1056  026A  001E               	movwi fsr1++
  1057  026B  0BFE               	decfsz	btemp,f
  1058  026C  2A69               	goto	initloop
  1059  026D  3400               	retlw	0
  1060                           
  1061                           	psect	cstackCOMMON
  1062  0070                     __pcstackCOMMON:	
  1063  0070                     ?_NRF_Tx_CheckACK:	
  1064  0070                     ?_PORTA_Init:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ??_PORTA_Init:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_PORTC_Init:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ??_PORTC_Init:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_WirelessPad:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_memcpy:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?_NRF_Port_Init:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ??_NRF_Port_Init:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?_NRF_On:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ??_NRF_On:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?_NRF_SPI_Init:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ??_NRF_SPI_Init:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0070                     ?_NRF_SPI_RW:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103  0070                     ??_NRF_SPI_RW:	
  1104                           ; 1 bytes @ 0x0
  1105                           
  1106  0070                     ?_NRF_Read_Reg:	
  1107                           ; 1 bytes @ 0x0
  1108                           
  1109  0070                     ?_NRF_Check:	
  1110                           ; 1 bytes @ 0x0
  1111                           
  1112  0070                     ?_PORT_Init:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0070                     ??_PORT_Init:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0070                     ?_LED_Init:	
  1119                           ; 1 bytes @ 0x0
  1120                           
  1121  0070                     ??_LED_Init:	
  1122                           ; 1 bytes @ 0x0
  1123                           
  1124  0070                     ?_Key_Init:	
  1125                           ; 1 bytes @ 0x0
  1126                           
  1127  0070                     ??_Key_Init:	
  1128                           ; 1 bytes @ 0x0
  1129                           
  1130  0070                     ?_ISR:	
  1131                           ; 1 bytes @ 0x0
  1132                           
  1133  0070                     ??_ISR:	
  1134                           ; 1 bytes @ 0x0
  1135                           
  1136  0070                     ?_main:	
  1137                           ; 1 bytes @ 0x0
  1138                           
  1139  0070                     NRF_SPI_RW@dat:	
  1140                           ; 1 bytes @ 0x0
  1141                           
  1142  0070                     memcpy@s1:	
  1143                           ; 1 bytes @ 0x0
  1144                           
  1145                           
  1146                           ; 2 bytes @ 0x0
  1147  0070                     	ds	1
  1148  0071                     ??_NRF_Read_Reg:	
  1149  0071                     ?_NRF_Write_Reg:	
  1150                           ; 1 bytes @ 0x1
  1151                           
  1152  0071                     ?_NRF_Read_Buf:	
  1153                           ; 1 bytes @ 0x1
  1154                           
  1155  0071                     ?_NRF_Write_Buf:	
  1156                           ; 1 bytes @ 0x1
  1157                           
  1158  0071                     NRF_Write_Reg@value:	
  1159                           ; 1 bytes @ 0x1
  1160                           
  1161  0071                     NRF_Read_Buf@pBuf:	
  1162                           ; 1 bytes @ 0x1
  1163                           
  1164  0071                     NRF_Write_Buf@pBuf:	
  1165                           ; 1 bytes @ 0x1
  1166                           
  1167                           
  1168                           ; 1 bytes @ 0x1
  1169  0071                     	ds	1
  1170  0072                     ??_NRF_Write_Reg:	
  1171  0072                     NRF_Read_Reg@reg:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174  0072                     NRF_Read_Buf@len:	
  1175                           ; 1 bytes @ 0x2
  1176                           
  1177  0072                     NRF_Write_Buf@len:	
  1178                           ; 1 bytes @ 0x2
  1179                           
  1180  0072                     memcpy@n:	
  1181                           ; 1 bytes @ 0x2
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x2
  1185  0072                     	ds	1
  1186  0073                     ??_NRF_Read_Buf:	
  1187  0073                     ??_NRF_Write_Buf:	
  1188                           ; 1 bytes @ 0x3
  1189                           
  1190  0073                     NRF_Read_Reg@status:	
  1191                           ; 1 bytes @ 0x3
  1192                           
  1193  0073                     NRF_Write_Reg@reg:	
  1194                           ; 1 bytes @ 0x3
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0x3
  1198  0073                     	ds	1
  1199  0074                     ??_memcpy:	
  1200  0074                     NRF_Write_Reg@status:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203                           
  1204                           ; 1 bytes @ 0x4
  1205  0074                     	ds	1
  1206  0075                     ??_NRF_Tx_CheckACK:	
  1207  0075                     NRF_Write_Buf@reg:	
  1208                           ; 1 bytes @ 0x5
  1209                           
  1210  0075                     memcpy@s:	
  1211                           ; 1 bytes @ 0x5
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x5
  1215  0075                     	ds	1
  1216  0076                     NRF_Read_Buf@reg:	
  1217  0076                     NRF_Write_Buf@i:	
  1218                           ; 1 bytes @ 0x6
  1219                           
  1220  0076                     NRF_Tx_CheckACK@sta:	
  1221                           ; 1 bytes @ 0x6
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x6
  1225  0076                     	ds	1
  1226  0077                     ?_NRF_Tx_Set:	
  1227  0077                     ?_NRF_Tx_Send:	
  1228                           ; 1 bytes @ 0x7
  1229                           
  1230  0077                     NRF_Read_Buf@i:	
  1231                           ; 1 bytes @ 0x7
  1232                           
  1233  0077                     NRF_Tx_Set@ack:	
  1234                           ; 1 bytes @ 0x7
  1235                           
  1236  0077                     NRF_Tx_Send@len:	
  1237                           ; 1 bytes @ 0x7
  1238                           
  1239  0077                     memcpy@tmp:	
  1240                           ; 1 bytes @ 0x7
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x7
  1244  0077                     	ds	1
  1245  0078                     ??_NRF_Check:	
  1246  0078                     ??_NRF_Tx_Set:	
  1247                           ; 1 bytes @ 0x8
  1248                           
  1249  0078                     ??_NRF_Tx_Send:	
  1250                           ; 1 bytes @ 0x8
  1251                           
  1252  0078                     memcpy@d1:	
  1253                           ; 1 bytes @ 0x8
  1254                           
  1255                           
  1256                           ; 1 bytes @ 0x8
  1257  0078                     	ds	1
  1258  0079                     memcpy@d:	
  1259                           
  1260                           ; 1 bytes @ 0x9
  1261  0079                     	ds	1
  1262  007A                     NRF_Tx_Set@addr:	
  1263  007A                     NRF_Tx_Send@txbuf:	
  1264                           ; 1 bytes @ 0xA
  1265                           
  1266                           
  1267                           ; 1 bytes @ 0xA
  1268  007A                     	ds	1
  1269  007B                     ??_WirelessPad:	
  1270                           
  1271                           ; 1 bytes @ 0xB
  1272  007B                     	ds	1
  1273  007C                     ??_main:	
  1274                           
  1275                           	psect	cstackBANK0
  1276  004D                     __pcstackBANK0:	
  1277                           ; 1 bytes @ 0xC
  1278                           
  1279  004D                     NRF_Check@tuf:	
  1280                           
  1281                           ; 5 bytes @ 0x0
  1282  004D                     	ds	5
  1283  0052                     NRF_Check@buf:	
  1284                           
  1285                           ; 5 bytes @ 0x5
  1286  0052                     	ds	5
  1287  0057                     NRF_Check@i:	
  1288                           
  1289                           ; 1 bytes @ 0xA
  1290  0057                     	ds	1
  1291                           
  1292                           	psect	maintext
  1293  021C                     __pmaintext:	
  1294 ;;
  1295 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1296 ;;
  1297 ;; *************** function _main *****************
  1298 ;; Defined at:
  1299 ;;		line 100 in file "main.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : B1F/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1
  1313 ;;      Params:         0       0       0
  1314 ;;      Locals:         0       0       0
  1315 ;;      Temps:          0       0       0
  1316 ;;      Totals:         0       0       0
  1317 ;;Total ram usage:        0 bytes
  1318 ;; Hardware stack levels required when called:    6
  1319 ;; This function calls:
  1320 ;;		_Key_Init
  1321 ;;		_LED_Init
  1322 ;;		_PORT_Init
  1323 ;;		_WirelessPad
  1324 ;; This function is called by:
  1325 ;;		Startup code after reset
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           
  1330                           ;psect for function _main
  1331  021C                     _main:	
  1332  021C                     l1814:	
  1333                           ;incstack = 0
  1334                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1335                           
  1336                           
  1337                           ;main.c: 102:     OSCCON = 0X28;
  1338  021C  3028               	movlw	40
  1339  021D  0021               	movlb	1	; select bank1
  1340  021E  0099               	movwf	25	;volatile
  1341  021F                     l1816:	
  1342                           
  1343                           ;main.c: 104:     PORT_Init();
  1344  021F  3182  2261  3182   	fcall	_PORT_Init
  1345  0222                     l1818:	
  1346                           
  1347                           ;main.c: 106:     LED_Init();
  1348  0222  3182  226E  3182   	fcall	_LED_Init
  1349  0225                     l1820:	
  1350                           
  1351                           ;main.c: 108:     Key_Init();
  1352  0225  3182  2273  3182   	fcall	_Key_Init
  1353  0228                     l1822:	
  1354                           
  1355                           ;main.c: 112:     WirelessPad();
  1356  0228  3180  202C  3182   	fcall	_WirelessPad
  1357  022B                     l361:	
  1358                           ;main.c: 116:     while(1);
  1359                           
  1360  022B                     l362:	
  1361  022B  2A2B               	goto	l361
  1362  022C  2815               	ljmp	start
  1363  022D                     __end_of_main:	
  1364                           
  1365                           	psect	text1
  1366  002C                     __ptext1:	
  1367 ;; *************** function _WirelessPad *****************
  1368 ;; Defined at:
  1369 ;;		line 119 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1
  1383 ;;      Params:         0       0       0
  1384 ;;      Locals:         0       0       0
  1385 ;;      Temps:          1       0       0
  1386 ;;      Totals:         1       0       0
  1387 ;;Total ram usage:        1 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    5
  1390 ;; This function calls:
  1391 ;;		_NRF_Check
  1392 ;;		_NRF_On
  1393 ;;		_NRF_Port_Init
  1394 ;;		_NRF_SPI_Init
  1395 ;;		_NRF_Tx_Send
  1396 ;;		_NRF_Tx_Set
  1397 ;;		_memcpy
  1398 ;; This function is called by:
  1399 ;;		_main
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _WirelessPad
  1405  002C                     _WirelessPad:	
  1406  002C                     l1630:	
  1407                           ;incstack = 0
  1408                           ; Regs used in _WirelessPad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1409                           
  1410                           
  1411                           ;main.c: 121:     NRF_On();
  1412  002C  3182  2278  3180   	fcall	_NRF_On
  1413                           
  1414                           ;main.c: 122:     NRF_Port_Init();
  1415  002F  3182  2245  3180   	fcall	_NRF_Port_Init
  1416  0032                     l1632:	
  1417                           
  1418                           ;main.c: 123:     NRF_SPI_Init();
  1419  0032  3182  223B  3180   	fcall	_NRF_SPI_Init
  1420                           
  1421                           ;main.c: 125:     _delay((unsigned long)((500)*(125000/4000.0)));
  1422  0035  3015               	movlw	21
  1423  0036  00FB               	movwf	??_WirelessPad
  1424  0037  3049               	movlw	73
  1425  0038                     u567:	
  1426  0038  0B89               	decfsz	9,f
  1427  0039  2838               	goto	u567
  1428  003A  0BFB               	decfsz	??_WirelessPad,f
  1429  003B  2838               	goto	u567
  1430  003C  3200               	nop2
  1431  003D                     l1634:	
  1432                           
  1433                           ;main.c: 127:     if(NRF_Check()) {
  1434  003D  3180  2081  3180   	fcall	_NRF_Check
  1435  0040  3A00               	xorlw	0
  1436  0041  1903               	skipnz
  1437  0042  2844               	goto	u461
  1438  0043  2845               	goto	u460
  1439  0044                     u461:	
  1440  0044  285A               	goto	l1640
  1441  0045                     u460:	
  1442  0045                     l368:	
  1443                           ;main.c: 128:         while(1) {
  1444                           
  1445                           
  1446                           ;main.c: 129:             RC3 = 0;
  1447  0045  0020               	movlb	0	; select bank0
  1448  0046  118E               	bcf	14,3	;volatile
  1449  0047                     l1636:	
  1450                           
  1451                           ;main.c: 130:             _delay((unsigned long)((100)*(125000/4000.0)));
  1452  0047  3005               	movlw	5
  1453  0048  00FB               	movwf	??_WirelessPad
  1454  0049  300D               	movlw	13
  1455  004A                     u577:	
  1456  004A  0B89               	decfsz	9,f
  1457  004B  284A               	goto	u577
  1458  004C  0BFB               	decfsz	??_WirelessPad,f
  1459  004D  284A               	goto	u577
  1460  004E  3200               	nop2
  1461  004F                     l1638:	
  1462                           
  1463                           ;main.c: 131:             RC3 = 1;
  1464  004F  0020               	movlb	0	; select bank0
  1465  0050  158E               	bsf	14,3	;volatile
  1466                           
  1467                           ;main.c: 132:             _delay((unsigned long)((100)*(125000/4000.0)));
  1468  0051  3005               	movlw	5
  1469  0052  00FB               	movwf	??_WirelessPad
  1470  0053  300D               	movlw	13
  1471  0054                     u587:	
  1472  0054  0B89               	decfsz	9,f
  1473  0055  2854               	goto	u587
  1474  0056  0BFB               	decfsz	??_WirelessPad,f
  1475  0057  2854               	goto	u587
  1476  0058  3200               	nop2
  1477  0059  2845               	goto	l368
  1478  005A                     l1640:	
  1479                           
  1480                           ;main.c: 136:     memcpy(pad_aux_dat, pad_aux_ok, 2);
  1481  005A  3089               	movlw	low (_pad_aux_ok| (0+32768))
  1482  005B  00F0               	movwf	memcpy@s1
  1483  005C  3082               	movlw	high (_pad_aux_ok| (0+32768))
  1484  005D  00F1               	movwf	memcpy@s1+1
  1485  005E  3002               	movlw	2
  1486  005F  00F2               	movwf	memcpy@n
  1487  0060  3000               	movlw	0
  1488  0061  00F3               	movwf	memcpy@n+1
  1489  0062  307C               	movlw	(low (_pad_aux_dat| 0))& (0+255)
  1490  0063  3181  2120  3180   	fcall	_memcpy
  1491  0066                     l1642:	
  1492                           
  1493                           ;main.c: 138:     NRF_Tx_Set(tx_addr, 0x00);
  1494  0066  01F7               	clrf	NRF_Tx_Set@ack
  1495  0067  302A               	movlw	(low (_tx_addr| 0))& (0+255)
  1496  0068  3180  20D6  3180   	fcall	_NRF_Tx_Set
  1497  006B                     l1644:	
  1498                           
  1499                           ;main.c: 142:         if(RA4 == 1) {
  1500  006B  0020               	movlb	0	; select bank0
  1501  006C  1E0C               	btfss	12,4	;volatile
  1502  006D  286F               	goto	u471
  1503  006E  2870               	goto	u470
  1504  006F                     u471:	
  1505  006F  287E               	goto	l372
  1506  0070                     u470:	
  1507  0070                     l1646:	
  1508                           
  1509                           ;main.c: 143:             RC3 = 0;
  1510  0070  118E               	bcf	14,3	;volatile
  1511  0071                     l1648:	
  1512                           
  1513                           ;main.c: 145:             NRF_Tx_Send(pad_aux_dat, 2);
  1514  0071  3002               	movlw	2
  1515  0072  00FB               	movwf	??_WirelessPad
  1516  0073  087B               	movf	??_WirelessPad,w
  1517  0074  00F7               	movwf	NRF_Tx_Send@len
  1518  0075  307C               	movlw	(low (_pad_aux_dat| 0))& (0+255)
  1519  0076  3181  21DE  3180   	fcall	_NRF_Tx_Send
  1520  0079                     l1650:	
  1521                           
  1522                           ;main.c: 146:             _delay((unsigned long)((1)*(125000/4000.0)));
  1523  0079  300A               	movlw	10
  1524  007A                     u597:	
  1525  007A  0B89               	decfsz	9,f
  1526  007B  287A               	goto	u597
  1527  007C  0000               	nop
  1528                           
  1529                           ;main.c: 147:         }else {
  1530  007D  286B               	goto	l1644
  1531  007E                     l372:	
  1532                           
  1533                           ;main.c: 148:             RC3 = 1;
  1534  007E  158E               	bsf	14,3	;volatile
  1535  007F  2879               	goto	l1650
  1536  0080  0008               	return
  1537  0081                     __end_of_WirelessPad:	
  1538                           
  1539                           	psect	text2
  1540  0120                     __ptext2:	
  1541 ;; *************** function _memcpy *****************
  1542 ;; Defined at:
  1543 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  d1              1    wreg     PTR void 
  1546 ;;		 -> pad_aux_dat(2), 
  1547 ;;  s1              2    0[COMMON] PTR const void 
  1548 ;;		 -> pad_aux_ok(2), 
  1549 ;;  n               2    2[COMMON] unsigned int 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  d1              1    8[COMMON] PTR void 
  1552 ;;		 -> pad_aux_dat(2), 
  1553 ;;  s               2    5[COMMON] PTR const unsigned char 
  1554 ;;		 -> pad_aux_ok(2), 
  1555 ;;  d               1    9[COMMON] PTR unsigned char 
  1556 ;;		 -> pad_aux_dat(2), 
  1557 ;;  tmp             1    7[COMMON] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      PTR void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1
  1567 ;;      Params:         4       0       0
  1568 ;;      Locals:         5       0       0
  1569 ;;      Temps:          1       0       0
  1570 ;;      Totals:        10       0       0
  1571 ;;Total ram usage:       10 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; Hardware stack levels required when called:    1
  1574 ;; This function calls:
  1575 ;;		Nothing
  1576 ;; This function is called by:
  1577 ;;		_WirelessPad
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           
  1582                           ;psect for function _memcpy
  1583  0120                     _memcpy:	
  1584                           
  1585                           ;incstack = 0
  1586                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  1587                           ;memcpy@d1 stored from wreg
  1588  0120  00F8               	movwf	memcpy@d1
  1589  0121                     l1596:	
  1590  0121  0871               	movf	memcpy@s1+1,w
  1591  0122  00F6               	movwf	memcpy@s+1
  1592  0123  0870               	movf	memcpy@s1,w
  1593  0124  00F5               	movwf	memcpy@s
  1594  0125  0878               	movf	memcpy@d1,w
  1595  0126  00F4               	movwf	??_memcpy
  1596  0127  0874               	movf	??_memcpy,w
  1597  0128  00F9               	movwf	memcpy@d
  1598  0129  2941               	goto	l1606
  1599  012A                     l1598:	
  1600  012A  0875               	movf	memcpy@s,w
  1601  012B  0084               	movwf	4
  1602  012C  0876               	movf	memcpy@s+1,w
  1603  012D  0085               	movwf	5
  1604  012E  0800               	movf	0,w	;code access
  1605  012F  00F4               	movwf	??_memcpy
  1606  0130  0874               	movf	??_memcpy,w
  1607  0131  00F7               	movwf	memcpy@tmp
  1608  0132                     l1600:	
  1609  0132  3001               	movlw	1
  1610  0133  07F5               	addwf	memcpy@s,f
  1611  0134  3000               	movlw	0
  1612  0135  3DF6               	addwfc	memcpy@s+1,f
  1613  0136                     l1602:	
  1614  0136  0877               	movf	memcpy@tmp,w
  1615  0137  00F4               	movwf	??_memcpy
  1616  0138  0879               	movf	memcpy@d,w
  1617  0139  0086               	movwf	6
  1618  013A  0187               	clrf	7
  1619  013B  0874               	movf	??_memcpy,w
  1620  013C  0081               	movwf	1
  1621  013D                     l1604:	
  1622  013D  3001               	movlw	1
  1623  013E  00F4               	movwf	??_memcpy
  1624  013F  0874               	movf	??_memcpy,w
  1625  0140  07F9               	addwf	memcpy@d,f
  1626  0141                     l1606:	
  1627  0141  3001               	movlw	1
  1628  0142  02F2               	subwf	memcpy@n,f
  1629  0143  3000               	movlw	0
  1630  0144  3BF3               	subwfb	memcpy@n+1,f
  1631  0145  0A72               	incf	memcpy@n,w
  1632  0146  1D03               	skipz
  1633  0147  294C               	goto	u451
  1634  0148  0A73               	incf	memcpy@n+1,w
  1635  0149  1D03               	btfss	3,2
  1636  014A  294C               	goto	u451
  1637  014B  294D               	goto	u450
  1638  014C                     u451:	
  1639  014C  292A               	goto	l1598
  1640  014D                     u450:	
  1641  014D                     l982:	
  1642  014D  0008               	return
  1643  014E                     __end_of_memcpy:	
  1644                           
  1645                           	psect	text3
  1646  00D6                     __ptext3:	
  1647 ;; *************** function _NRF_Tx_Set *****************
  1648 ;; Defined at:
  1649 ;;		line 363 in file "../library/nrf24l01.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  addr            1    wreg     PTR unsigned char 
  1652 ;;		 -> tx_addr(5), 
  1653 ;;  ack             1    7[COMMON] unsigned char 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  addr            1   10[COMMON] PTR unsigned char 
  1656 ;;		 -> tx_addr(5), 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMMON   BANK0   BANK1
  1666 ;;      Params:         1       0       0
  1667 ;;      Locals:         1       0       0
  1668 ;;      Temps:          2       0       0
  1669 ;;      Totals:         4       0       0
  1670 ;;Total ram usage:        4 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		_NRF_Write_Buf
  1675 ;;		_NRF_Write_Reg
  1676 ;; This function is called by:
  1677 ;;		_WirelessPad
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _NRF_Tx_Set
  1683  00D6                     _NRF_Tx_Set:	
  1684                           
  1685                           ;incstack = 0
  1686                           ; Regs used in _NRF_Tx_Set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1687                           ;NRF_Tx_Set@addr stored from wreg
  1688  00D6  00FA               	movwf	NRF_Tx_Set@addr
  1689  00D7                     l1570:	
  1690                           
  1691                           ;../library/nrf24l01.c: 364:     RA0 = 0;
  1692  00D7  0020               	movlb	0	; select bank0
  1693  00D8  100C               	bcf	12,0	;volatile
  1694  00D9                     l1572:	
  1695                           
  1696                           ;../library/nrf24l01.c: 365:     NRF_Write_Buf(0x20 + 0x10, addr, 5);
  1697  00D9  087A               	movf	NRF_Tx_Set@addr,w
  1698  00DA  00F8               	movwf	??_NRF_Tx_Set
  1699  00DB  0878               	movf	??_NRF_Tx_Set,w
  1700  00DC  00F1               	movwf	NRF_Write_Buf@pBuf
  1701  00DD  3005               	movlw	5
  1702  00DE  00F9               	movwf	??_NRF_Tx_Set+1
  1703  00DF  0879               	movf	??_NRF_Tx_Set+1,w
  1704  00E0  00F2               	movwf	NRF_Write_Buf@len
  1705  00E1  3030               	movlw	48
  1706  00E2  3181  219E  3180   	fcall	_NRF_Write_Buf
  1707                           
  1708                           ;../library/nrf24l01.c: 366:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  1709  00E5  087A               	movf	NRF_Tx_Set@addr,w
  1710  00E6  00F8               	movwf	??_NRF_Tx_Set
  1711  00E7  0878               	movf	??_NRF_Tx_Set,w
  1712  00E8  00F1               	movwf	NRF_Write_Buf@pBuf
  1713  00E9  3005               	movlw	5
  1714  00EA  00F9               	movwf	??_NRF_Tx_Set+1
  1715  00EB  0879               	movf	??_NRF_Tx_Set+1,w
  1716  00EC  00F2               	movwf	NRF_Write_Buf@len
  1717  00ED  302A               	movlw	42
  1718  00EE  3181  219E  3180   	fcall	_NRF_Write_Buf
  1719  00F1                     l1574:	
  1720                           
  1721                           ;../library/nrf24l01.c: 367:     NRF_Write_Reg(0x20 + 0x01, ack);
  1722  00F1  0877               	movf	NRF_Tx_Set@ack,w
  1723  00F2  00F8               	movwf	??_NRF_Tx_Set
  1724  00F3  0878               	movf	??_NRF_Tx_Set,w
  1725  00F4  00F1               	movwf	NRF_Write_Reg@value
  1726  00F5  3021               	movlw	33
  1727  00F6  3181  21F8  3180   	fcall	_NRF_Write_Reg
  1728  00F9                     l1576:	
  1729                           
  1730                           ;../library/nrf24l01.c: 369:     NRF_Write_Reg(0x20 + 0x02, 0x01);
  1731  00F9  01F1               	clrf	NRF_Write_Reg@value
  1732  00FA  0AF1               	incf	NRF_Write_Reg@value,f
  1733  00FB  3022               	movlw	34
  1734  00FC  3181  21F8  3180   	fcall	_NRF_Write_Reg
  1735  00FF                     l1578:	
  1736                           
  1737                           ;../library/nrf24l01.c: 370:     NRF_Write_Reg(0x20 + 0x04, 0x1a);
  1738  00FF  301A               	movlw	26
  1739  0100  00F8               	movwf	??_NRF_Tx_Set
  1740  0101  0878               	movf	??_NRF_Tx_Set,w
  1741  0102  00F1               	movwf	NRF_Write_Reg@value
  1742  0103  3024               	movlw	36
  1743  0104  3181  21F8  3180   	fcall	_NRF_Write_Reg
  1744  0107                     l1580:	
  1745                           
  1746                           ;../library/nrf24l01.c: 371:     NRF_Write_Reg(0x20 + 0x05, 40);
  1747  0107  3028               	movlw	40
  1748  0108  00F8               	movwf	??_NRF_Tx_Set
  1749  0109  0878               	movf	??_NRF_Tx_Set,w
  1750  010A  00F1               	movwf	NRF_Write_Reg@value
  1751  010B  3025               	movlw	37
  1752  010C  3181  21F8  3180   	fcall	_NRF_Write_Reg
  1753  010F                     l1582:	
  1754                           
  1755                           ;../library/nrf24l01.c: 372:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  1756  010F  300F               	movlw	15
  1757  0110  00F8               	movwf	??_NRF_Tx_Set
  1758  0111  0878               	movf	??_NRF_Tx_Set,w
  1759  0112  00F1               	movwf	NRF_Write_Reg@value
  1760  0113  3026               	movlw	38
  1761  0114  3181  21F8  3180   	fcall	_NRF_Write_Reg
  1762  0117                     l1584:	
  1763                           
  1764                           ;../library/nrf24l01.c: 373:     NRF_Write_Reg(0x20 + 0x00, 0x0e);
  1765  0117  300E               	movlw	14
  1766  0118  00F8               	movwf	??_NRF_Tx_Set
  1767  0119  0878               	movf	??_NRF_Tx_Set,w
  1768  011A  00F1               	movwf	NRF_Write_Reg@value
  1769  011B  3020               	movlw	32
  1770  011C  3181  21F8  3180   	fcall	_NRF_Write_Reg
  1771  011F                     l173:	
  1772  011F  0008               	return
  1773  0120                     __end_of_NRF_Tx_Set:	
  1774                           
  1775                           	psect	text4
  1776  01DE                     __ptext4:	
  1777 ;; *************** function _NRF_Tx_Send *****************
  1778 ;; Defined at:
  1779 ;;		line 376 in file "../library/nrf24l01.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  txbuf           1    wreg     PTR unsigned char 
  1782 ;;		 -> pad_aux_dat(2), 
  1783 ;;  len             1    7[COMMON] unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  txbuf           1   10[COMMON] PTR unsigned char 
  1786 ;;		 -> pad_aux_dat(2), 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      void 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1
  1796 ;;      Params:         1       0       0
  1797 ;;      Locals:         1       0       0
  1798 ;;      Temps:          2       0       0
  1799 ;;      Totals:         4       0       0
  1800 ;;Total ram usage:        4 bytes
  1801 ;; Hardware stack levels used:    1
  1802 ;; Hardware stack levels required when called:    4
  1803 ;; This function calls:
  1804 ;;		_NRF_Tx_CheckACK
  1805 ;;		_NRF_Write_Buf
  1806 ;; This function is called by:
  1807 ;;		_WirelessPad
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _NRF_Tx_Send
  1813  01DE                     _NRF_Tx_Send:	
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _NRF_Tx_Send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1817                           ;NRF_Tx_Send@txbuf stored from wreg
  1818  01DE  00FA               	movwf	NRF_Tx_Send@txbuf
  1819  01DF                     l1586:	
  1820                           
  1821                           ;../library/nrf24l01.c: 377:     RA0 = 0;
  1822  01DF  0020               	movlb	0	; select bank0
  1823  01E0  100C               	bcf	12,0	;volatile
  1824  01E1                     l1588:	
  1825                           
  1826                           ;../library/nrf24l01.c: 378:     NRF_Write_Buf(0xA0, txbuf, len);
  1827  01E1  087A               	movf	NRF_Tx_Send@txbuf,w
  1828  01E2  00F8               	movwf	??_NRF_Tx_Send
  1829  01E3  0878               	movf	??_NRF_Tx_Send,w
  1830  01E4  00F1               	movwf	NRF_Write_Buf@pBuf
  1831  01E5  0877               	movf	NRF_Tx_Send@len,w
  1832  01E6  00F9               	movwf	??_NRF_Tx_Send+1
  1833  01E7  0879               	movf	??_NRF_Tx_Send+1,w
  1834  01E8  00F2               	movwf	NRF_Write_Buf@len
  1835  01E9  30A0               	movlw	160
  1836  01EA  3181  219E  3181   	fcall	_NRF_Write_Buf
  1837  01ED                     l1590:	
  1838                           
  1839                           ;../library/nrf24l01.c: 379:     RA0 = 1;
  1840  01ED  0020               	movlb	0	; select bank0
  1841  01EE  140C               	bsf	12,0	;volatile
  1842  01EF                     l1592:	
  1843  01EF                     l1594:	
  1844                           ;../library/nrf24l01.c: 380:     _delay((unsigned long)((10)*(125000/4000000.0)));
  1845                           ;../library/nrf24l01.c: 381:     while(NRF_Tx_CheckACK());
  1846                           
  1847  01EF  3181  21BF  3181   	fcall	_NRF_Tx_CheckACK
  1848  01F2  3A00               	xorlw	0
  1849  01F3  1D03               	skipz
  1850  01F4  29F6               	goto	u441
  1851  01F5  29F7               	goto	u440
  1852  01F6                     u441:	
  1853  01F6  29EF               	goto	l1594
  1854  01F7                     u440:	
  1855  01F7                     l179:	
  1856  01F7  0008               	return
  1857  01F8                     __end_of_NRF_Tx_Send:	
  1858                           
  1859                           	psect	text5
  1860  01BF                     __ptext5:	
  1861 ;; *************** function _NRF_Tx_CheckACK *****************
  1862 ;; Defined at:
  1863 ;;		line 384 in file "../library/nrf24l01.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  sta             1    6[COMMON] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      unsigned char 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1
  1877 ;;      Params:         0       0       0
  1878 ;;      Locals:         1       0       0
  1879 ;;      Temps:          1       0       0
  1880 ;;      Totals:         2       0       0
  1881 ;;Total ram usage:        2 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; Hardware stack levels required when called:    3
  1884 ;; This function calls:
  1885 ;;		_NRF_Read_Reg
  1886 ;;		_NRF_Write_Reg
  1887 ;; This function is called by:
  1888 ;;		_NRF_Tx_Send
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _NRF_Tx_CheckACK
  1894  01BF                     _NRF_Tx_CheckACK:	
  1895  01BF                     l1506:	
  1896                           ;incstack = 0
  1897                           ; Regs used in _NRF_Tx_CheckACK: [wreg+status,2+status,0+pclath+cstack]
  1898                           
  1899  01BF                     l1508:	
  1900                           
  1901                           ;../library/nrf24l01.c: 387:  sta = NRF_Read_Reg(0x07);
  1902  01BF  3007               	movlw	7
  1903  01C0  3182  220A  3181   	fcall	_NRF_Read_Reg
  1904  01C3  00F5               	movwf	??_NRF_Tx_CheckACK
  1905  01C4  0875               	movf	??_NRF_Tx_CheckACK,w
  1906  01C5  00F6               	movwf	NRF_Tx_CheckACK@sta
  1907  01C6                     l1510:	
  1908                           
  1909                           ;../library/nrf24l01.c: 388:     if(sta & 0X10 || sta & 0X20) {
  1910  01C6  1A76               	btfsc	NRF_Tx_CheckACK@sta,4
  1911  01C7  29C9               	goto	u361
  1912  01C8  29CA               	goto	u360
  1913  01C9                     u361:	
  1914  01C9  29CE               	goto	l1514
  1915  01CA                     u360:	
  1916  01CA                     l1512:	
  1917  01CA  1EF6               	btfss	NRF_Tx_CheckACK@sta,5
  1918  01CB  29CD               	goto	u371
  1919  01CC  29CE               	goto	u370
  1920  01CD                     u371:	
  1921  01CD  29D6               	goto	l1516
  1922  01CE                     u370:	
  1923  01CE                     l1514:	
  1924                           
  1925                           ;../library/nrf24l01.c: 389:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  1926  01CE  30FF               	movlw	255
  1927  01CF  00F5               	movwf	??_NRF_Tx_CheckACK
  1928  01D0  0875               	movf	??_NRF_Tx_CheckACK,w
  1929  01D1  00F1               	movwf	NRF_Write_Reg@value
  1930  01D2  3027               	movlw	39
  1931  01D3  3181  21F8  3181   	fcall	_NRF_Write_Reg
  1932  01D6                     l1516:	
  1933                           
  1934                           ;../library/nrf24l01.c: 391:  if(sta & 0X20) {
  1935  01D6  1EF6               	btfss	NRF_Tx_CheckACK@sta,5
  1936  01D7  29D9               	goto	u381
  1937  01D8  29DA               	goto	u380
  1938  01D9                     u381:	
  1939  01D9  29DC               	goto	l1522
  1940  01DA                     u380:	
  1941  01DA                     l1518:	
  1942                           
  1943                           ;../library/nrf24l01.c: 392:     return(0);
  1944  01DA  3000               	movlw	0
  1945  01DB  29DD               	goto	l186
  1946  01DC                     l1522:	
  1947                           
  1948                           ;../library/nrf24l01.c: 394:  return(1);
  1949  01DC  3001               	movlw	1
  1950  01DD                     l186:	
  1951  01DD  0008               	return
  1952  01DE                     __end_of_NRF_Tx_CheckACK:	
  1953                           
  1954                           	psect	text6
  1955  01F8                     __ptext6:	
  1956 ;; *************** function _NRF_Write_Reg *****************
  1957 ;; Defined at:
  1958 ;;		line 105 in file "../library/nrf24l01.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  reg             1    wreg     unsigned char 
  1961 ;;  value           1    1[COMMON] unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  reg             1    3[COMMON] unsigned char 
  1964 ;;  status          1    4[COMMON] unsigned char 
  1965 ;; Return value:  Size  Location     Type
  1966 ;;                  1    wreg      unsigned char 
  1967 ;; Registers used:
  1968 ;;		wreg, status,2, status,0, pclath, cstack
  1969 ;; Tracked objects:
  1970 ;;		On entry : 0/0
  1971 ;;		On exit  : 0/0
  1972 ;;		Unchanged: 0/0
  1973 ;; Data sizes:     COMMON   BANK0   BANK1
  1974 ;;      Params:         1       0       0
  1975 ;;      Locals:         2       0       0
  1976 ;;      Temps:          1       0       0
  1977 ;;      Totals:         4       0       0
  1978 ;;Total ram usage:        4 bytes
  1979 ;; Hardware stack levels used:    1
  1980 ;; Hardware stack levels required when called:    2
  1981 ;; This function calls:
  1982 ;;		_NRF_SPI_RW
  1983 ;; This function is called by:
  1984 ;;		_NRF_Tx_Set
  1985 ;;		_NRF_Tx_CheckACK
  1986 ;;		_NRF_Power_off
  1987 ;;		_NRF_TX_Mode
  1988 ;;		_NRF_TxPacket
  1989 ;;		_NRF_RX_Mode
  1990 ;;		_NRF_RxPacket
  1991 ;;		_NRF_Flush_TX
  1992 ;;		_NRF_Flush_RX
  1993 ;;		_NRF_Clear_IRQ
  1994 ;;		_NRF_Rx_Set
  1995 ;;		_NRF_Rx_Set_P0
  1996 ;;		_NRF_Rx_Set_P1
  1997 ;;		_NRF_Rx_Set_P3
  1998 ;;		_NRF_Rx_Set_P4
  1999 ;;		_NRF_Rx_Set_P5
  2000 ;;		_NRF_Rx_Receive
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _NRF_Write_Reg
  2006  01F8                     _NRF_Write_Reg:	
  2007                           
  2008                           ;incstack = 0
  2009                           ; Regs used in _NRF_Write_Reg: [wreg+status,2+status,0+pclath+cstack]
  2010                           ;NRF_Write_Reg@reg stored from wreg
  2011  01F8  00F3               	movwf	NRF_Write_Reg@reg
  2012  01F9                     l1468:	
  2013                           
  2014                           ;../library/nrf24l01.c: 106:  unsigned char status;;../library/nrf24l01.c: 107:    RA2 =
      +                           0;
  2015  01F9  0020               	movlb	0	; select bank0
  2016  01FA  110C               	bcf	12,2	;volatile
  2017  01FB                     l1470:	
  2018                           
  2019                           ;../library/nrf24l01.c: 108:    status = NRF_SPI_RW(reg);
  2020  01FB  0873               	movf	NRF_Write_Reg@reg,w
  2021  01FC  3182  222D  3181   	fcall	_NRF_SPI_RW
  2022  01FF  00F2               	movwf	??_NRF_Write_Reg
  2023  0200  0872               	movf	??_NRF_Write_Reg,w
  2024  0201  00F4               	movwf	NRF_Write_Reg@status
  2025  0202                     l1472:	
  2026                           
  2027                           ;../library/nrf24l01.c: 109:    NRF_SPI_RW(value);
  2028  0202  0871               	movf	NRF_Write_Reg@value,w
  2029  0203  3182  222D  3181   	fcall	_NRF_SPI_RW
  2030  0206                     l1474:	
  2031                           
  2032                           ;../library/nrf24l01.c: 110:    RA2 = 1;
  2033  0206  0020               	movlb	0	; select bank0
  2034  0207  150C               	bsf	12,2	;volatile
  2035  0208                     l1476:	
  2036                           
  2037                           ;../library/nrf24l01.c: 111:    return(status);
  2038  0208  0874               	movf	NRF_Write_Reg@status,w
  2039  0209                     l102:	
  2040  0209  0008               	return
  2041  020A                     __end_of_NRF_Write_Reg:	
  2042                           
  2043                           	psect	text7
  2044  020A                     __ptext7:	
  2045 ;; *************** function _NRF_Read_Reg *****************
  2046 ;; Defined at:
  2047 ;;		line 89 in file "../library/nrf24l01.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  reg             1    wreg     unsigned char 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  reg             1    2[COMMON] unsigned char 
  2052 ;;  status          1    3[COMMON] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      unsigned char 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1
  2062 ;;      Params:         0       0       0
  2063 ;;      Locals:         2       0       0
  2064 ;;      Temps:          1       0       0
  2065 ;;      Totals:         3       0       0
  2066 ;;Total ram usage:        3 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    2
  2069 ;; This function calls:
  2070 ;;		_NRF_SPI_RW
  2071 ;; This function is called by:
  2072 ;;		_NRF_Tx_CheckACK
  2073 ;;		_NRF_TxPacket
  2074 ;;		_NRF_Read_RX_Pload
  2075 ;;		_NRF_Get_Status
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           
  2080                           ;psect for function _NRF_Read_Reg
  2081  020A                     _NRF_Read_Reg:	
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _NRF_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  2085                           ;NRF_Read_Reg@reg stored from wreg
  2086  020A  00F2               	movwf	NRF_Read_Reg@reg
  2087  020B                     l1456:	
  2088                           
  2089                           ;../library/nrf24l01.c: 90:  unsigned char status;;../library/nrf24l01.c: 91:    RA2 = 0
      +                          ;
  2090  020B  0020               	movlb	0	; select bank0
  2091  020C  110C               	bcf	12,2	;volatile
  2092  020D                     l1458:	
  2093                           
  2094                           ;../library/nrf24l01.c: 92:    NRF_SPI_RW(reg);
  2095  020D  0872               	movf	NRF_Read_Reg@reg,w
  2096  020E  3182  222D  3182   	fcall	_NRF_SPI_RW
  2097  0211                     l1460:	
  2098                           
  2099                           ;../library/nrf24l01.c: 93:    status = NRF_SPI_RW(0xFF);
  2100  0211  30FF               	movlw	255
  2101  0212  3182  222D  3182   	fcall	_NRF_SPI_RW
  2102  0215  00F1               	movwf	??_NRF_Read_Reg
  2103  0216  0871               	movf	??_NRF_Read_Reg,w
  2104  0217  00F3               	movwf	NRF_Read_Reg@status
  2105  0218                     l1462:	
  2106                           
  2107                           ;../library/nrf24l01.c: 94:    RA2 = 1;
  2108  0218  0020               	movlb	0	; select bank0
  2109  0219  150C               	bsf	12,2	;volatile
  2110  021A                     l1464:	
  2111                           
  2112                           ;../library/nrf24l01.c: 95:    return(status);
  2113  021A  0873               	movf	NRF_Read_Reg@status,w
  2114  021B                     l99:	
  2115  021B  0008               	return
  2116  021C                     __end_of_NRF_Read_Reg:	
  2117                           
  2118                           	psect	text8
  2119  023B                     __ptext8:	
  2120 ;; *************** function _NRF_SPI_Init *****************
  2121 ;; Defined at:
  2122 ;;		line 72 in file "../library/nrf24l01.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1
  2136 ;;      Params:         0       0       0
  2137 ;;      Locals:         0       0       0
  2138 ;;      Temps:          0       0       0
  2139 ;;      Totals:         0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_WirelessPad
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _NRF_SPI_Init
  2152  023B                     _NRF_SPI_Init:	
  2153  023B                     l1530:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _NRF_SPI_Init: [wreg+status,2]
  2156                           
  2157                           
  2158                           ;../library/nrf24l01.c: 73:     SSP1STAT = 0x00;
  2159  023B  0024               	movlb	4	; select bank4
  2160  023C  0194               	clrf	20	;volatile
  2161  023D                     l1532:	
  2162                           
  2163                           ;../library/nrf24l01.c: 74:     SSP1STATbits.CKE = 1;
  2164  023D  1714               	bsf	20,6	;volatile
  2165                           
  2166                           ;../library/nrf24l01.c: 76:     SSP1BUF = 0;
  2167  023E  0191               	clrf	17	;volatile
  2168  023F                     l1534:	
  2169                           
  2170                           ;../library/nrf24l01.c: 77:     SSP1IF = 0;
  2171  023F  0020               	movlb	0	; select bank0
  2172  0240  1191               	bcf	17,3	;volatile
  2173  0241                     l1536:	
  2174                           
  2175                           ;../library/nrf24l01.c: 78:     SSP1CON1 = 0x20;
  2176  0241  3020               	movlw	32
  2177  0242  0024               	movlb	4	; select bank4
  2178  0243  0095               	movwf	21	;volatile
  2179  0244                     l90:	
  2180  0244  0008               	return
  2181  0245                     __end_of_NRF_SPI_Init:	
  2182                           
  2183                           	psect	text9
  2184  0245                     __ptext9:	
  2185 ;; *************** function _NRF_Port_Init *****************
  2186 ;; Defined at:
  2187 ;;		line 46 in file "../library/nrf24l01.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		None
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1
  2201 ;;      Params:         0       0       0
  2202 ;;      Locals:         0       0       0
  2203 ;;      Temps:          0       0       0
  2204 ;;      Totals:         0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    1
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_WirelessPad
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _NRF_Port_Init
  2217  0245                     _NRF_Port_Init:	
  2218  0245                     l1526:	
  2219                           ;incstack = 0
  2220                           ; Regs used in _NRF_Port_Init: []
  2221                           
  2222                           
  2223                           ;../library/nrf24l01.c: 47:     TRISC1 = 1;
  2224  0245  0021               	movlb	1	; select bank1
  2225  0246  148E               	bsf	14,1	;volatile
  2226                           
  2227                           ;../library/nrf24l01.c: 48:     TRISC2 = 0;
  2228  0247  110E               	bcf	14,2	;volatile
  2229                           
  2230                           ;../library/nrf24l01.c: 49:     TRISC0 = 0;
  2231  0248  100E               	bcf	14,0	;volatile
  2232                           
  2233                           ;../library/nrf24l01.c: 50:     TRISA2 = 0;
  2234  0249  110C               	bcf	12,2	;volatile
  2235                           
  2236                           ;../library/nrf24l01.c: 51:     TRISA0 = 0;
  2237  024A  100C               	bcf	12,0	;volatile
  2238                           
  2239                           ;../library/nrf24l01.c: 56:     RA0 = 0;
  2240  024B  0020               	movlb	0	; select bank0
  2241  024C  100C               	bcf	12,0	;volatile
  2242                           
  2243                           ;../library/nrf24l01.c: 57:     RA2 = 1;
  2244  024D  150C               	bsf	12,2	;volatile
  2245  024E                     l81:	
  2246  024E  0008               	return
  2247  024F                     __end_of_NRF_Port_Init:	
  2248                           
  2249                           	psect	text10
  2250  0278                     __ptext10:	
  2251 ;; *************** function _NRF_On *****************
  2252 ;; Defined at:
  2253 ;;		line 60 in file "../library/nrf24l01.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		None
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       0       0
  2269 ;;      Temps:          0       0       0
  2270 ;;      Totals:         0       0       0
  2271 ;;Total ram usage:        0 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_WirelessPad
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _NRF_On
  2283  0278                     _NRF_On:	
  2284  0278                     l1528:	
  2285                           ;incstack = 0
  2286                           ; Regs used in _NRF_On: []
  2287                           
  2288                           
  2289                           ;../library/nrf24l01.c: 61:     RA5 = 0;
  2290  0278  0020               	movlb	0	; select bank0
  2291  0279  128C               	bcf	12,5	;volatile
  2292  027A                     l84:	
  2293  027A  0008               	return
  2294  027B                     __end_of_NRF_On:	
  2295                           
  2296                           	psect	text11
  2297  0081                     __ptext11:	
  2298 ;; *************** function _NRF_Check *****************
  2299 ;; Defined at:
  2300 ;;		line 160 in file "../library/nrf24l01.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;		None
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  buf             5    5[BANK0 ] unsigned char [5]
  2305 ;;  tuf             5    0[BANK0 ] unsigned char [5]
  2306 ;;  i               1   10[BANK0 ] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      unsigned char 
  2309 ;; Registers used:
  2310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1
  2316 ;;      Params:         0       0       0
  2317 ;;      Locals:         0      11       0
  2318 ;;      Temps:          2       0       0
  2319 ;;      Totals:         2      11       0
  2320 ;;Total ram usage:       13 bytes
  2321 ;; Hardware stack levels used:    1
  2322 ;; Hardware stack levels required when called:    3
  2323 ;; This function calls:
  2324 ;;		_NRF_Read_Buf
  2325 ;;		_NRF_Write_Buf
  2326 ;; This function is called by:
  2327 ;;		_WirelessPad
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _NRF_Check
  2333  0081                     _NRF_Check:	
  2334  0081                     l1538:	
  2335                           ;incstack = 0
  2336                           ; Regs used in _NRF_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2337                           
  2338                           
  2339                           ;../library/nrf24l01.c: 161:     unsigned char tuf[5] = {0xE1, 0xE2, 0xE3, 0xE4, 0x05};
  2340  0081  3020               	movlw	low NRF_Check@F2718
  2341  0082  0086               	movwf	6
  2342  0083  3000               	movlw	high NRF_Check@F2718
  2343  0084  0087               	movwf	7
  2344  0085  304D               	movlw	low NRF_Check@tuf
  2345  0086  0084               	movwf	4
  2346  0087  3000               	movlw	high NRF_Check@tuf
  2347  0088  0085               	movwf	5
  2348  0089  3005               	movlw	5
  2349  008A  00F8               	movwf	??_NRF_Check
  2350  008B                     u390:	
  2351  008B  0016               	moviw fsr1++
  2352  008C  001A               	movwi fsr0++
  2353  008D  0BF8               	decfsz	??_NRF_Check,f
  2354  008E  288B               	goto	u390
  2355  008F                     l1540:	
  2356                           
  2357                           ;../library/nrf24l01.c: 162:  unsigned char buf[5] = {0, 0, 0, 0, 0};
  2358  008F  3052               	movlw	low NRF_Check@buf
  2359  0090  0086               	movwf	6
  2360  0091  3000               	movlw	high NRF_Check@buf
  2361  0092  0087               	movwf	7
  2362  0093  3005               	movlw	5
  2363  0094  00F8               	movwf	??_NRF_Check
  2364  0095  3000               	movlw	0
  2365  0096                     u400:	
  2366  0096  001E               	movwi fsr1++
  2367  0097  0BF8               	decfsz	??_NRF_Check,f
  2368  0098  2896               	goto	u400
  2369  0099                     l1542:	
  2370                           
  2371                           ;../library/nrf24l01.c: 163:  unsigned char i;;../library/nrf24l01.c: 164:     NRF_Write
      +                          _Buf(0x20 + 0x10, tuf, 5);
  2372  0099  304D               	movlw	(low (NRF_Check@tuf| 0))& (0+255)
  2373  009A  00F8               	movwf	??_NRF_Check
  2374  009B  0878               	movf	??_NRF_Check,w
  2375  009C  00F1               	movwf	NRF_Write_Buf@pBuf
  2376  009D  3005               	movlw	5
  2377  009E  00F9               	movwf	??_NRF_Check+1
  2378  009F  0879               	movf	??_NRF_Check+1,w
  2379  00A0  00F2               	movwf	NRF_Write_Buf@len
  2380  00A1  3030               	movlw	48
  2381  00A2  3181  219E  3180   	fcall	_NRF_Write_Buf
  2382  00A5                     l1544:	
  2383                           
  2384                           ;../library/nrf24l01.c: 165:  NRF_Read_Buf(0x10, buf, 5);
  2385  00A5  3052               	movlw	(low (NRF_Check@buf| 0))& (0+255)
  2386  00A6  00F8               	movwf	??_NRF_Check
  2387  00A7  0878               	movf	??_NRF_Check,w
  2388  00A8  00F1               	movwf	NRF_Read_Buf@pBuf
  2389  00A9  3005               	movlw	5
  2390  00AA  00F9               	movwf	??_NRF_Check+1
  2391  00AB  0879               	movf	??_NRF_Check+1,w
  2392  00AC  00F2               	movwf	NRF_Read_Buf@len
  2393  00AD  3010               	movlw	16
  2394  00AE  3181  217B  3180   	fcall	_NRF_Read_Buf
  2395  00B1                     l1546:	
  2396                           
  2397                           ;../library/nrf24l01.c: 166:  for(i = 0; i < 5; i++) if(tuf[i] != buf[i]) break;
  2398  00B1  0020               	movlb	0	; select bank0
  2399  00B2  01D7               	clrf	NRF_Check@i
  2400  00B3                     l1552:	
  2401  00B3  0857               	movf	NRF_Check@i,w
  2402  00B4  3E52               	addlw	(low (NRF_Check@buf| 0))& (0+255)
  2403  00B5  0086               	movwf	6
  2404  00B6  0187               	clrf	7
  2405  00B7  0857               	movf	NRF_Check@i,w
  2406  00B8  3E4D               	addlw	(low (NRF_Check@tuf| 0))& (0+255)
  2407  00B9  0084               	movwf	4
  2408  00BA  0185               	clrf	5
  2409  00BB  0800               	movf	0,w
  2410  00BC  0601               	xorwf	1,w
  2411  00BD  1903               	skipnz
  2412  00BE  28C0               	goto	u411
  2413  00BF  28C1               	goto	u410
  2414  00C0                     u411:	
  2415  00C0  28C2               	goto	l1556
  2416  00C1                     u410:	
  2417  00C1  28CC               	goto	l1560
  2418  00C2                     l1556:	
  2419  00C2  3001               	movlw	1
  2420  00C3  00F8               	movwf	??_NRF_Check
  2421  00C4  0878               	movf	??_NRF_Check,w
  2422  00C5  07D7               	addwf	NRF_Check@i,f
  2423  00C6                     l1558:	
  2424  00C6  3005               	movlw	5
  2425  00C7  0257               	subwf	NRF_Check@i,w
  2426  00C8  1C03               	skipc
  2427  00C9  28CB               	goto	u421
  2428  00CA  28CC               	goto	u420
  2429  00CB                     u421:	
  2430  00CB  28B3               	goto	l1552
  2431  00CC                     u420:	
  2432  00CC                     l1560:	
  2433                           
  2434                           ;../library/nrf24l01.c: 167:  if(i != 5) return 1;
  2435  00CC  3005               	movlw	5
  2436  00CD  0657               	xorwf	NRF_Check@i,w
  2437  00CE  1903               	btfsc	3,2
  2438  00CF  28D1               	goto	u431
  2439  00D0  28D2               	goto	u430
  2440  00D1                     u431:	
  2441  00D1  28D4               	goto	l1566
  2442  00D2                     u430:	
  2443  00D2                     l1562:	
  2444  00D2  3001               	movlw	1
  2445  00D3  28D5               	goto	l128
  2446  00D4                     l1566:	
  2447                           
  2448                           ;../library/nrf24l01.c: 168:  return 0;
  2449  00D4  3000               	movlw	0
  2450  00D5                     l128:	
  2451  00D5  0008               	return
  2452  00D6                     __end_of_NRF_Check:	
  2453                           
  2454                           	psect	text12
  2455  019E                     __ptext12:	
  2456 ;; *************** function _NRF_Write_Buf *****************
  2457 ;; Defined at:
  2458 ;;		line 140 in file "../library/nrf24l01.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  reg             1    wreg     unsigned char 
  2461 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  2462 ;;		 -> tx_addr(5), pad_aux_dat(2), RX_ADDRESS_P5(5), RX_ADDRESS_P4(5), 
  2463 ;;		 -> RX_ADDRESS_P3(5), RX_ADDRESS_P2(5), RX_ADDRESS_P1(5), RX_ADDRESS_P0(5), 
  2464 ;;		 -> NRF_Check@tuf(5), 
  2465 ;;  len             1    2[COMMON] unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  reg             1    5[COMMON] unsigned char 
  2468 ;;  i               1    6[COMMON] unsigned char 
  2469 ;;  status          1    0        unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      unsigned char 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1
  2479 ;;      Params:         2       0       0
  2480 ;;      Locals:         3       0       0
  2481 ;;      Temps:          1       0       0
  2482 ;;      Totals:         6       0       0
  2483 ;;Total ram usage:        6 bytes
  2484 ;; Hardware stack levels used:    1
  2485 ;; Hardware stack levels required when called:    2
  2486 ;; This function calls:
  2487 ;;		_NRF_SPI_RW
  2488 ;; This function is called by:
  2489 ;;		_NRF_Check
  2490 ;;		_NRF_Tx_Set
  2491 ;;		_NRF_Tx_Send
  2492 ;;		_NRF_TX_Mode
  2493 ;;		_NRF_RX_Mode
  2494 ;;		_NRF_Rx_Set_P0
  2495 ;;		_NRF_Rx_Set_P1
  2496 ;;		_NRF_Rx_Set_P3
  2497 ;;		_NRF_Rx_Set_P4
  2498 ;;		_NRF_Rx_Set_P5
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _NRF_Write_Buf
  2504  019E                     _NRF_Write_Buf:	
  2505                           
  2506                           ;incstack = 0
  2507                           ; Regs used in _NRF_Write_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2508                           ;NRF_Write_Buf@reg stored from wreg
  2509  019E  00F5               	movwf	NRF_Write_Buf@reg
  2510  019F                     l1492:	
  2511                           
  2512                           ;../library/nrf24l01.c: 140: unsigned char NRF_Write_Buf(unsigned char reg, unsigned cha
      +                          r *pBuf, unsigned char len);../library/nrf24l01.c: 141: {;../library/nrf24l01.c: 142:  u
      +                          nsigned char status, i;;../library/nrf24l01.c: 143:    RA2 = 0;
  2513  019F  0020               	movlb	0	; select bank0
  2514  01A0  110C               	bcf	12,2	;volatile
  2515  01A1                     l1494:	
  2516  01A1  0875               	movf	NRF_Write_Buf@reg,w
  2517  01A2  3182  222D  3181   	fcall	_NRF_SPI_RW
  2518  01A5                     l1496:	
  2519                           
  2520                           ;../library/nrf24l01.c: 145:    for(i = 0; i < len; i++) {
  2521  01A5  01F6               	clrf	NRF_Write_Buf@i
  2522  01A6  29B6               	goto	l1504
  2523  01A7                     l1498:	
  2524                           
  2525                           ;../library/nrf24l01.c: 146:      NRF_SPI_RW(*pBuf++);
  2526  01A7  0871               	movf	NRF_Write_Buf@pBuf,w
  2527  01A8  0086               	movwf	6
  2528  01A9  0187               	clrf	7
  2529  01AA  0801               	movf	1,w
  2530  01AB  3182  222D  3181   	fcall	_NRF_SPI_RW
  2531  01AE                     l1500:	
  2532  01AE  3001               	movlw	1
  2533  01AF  00F3               	movwf	??_NRF_Write_Buf
  2534  01B0  0873               	movf	??_NRF_Write_Buf,w
  2535  01B1  07F1               	addwf	NRF_Write_Buf@pBuf,f
  2536  01B2                     l1502:	
  2537                           
  2538                           ;../library/nrf24l01.c: 147:  }
  2539  01B2  3001               	movlw	1
  2540  01B3  00F3               	movwf	??_NRF_Write_Buf
  2541  01B4  0873               	movf	??_NRF_Write_Buf,w
  2542  01B5  07F6               	addwf	NRF_Write_Buf@i,f
  2543  01B6                     l1504:	
  2544  01B6  0872               	movf	NRF_Write_Buf@len,w
  2545  01B7  0276               	subwf	NRF_Write_Buf@i,w
  2546  01B8  1C03               	skipc
  2547  01B9  29BB               	goto	u351
  2548  01BA  29BC               	goto	u350
  2549  01BB                     u351:	
  2550  01BB  29A7               	goto	l1498
  2551  01BC                     u350:	
  2552  01BC                     l113:	
  2553                           
  2554                           ;../library/nrf24l01.c: 148:    RA2 = 1;
  2555  01BC  0020               	movlb	0	; select bank0
  2556  01BD  150C               	bsf	12,2	;volatile
  2557  01BE                     l114:	
  2558                           ;../library/nrf24l01.c: 149:    return(status);;	Return value of _NRF_Write_Buf is never
      +                           used
  2559                           
  2560  01BE  0008               	return
  2561  01BF                     __end_of_NRF_Write_Buf:	
  2562                           
  2563                           	psect	text13
  2564  017B                     __ptext13:	
  2565 ;; *************** function _NRF_Read_Buf *****************
  2566 ;; Defined at:
  2567 ;;		line 121 in file "../library/nrf24l01.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  reg             1    wreg     unsigned char 
  2570 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  2571 ;;		 -> NRF_Check@buf(5), 
  2572 ;;  len             1    2[COMMON] unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  reg             1    6[COMMON] unsigned char 
  2575 ;;  i               1    7[COMMON] unsigned char 
  2576 ;;  status          1    0        unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      unsigned char 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1
  2586 ;;      Params:         2       0       0
  2587 ;;      Locals:         3       0       0
  2588 ;;      Temps:          2       0       0
  2589 ;;      Totals:         7       0       0
  2590 ;;Total ram usage:        7 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; Hardware stack levels required when called:    2
  2593 ;; This function calls:
  2594 ;;		_NRF_SPI_RW
  2595 ;; This function is called by:
  2596 ;;		_NRF_Check
  2597 ;;		_NRF_Read_RX_Pload
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _NRF_Read_Buf
  2603  017B                     _NRF_Read_Buf:	
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _NRF_Read_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2607                           ;NRF_Read_Buf@reg stored from wreg
  2608  017B  00F6               	movwf	NRF_Read_Buf@reg
  2609  017C                     l1480:	
  2610                           
  2611                           ;../library/nrf24l01.c: 121: unsigned char NRF_Read_Buf(unsigned char reg, unsigned char
      +                           *pBuf, unsigned char len);../library/nrf24l01.c: 122: {;../library/nrf24l01.c: 123:  un
      +                          signed char status,i;;../library/nrf24l01.c: 124:    RA2 = 0;
  2612  017C  0020               	movlb	0	; select bank0
  2613  017D  110C               	bcf	12,2	;volatile
  2614  017E                     l1482:	
  2615  017E  0876               	movf	NRF_Read_Buf@reg,w
  2616  017F  3182  222D  3181   	fcall	_NRF_SPI_RW
  2617  0182                     l1484:	
  2618                           
  2619                           ;../library/nrf24l01.c: 126:    for(i = 0; i < len; i++)
  2620  0182  01F7               	clrf	NRF_Read_Buf@i
  2621  0183  2995               	goto	l1490
  2622  0184                     l1486:	
  2623                           
  2624                           ;../library/nrf24l01.c: 127:  {;../library/nrf24l01.c: 128:      pBuf[i] = NRF_SPI_RW(0x
      +                          FF);
  2625  0184  30FF               	movlw	255
  2626  0185  3182  222D  3181   	fcall	_NRF_SPI_RW
  2627  0188  00F3               	movwf	??_NRF_Read_Buf
  2628  0189  0877               	movf	NRF_Read_Buf@i,w
  2629  018A  0771               	addwf	NRF_Read_Buf@pBuf,w
  2630  018B  00F4               	movwf	??_NRF_Read_Buf+1
  2631  018C  0874               	movf	??_NRF_Read_Buf+1,w
  2632  018D  0086               	movwf	6
  2633  018E  0187               	clrf	7
  2634  018F  0873               	movf	??_NRF_Read_Buf,w
  2635  0190  0081               	movwf	1
  2636  0191                     l1488:	
  2637                           
  2638                           ;../library/nrf24l01.c: 129:    }
  2639  0191  3001               	movlw	1
  2640  0192  00F3               	movwf	??_NRF_Read_Buf
  2641  0193  0873               	movf	??_NRF_Read_Buf,w
  2642  0194  07F7               	addwf	NRF_Read_Buf@i,f
  2643  0195                     l1490:	
  2644  0195  0872               	movf	NRF_Read_Buf@len,w
  2645  0196  0277               	subwf	NRF_Read_Buf@i,w
  2646  0197  1C03               	skipc
  2647  0198  299A               	goto	u341
  2648  0199  299B               	goto	u340
  2649  019A                     u341:	
  2650  019A  2984               	goto	l1486
  2651  019B                     u340:	
  2652  019B                     l107:	
  2653                           
  2654                           ;../library/nrf24l01.c: 130:  RA2 = 1;
  2655  019B  0020               	movlb	0	; select bank0
  2656  019C  150C               	bsf	12,2	;volatile
  2657  019D                     l108:	
  2658                           ;../library/nrf24l01.c: 131:    return(status);;	Return value of _NRF_Read_Buf is never 
      +                          used
  2659                           
  2660  019D  0008               	return
  2661  019E                     __end_of_NRF_Read_Buf:	
  2662                           
  2663                           	psect	text14
  2664  022D                     __ptext14:	
  2665 ;; *************** function _NRF_SPI_RW *****************
  2666 ;; Defined at:
  2667 ;;		line 81 in file "../library/nrf24l01.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  dat             1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  dat             1    0[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      unsigned char 
  2674 ;; Registers used:
  2675 ;;		wreg
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1
  2681 ;;      Params:         0       0       0
  2682 ;;      Locals:         1       0       0
  2683 ;;      Temps:          0       0       0
  2684 ;;      Totals:         1       0       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_NRF_Read_Reg
  2692 ;;		_NRF_Write_Reg
  2693 ;;		_NRF_Read_Buf
  2694 ;;		_NRF_Write_Buf
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function _NRF_SPI_RW
  2700  022D                     _NRF_SPI_RW:	
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in _NRF_SPI_RW: [wreg]
  2704                           ;NRF_SPI_RW@dat stored from wreg
  2705  022D  00F0               	movwf	NRF_SPI_RW@dat
  2706  022E                     l1448:	
  2707                           
  2708                           ;../library/nrf24l01.c: 82:     SSP1IF = 0;
  2709  022E  0020               	movlb	0	; select bank0
  2710  022F  1191               	bcf	17,3	;volatile
  2711  0230                     l1450:	
  2712                           
  2713                           ;../library/nrf24l01.c: 83:     SSP1BUF = dat;
  2714  0230  0870               	movf	NRF_SPI_RW@dat,w
  2715  0231  0024               	movlb	4	; select bank4
  2716  0232  0091               	movwf	17	;volatile
  2717  0233                     l93:	
  2718                           ;../library/nrf24l01.c: 84:     while(!SSP1IF);
  2719                           
  2720  0233  0020               	movlb	0	; select bank0
  2721  0234  1D91               	btfss	17,3	;volatile
  2722  0235  2A37               	goto	u331
  2723  0236  2A38               	goto	u330
  2724  0237                     u331:	
  2725  0237  2A33               	goto	l93
  2726  0238                     u330:	
  2727  0238                     l1452:	
  2728                           
  2729                           ;../library/nrf24l01.c: 86:     return(SSP1BUF);
  2730  0238  0024               	movlb	4	; select bank4
  2731  0239  0811               	movf	17,w	;volatile
  2732  023A                     l96:	
  2733  023A  0008               	return
  2734  023B                     __end_of_NRF_SPI_RW:	
  2735                           
  2736                           	psect	text15
  2737  0261                     __ptext15:	
  2738 ;; *************** function _PORT_Init *****************
  2739 ;; Defined at:
  2740 ;;		line 4 in file "../library/port.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;		None
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1
  2754 ;;      Params:         0       0       0
  2755 ;;      Locals:         0       0       0
  2756 ;;      Temps:          0       0       0
  2757 ;;      Totals:         0       0       0
  2758 ;;Total ram usage:        0 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    2
  2761 ;; This function calls:
  2762 ;;		_PORTA_Init
  2763 ;;		_PORTC_Init
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _PORT_Init
  2771  0261                     _PORT_Init:	
  2772  0261                     l1176:	
  2773                           ;incstack = 0
  2774                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
  2775                           
  2776                           
  2777                           ;../library/port.c: 5:     PORTA_Init();
  2778  0261  3182  2258  3182   	fcall	_PORTA_Init
  2779                           
  2780                           ;../library/port.c: 6:     PORTC_Init();
  2781  0264  3182  224F  3182   	fcall	_PORTC_Init
  2782  0267                     l230:	
  2783  0267  0008               	return
  2784  0268                     __end_of_PORT_Init:	
  2785                           
  2786                           	psect	text16
  2787  024F                     __ptext16:	
  2788 ;; *************** function _PORTC_Init *****************
  2789 ;; Defined at:
  2790 ;;		line 16 in file "../library/port.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;		None
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		status,2
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1
  2804 ;;      Params:         0       0       0
  2805 ;;      Locals:         0       0       0
  2806 ;;      Temps:          0       0       0
  2807 ;;      Totals:         0       0       0
  2808 ;;Total ram usage:        0 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    1
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_PORT_Init
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function _PORTC_Init
  2820  024F                     _PORTC_Init:	
  2821  024F                     l1140:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _PORTC_Init: [status,2]
  2824                           
  2825                           
  2826                           ;../library/port.c: 17:     PORTC = 0;
  2827  024F  0020               	movlb	0	; select bank0
  2828  0250  018E               	clrf	14	;volatile
  2829                           
  2830                           ;../library/port.c: 18:     LATC = 0;
  2831  0251  0022               	movlb	2	; select bank2
  2832  0252  018E               	clrf	14	;volatile
  2833                           
  2834                           ;../library/port.c: 19:     ANSELC = 0;
  2835  0253  0023               	movlb	3	; select bank3
  2836  0254  018E               	clrf	14	;volatile
  2837                           
  2838                           ;../library/port.c: 20:     TRISC = 0;
  2839  0255  0021               	movlb	1	; select bank1
  2840  0256  018E               	clrf	14	;volatile
  2841  0257                     l236:	
  2842  0257  0008               	return
  2843  0258                     __end_of_PORTC_Init:	
  2844                           
  2845                           	psect	text17
  2846  0258                     __ptext17:	
  2847 ;; *************** function _PORTA_Init *****************
  2848 ;; Defined at:
  2849 ;;		line 9 in file "../library/port.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		status,2
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1
  2863 ;;      Params:         0       0       0
  2864 ;;      Locals:         0       0       0
  2865 ;;      Temps:          0       0       0
  2866 ;;      Totals:         0       0       0
  2867 ;;Total ram usage:        0 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_PORT_Init
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function _PORTA_Init
  2879  0258                     _PORTA_Init:	
  2880  0258                     l1138:	
  2881                           ;incstack = 0
  2882                           ; Regs used in _PORTA_Init: [status,2]
  2883                           
  2884                           
  2885                           ;../library/port.c: 10:     PORTA = 0;
  2886  0258  0020               	movlb	0	; select bank0
  2887  0259  018C               	clrf	12	;volatile
  2888                           
  2889                           ;../library/port.c: 11:     LATA = 0;
  2890  025A  0022               	movlb	2	; select bank2
  2891  025B  018C               	clrf	12	;volatile
  2892                           
  2893                           ;../library/port.c: 12:     ANSELA = 0;
  2894  025C  0023               	movlb	3	; select bank3
  2895  025D  018C               	clrf	12	;volatile
  2896                           
  2897                           ;../library/port.c: 13:     TRISA = 0;
  2898  025E  0021               	movlb	1	; select bank1
  2899  025F  018C               	clrf	12	;volatile
  2900  0260                     l233:	
  2901  0260  0008               	return
  2902  0261                     __end_of_PORTA_Init:	
  2903                           
  2904                           	psect	text18
  2905  026E                     __ptext18:	
  2906 ;; *************** function _LED_Init *****************
  2907 ;; Defined at:
  2908 ;;		line 50 in file "main.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		None
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1
  2922 ;;      Params:         0       0       0
  2923 ;;      Locals:         0       0       0
  2924 ;;      Temps:          0       0       0
  2925 ;;      Totals:         0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _LED_Init
  2938  026E                     _LED_Init:	
  2939  026E                     l1180:	
  2940                           ;incstack = 0
  2941                           ; Regs used in _LED_Init: []
  2942                           
  2943                           
  2944                           ;main.c: 51:     TRISC3 = 0;
  2945  026E  0021               	movlb	1	; select bank1
  2946  026F  118E               	bcf	14,3	;volatile
  2947                           
  2948                           ;main.c: 52:     RC3 = 1;
  2949  0270  0020               	movlb	0	; select bank0
  2950  0271  158E               	bsf	14,3	;volatile
  2951  0272                     l340:	
  2952  0272  0008               	return
  2953  0273                     __end_of_LED_Init:	
  2954                           
  2955                           	psect	text19
  2956  0273                     __ptext19:	
  2957 ;; *************** function _Key_Init *****************
  2958 ;; Defined at:
  2959 ;;		line 64 in file "main.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;		None
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		None
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1
  2973 ;;      Params:         0       0       0
  2974 ;;      Locals:         0       0       0
  2975 ;;      Temps:          0       0       0
  2976 ;;      Totals:         0       0       0
  2977 ;;Total ram usage:        0 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _Key_Init
  2989  0273                     _Key_Init:	
  2990  0273                     l1182:	
  2991                           ;incstack = 0
  2992                           ; Regs used in _Key_Init: []
  2993                           
  2994                           
  2995                           ;main.c: 66:     TRISA4 = 1;
  2996  0273  0021               	movlb	1	; select bank1
  2997  0274  160C               	bsf	12,4	;volatile
  2998                           
  2999                           ;main.c: 67:     RA4 = 0;
  3000  0275  0020               	movlb	0	; select bank0
  3001  0276  120C               	bcf	12,4	;volatile
  3002  0277                     l349:	
  3003  0277  0008               	return
  3004  0278                     __end_of_Key_Init:	
  3005                           
  3006                           	psect	intentry
  3007  0004                     __pintentry:	
  3008 ;; *************** function _ISR *****************
  3009 ;; Defined at:
  3010 ;;		line 80 in file "main.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		None
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1
  3024 ;;      Params:         0       0       0
  3025 ;;      Locals:         0       0       0
  3026 ;;      Temps:          0       0       0
  3027 ;;      Totals:         0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		Interrupt level 1
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           
  3037  0004                     _ISR:	
  3038                           
  3039                           ;incstack = 0
  3040  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3041                           
  3042                           ; Regs used in _ISR: []
  3043  0005  3180               	pagesel	$
  3044  0006                     i1l1432:	
  3045                           
  3046                           ;main.c: 82:     if(IOCIF && IOCAF4) {
  3047  0006  1C0B               	btfss	11,0	;volatile
  3048  0007  2809               	goto	u31_21
  3049  0008  280A               	goto	u31_20
  3050  0009                     u31_21:	
  3051  0009  2813               	goto	i1l356
  3052  000A                     u31_20:	
  3053  000A                     i1l1434:	
  3054  000A  0027               	movlb	7	; select bank7
  3055  000B  1E13               	btfss	19,4	;volatile
  3056  000C  280E               	goto	u32_21
  3057  000D  280F               	goto	u32_20
  3058  000E                     u32_21:	
  3059  000E  2813               	goto	i1l356
  3060  000F                     u32_20:	
  3061  000F                     i1l1436:	
  3062                           
  3063                           ;main.c: 83:         IOCIE = 0;
  3064  000F  118B               	bcf	11,3	;volatile
  3065                           
  3066                           ;main.c: 84:         IOCIF = 0;
  3067  0010  100B               	bcf	11,0	;volatile
  3068                           
  3069                           ;main.c: 85:         IOCAF4 = 0;
  3070  0011  1213               	bcf	19,4	;volatile
  3071  0012                     i1l355:	
  3072                           ;main.c: 88:         if(RA4 == 1) {
  3073                           ;main.c: 92:         }
  3074                           
  3075                           
  3076                           ;main.c: 94:         IOCIE = 1;
  3077  0012  158B               	bsf	11,3	;volatile
  3078  0013                     i1l356:	
  3079  0013  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3080  0014  0009               	retfie
  3081  0015                     __end_of_ISR:	
  3082  007E                     btemp	set	126	;btemp
  3083  007E                     int$flags	set	126
  3084  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        45
    BSS         7
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     11      61
    BANK1            32      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(COMMON[2]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 2
		 -> pad_aux_dat(COMMON[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(COMMON[2]), 

    NRF_Tx_Send@txbuf	PTR unsigned char  size(1) Largest target is 2
		 -> pad_aux_dat(COMMON[2]), 

    NRF_Tx_Set@addr	PTR unsigned char  size(1) Largest target is 5
		 -> tx_addr(BANK0[5]), 

    NRF_Write_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> tx_addr(BANK0[5]), pad_aux_dat(COMMON[2]), RX_ADDRESS_P5(BANK0[5]), RX_ADDRESS_P4(BANK0[5]), 
		 -> RX_ADDRESS_P3(BANK0[5]), RX_ADDRESS_P2(BANK0[5]), RX_ADDRESS_P1(BANK0[5]), RX_ADDRESS_P0(BANK0[5]), 
		 -> NRF_Check@tuf(BANK0[5]), 

    NRF_Read_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> NRF_Check@buf(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_WirelessPad
    _WirelessPad->_NRF_Tx_Send
    _WirelessPad->_NRF_Tx_Set
    _NRF_Tx_Set->_NRF_Write_Buf
    _NRF_Tx_Send->_NRF_Tx_CheckACK
    _NRF_Tx_Send->_NRF_Write_Buf
    _NRF_Tx_CheckACK->_NRF_Write_Reg
    _NRF_Write_Reg->_NRF_SPI_RW
    _NRF_Read_Reg->_NRF_SPI_RW
    _NRF_Check->_NRF_Read_Buf
    _NRF_Write_Buf->_NRF_SPI_RW
    _NRF_Read_Buf->_NRF_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _WirelessPad->_NRF_Check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16421
                           _Key_Init
                           _LED_Init
                          _PORT_Init
                        _WirelessPad
 ---------------------------------------------------------------------------------
 (1) _WirelessPad                                          1     1      0   16421
                                             11 COMMON     1     1      0
                          _NRF_Check
                             _NRF_On
                      _NRF_Port_Init
                       _NRF_SPI_Init
                        _NRF_Tx_Send
                         _NRF_Tx_Set
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _NRF_Tx_Set                                           4     3      1    6236
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Tx_Send                                          4     3      1    6349
                                              7 COMMON     4     3      1
                    _NRF_Tx_CheckACK
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Tx_CheckACK                                      2     2      0    3340
                                              5 COMMON     2     2      0
                       _NRF_Read_Reg
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Reg                                        4     3      1    3205
                                              1 COMMON     4     3      1
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Reg                                         3     3      0      67
                                              1 COMMON     3     3      0
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _NRF_SPI_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Check                                           13    13      0    3508
                                              8 COMMON     2     2      0
                                              0 BANK0     11    11      0
                       _NRF_Read_Buf
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Buf                                        6     4      2    2856
                                              1 COMMON     6     4      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _NRF_Read_Buf                                         7     5      2     445
                                              1 COMMON     7     5      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_SPI_RW                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Key_Init
   _LED_Init
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _WirelessPad
     _NRF_Check
       _NRF_Read_Buf
         _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_On
     _NRF_Port_Init
     _NRF_SPI_Init
     _NRF_Tx_Send
       _NRF_Tx_CheckACK
         _NRF_Read_Reg
           _NRF_SPI_RW
         _NRF_Write_Reg
           _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_Tx_Set
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      B      3D       6       76.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      4B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 13 21:17:59 2019

             __CFG_CP$OFF 0000                        l81 024E                        l90 0244  
                      l84 027A                        l93 0233                        l96 023A  
                      l99 021B                        _RD 0CA8                        _WR 0CA9  
          NRF_Check@F2720 0058            NRF_Check@F2718 0020               __CFG_LVP$ON 0000  
                     l102 0209                       l113 01BC                       l114 01BE  
                     l107 019B                       l108 019D                       l230 0267  
                     l128 00D5                       l233 0260                       l340 0272  
                     l236 0257                       l173 011F                       l361 022B  
                     l186 01DD                       l362 022B                       l179 01F7  
                     l372 007E                       l349 0277                       l368 0045  
                     l982 014D                       _RA0 0060                       _RA2 0062  
                     _RC0 0070                       _RA4 0064                       _RA5 0065  
                     _RC1 0071                       _RC2 0072                       _RC3 0073  
                     u400 0096                       u330 0238                       u410 00C1  
                     u331 0237                       u411 00C0                       u340 019B  
                     u420 00CC                       u341 019A                       u421 00CB  
                     u350 01BC                       u430 00D2                       u351 01BB  
                     u431 00D1                       u360 01CA                       u440 01F7  
                     u361 01C9                       u441 01F6                       u370 01CE  
                     u450 014D              __CFG_CPD$OFF 0000                       u371 01CD  
                     u451 014C                       u380 01DA                       u460 0045  
                     _ISR 0004                       u381 01D9                       u461 0044  
                     u390 008B                       u470 0070                       u471 006F  
                     u567 0038                       u577 004A                       u587 0054  
                     u597 007A              __CFG_BORV$LO 0000                       wreg 0009  
            __CFG_IESO$ON 0000                _TX_ADDRESS 0025                      ?_ISR 0070  
                    l1140 024F                      l1138 0258                      l1180 026E  
                    l1500 01AE                      l1182 0273                      l1502 01B2  
                    l1510 01C6                      l1176 0261                      l1504 01B6  
                    l1512 01CA                      l1600 0132                      l1450 0230  
                    l1530 023B                      l1522 01DC                      l1514 01CE  
                    l1506 01BF                      l1602 0136                      l1452 0238  
                    l1540 008F                      l1532 023D                      l1460 0211  
                    l1516 01D6                      l1508 01BF                      l1604 013D  
                    l1542 0099                      l1526 0245                      l1534 023F  
                    l1462 0218                      l1470 01FB                      l1518 01DA  
                    l1606 0141                      l1630 002C                      l1448 022E  
                    l1480 017C                      l1560 00CC                      l1552 00B3  
                    l1544 00A5                      l1528 0278                      l1536 0241  
                    l1464 021A                      l1456 020B                      l1472 0202  
                    l1640 005A                      l1632 0032                      l1490 0195  
                    l1482 017E                      l1562 00D2                      l1546 00B1  
                    l1538 0081                      l1458 020D                      l1474 0206  
                    l1570 00D7                      l1650 0079                      l1642 0066  
                    l1634 003D                      l1484 0182                      l1492 019F  
                    l1556 00C2                      l1476 0208                      l1468 01F9  
                    l1580 0107                      l1572 00D9                      l1644 006B  
                    l1636 0047                      l1820 0225                      l1486 0184  
                    l1494 01A1                      l1566 00D4                      l1558 00C6  
                    l1590 01ED                      l1582 010F                      l1574 00F1  
                    l1646 0070                      l1638 004F                      l1822 0228  
                    l1814 021C                      l1488 0191                      l1496 01A5  
                    l1592 01EF                      l1584 0117                      l1576 00F9  
                    l1648 0071                      l1816 021F                      l1498 01A7  
                    l1594 01EF                      l1586 01DF                      l1578 00FF  
                    l1818 0222                      l1588 01E1                      l1596 0121  
                    l1598 012A                      _LATA 010C                      _LATC 010E  
                    _WREN 0CAA              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 021C                      fsr0h 0005                      fsr1h 0007  
                    indf0 0000                      fsr0l 0004                      indf1 0001  
                    fsr1l 0006                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 0015          NRF_Write_Buf@len 0072          NRF_Write_Buf@reg 0075  
           __CFG_MCLRE$ON 0000          NRF_Write_Reg@reg 0073                     ??_ISR 0070  
           __CFG_PLLEN$ON 0000          __end_of_LED_Init 0273               ?_NRF_SPI_RW 0070  
            _tx_pad_chair 0285                     ?_main 0070        NRF_Tx_CheckACK@sta 0076  
                   _EEADR 0191             __CFG_WDTE$OFF 0000                     _EEPGD 0CAF  
                   _IOCIE 005B                     _IOCIF 0058              _tx_pad_potty 0281  
                   i1l355 0012                     i1l356 0013                     u31_20 000A  
                   u31_21 0009                     u32_20 000F                     u32_21 000E  
        ?_NRF_Tx_CheckACK 0070                     _PORTA 000C                     _PORTC 000E  
                   _TRISA 008C                     _TRISC 008E        __size_of_NRF_Check 0055  
             ?_NRF_Tx_Set 0077               ?_PORTA_Init 0070               ?_PORTC_Init 0070  
      __size_of_PORT_Init 0007                     status 0003                     wtemp0 007E  
       NRF_Write_Buf@pBuf 0071           __initialization 0016              __end_of_main 022D  
        __end_of_Key_Init 0278                    ??_main 007C             _RX_ADDRESS_P0 0048  
           _RX_ADDRESS_P1 0043             _RX_ADDRESS_P2 003E             _RX_ADDRESS_P3 0039  
           _RX_ADDRESS_P4 0034             _RX_ADDRESS_P5 002F                    _EEDATA 0193  
                  _EECON2 0196                    _ANSELA 018C                    _ANSELC 018E  
                  _IOCAF4 1C9C                    i1l1432 0006                    i1l1434 000A  
                  i1l1436 000F                    _OSCCON 0099                    _NRF_On 0278  
                  _SSP1IF 008B                    _TRISA0 0460                    _TRISA2 0462  
                  _TRISC0 0470                    _TRISA4 0464                    _TRISC1 0471  
                  _TRISC2 0472                    _TRISC3 0473       __size_of_NRF_SPI_RW 000E  
          __CFG_PWRTE$OFF 0000              ?_NRF_Tx_Send 0077         __end_of_NRF_Check 00D6  
     __size_of_NRF_Tx_Set 004A       __size_of_PORTA_Init 0009       __size_of_PORTC_Init 0009  
          __CFG_STVREN$ON 0000          __end_of_pad_mode 028C         __end_of_PORT_Init 0268  
                  _memcpy 0120     __end_of_NRF_Port_Init 024F   __end_of__initialization 0029  
               ?_LED_Init 0070            __pcstackCOMMON 0070              __pidataBANK0 014E  
   __end_of_NRF_Write_Buf 01BF     __end_of_NRF_Write_Reg 020A        NRF_Write_Reg@value 0071  
           ??_WirelessPad 007B                __pbssBANK0 0058                 ?_Key_Init 0070  
                 ?_NRF_On 0070                ??_LED_Init 0070                __pmaintext 021C  
           ?_NRF_SPI_Init 0070                __pintentry 0004                   ?_memcpy 0070  
            ??_NRF_SPI_RW 0070              ??_NRF_Tx_Set 0078              ??_PORTA_Init 0070  
            ??_PORTC_Init 0070             ?_NRF_Read_Buf 0071             ?_NRF_Read_Reg 0070  
                 _SSP1BUF 0211                ??_Key_Init 0070       __end_of_WirelessPad 0081  
         __size_of_NRF_On 0003                _pad_aux_ok 0289                _pad_aux_on 027D  
      __end_of_NRF_SPI_RW 023B            ??_NRF_SPI_Init 0070      __size_of_NRF_Tx_Send 001A  
      __end_of_NRF_Tx_Set 0120        __end_of_PORTA_Init 0261        __end_of_PORTC_Init 0258  
          NRF_Tx_Set@addr 007A            NRF_Tx_Send@len 0077           __size_of_memcpy 002E  
                 __ptext1 002C                   __ptext2 0120                   __ptext3 00D6  
                 __ptext4 01DE                   __ptext5 01BF                   __ptext6 01F8  
                 __ptext7 020A                   __ptext8 023B                   __ptext9 0245  
            __size_of_ISR 0011            ??_NRF_Read_Buf 0073            ??_NRF_Read_Reg 0071  
                 _tx_addr 002A      end_of_initialization 0029  __size_of_NRF_Tx_CheckACK 001F  
                 memcpy@d 0079                   memcpy@n 0072                   memcpy@s 0075  
                 init_ram 0268                   initloop 0269                 _NRF_Check 0081  
           NRF_SPI_RW@dat 0070           NRF_Read_Buf@len 0072           NRF_Read_Buf@reg 0076  
               _PORT_Init 0261           NRF_Read_Reg@reg 0072          __CFG_FOSC$INTOSC 0000  
             _WirelessPad 002C            NRF_Write_Buf@i 0076                _tx_pad_bed 027F  
              _tx_pad_aux 0287                _tx_pad_nci 0283            __end_of_NRF_On 027B  
       __size_of_LED_Init 0005                ?_NRF_Check 0070            __end_of_memcpy 014E  
              ?_PORT_Init 0070       start_initialization 0016               __end_of_ISR 0015  
    __end_of_NRF_SPI_Init 0245       NRF_Write_Reg@status 0074                  ??_NRF_On 0070  
       __size_of_Key_Init 0005         ??_NRF_Tx_CheckACK 0075      __end_of_NRF_Read_Buf 019E  
    __end_of_NRF_Read_Reg 021C               __pdataBANK0 0020                  ??_memcpy 0074  
  __size_of_NRF_Port_Init 000A             NRF_Read_Buf@i 0077               __pbssCOMMON 007C  
               ___latbits 0000             __pcstackBANK0 004D    __size_of_NRF_Write_Buf 0021  
  __size_of_NRF_Write_Reg 0012       __end_of_pad_aux_off 027D          NRF_Tx_Send@txbuf 007A  
             ??_NRF_Check 0078               ??_PORT_Init 0070                NRF_Check@i 0057  
           NRF_Tx_Set@ack 0077             _NRF_Port_Init 0245                  _LED_Init 026E  
           ??_NRF_Tx_Send 0078                  _SSP1CON1 0215                  _SSP1STAT 0214  
           _NRF_Write_Buf 019E             _NRF_Write_Reg 01F8     __size_of_NRF_SPI_Init 000A  
            NRF_Check@buf 0052              NRF_Check@tuf 004D              ?_WirelessPad 0070  
          ?_NRF_Port_Init 0070               _pad_aux_dat 007C               _pad_aux_off 027B  
                _Key_Init 0273     __size_of_NRF_Read_Buf 0023     __size_of_NRF_Read_Reg 0012  
               memcpy@tmp 0077              _NRF_SPI_Init 023B            ?_NRF_Write_Buf 0071  
          ?_NRF_Write_Reg 0071       __end_of_NRF_Tx_Send 01F8        __end_of_pad_aux_ok 028B  
      __end_of_pad_aux_on 027F                  __ptext10 0278                  __ptext11 0081  
                __ptext12 019E                  __ptext13 017B                  __ptext14 022D  
                __ptext15 0261                  __ptext16 024F                  __ptext17 0258  
                __ptext18 026E                  __ptext19 0273              _NRF_Read_Buf 017B  
            _NRF_Read_Reg 020A           _NRF_Tx_CheckACK 01BF                  _pad_mode 028B  
    __end_of_tx_pad_chair 0287             __size_of_main 0011      __end_of_tx_pad_potty 0283  
                int$flags 007E              _SSP1STATbits 0214                  memcpy@d1 0078  
                memcpy@s1 0070           ??_NRF_Port_Init 0070                  intlevel1 0000  
       __CFG_CLKOUTEN$OFF 0000               _NRF_Tx_Send 01DE           ??_NRF_Write_Buf 0073  
         ??_NRF_Write_Reg 0072                _NRF_SPI_RW 022D             __pstringtext1 027B  
           __pstringtext2 027D             __pstringtext3 027F             __pstringtext4 0281  
           __pstringtext5 0283             __pstringtext6 0285             __pstringtext7 0287  
           __pstringtext8 028B             __pstringtext9 0289        NRF_Read_Reg@status 0073  
 __end_of_NRF_Tx_CheckACK 01DE        __end_of_tx_pad_bed 0281        __end_of_tx_pad_aux 0289  
      __end_of_tx_pad_nci 0285                _NRF_Tx_Set 00D6                _PORTA_Init 0258  
              _PORTC_Init 024F          NRF_Read_Buf@pBuf 0071      __size_of_WirelessPad 0055  
