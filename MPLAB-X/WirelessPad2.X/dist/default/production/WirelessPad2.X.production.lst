

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 15 10:12:10 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	dabs	1,0x7E,2
    56  0000                     
    57                           ; Version 2.10
    58                           ; Generated 31/07/2019 GMT
    59                           ; 
    60                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC16F1823 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     	;# 
    92  0001                     	;# 
    93  0002                     	;# 
    94  0003                     	;# 
    95  0004                     	;# 
    96  0005                     	;# 
    97  0006                     	;# 
    98  0007                     	;# 
    99  0008                     	;# 
   100  0009                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010E                     	;# 
   135  0111                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0115                     	;# 
   140  0116                     	;# 
   141  0117                     	;# 
   142  0118                     	;# 
   143  0119                     	;# 
   144  011A                     	;# 
   145  011B                     	;# 
   146  011D                     	;# 
   147  011D                     	;# 
   148  018C                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019D                     	;# 
   168  019E                     	;# 
   169  019F                     	;# 
   170  020C                     	;# 
   171  020E                     	;# 
   172  0211                     	;# 
   173  0211                     	;# 
   174  0212                     	;# 
   175  0212                     	;# 
   176  0213                     	;# 
   177  0213                     	;# 
   178  0214                     	;# 
   179  0214                     	;# 
   180  0215                     	;# 
   181  0215                     	;# 
   182  0215                     	;# 
   183  0216                     	;# 
   184  0216                     	;# 
   185  0217                     	;# 
   186  0217                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0391                     	;# 
   196  0392                     	;# 
   197  0393                     	;# 
   198  039A                     	;# 
   199  039C                     	;# 
   200  039D                     	;# 
   201  039E                     	;# 
   202  039F                     	;# 
   203  0FE4                     	;# 
   204  0FE5                     	;# 
   205  0FE6                     	;# 
   206  0FE7                     	;# 
   207  0FE8                     	;# 
   208  0FE9                     	;# 
   209  0FEA                     	;# 
   210  0FEB                     	;# 
   211  0FED                     	;# 
   212  0FEE                     	;# 
   213  0FEF                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000E                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  008C                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  010E                     	;# 
   258  0111                     	;# 
   259  0112                     	;# 
   260  0113                     	;# 
   261  0114                     	;# 
   262  0115                     	;# 
   263  0116                     	;# 
   264  0117                     	;# 
   265  0118                     	;# 
   266  0119                     	;# 
   267  011A                     	;# 
   268  011B                     	;# 
   269  011D                     	;# 
   270  011D                     	;# 
   271  018C                     	;# 
   272  018E                     	;# 
   273  0191                     	;# 
   274  0191                     	;# 
   275  0192                     	;# 
   276  0193                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0194                     	;# 
   280  0195                     	;# 
   281  0196                     	;# 
   282  0199                     	;# 
   283  019A                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019B                     	;# 
   288  019C                     	;# 
   289  019C                     	;# 
   290  019D                     	;# 
   291  019E                     	;# 
   292  019F                     	;# 
   293  020C                     	;# 
   294  020E                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0216                     	;# 
   307  0216                     	;# 
   308  0217                     	;# 
   309  0217                     	;# 
   310  0291                     	;# 
   311  0291                     	;# 
   312  0292                     	;# 
   313  0293                     	;# 
   314  0294                     	;# 
   315  0295                     	;# 
   316  0295                     	;# 
   317  0296                     	;# 
   318  0391                     	;# 
   319  0392                     	;# 
   320  0393                     	;# 
   321  039A                     	;# 
   322  039C                     	;# 
   323  039D                     	;# 
   324  039E                     	;# 
   325  039F                     	;# 
   326  0FE4                     	;# 
   327  0FE5                     	;# 
   328  0FE6                     	;# 
   329  0FE7                     	;# 
   330  0FE8                     	;# 
   331  0FE9                     	;# 
   332  0FEA                     	;# 
   333  0FEB                     	;# 
   334  0FED                     	;# 
   335  0FEE                     	;# 
   336  0FEF                     	;# 
   337  0000                     	;# 
   338  0001                     	;# 
   339  0002                     	;# 
   340  0003                     	;# 
   341  0004                     	;# 
   342  0005                     	;# 
   343  0006                     	;# 
   344  0007                     	;# 
   345  0008                     	;# 
   346  0009                     	;# 
   347  000A                     	;# 
   348  000B                     	;# 
   349  000C                     	;# 
   350  000E                     	;# 
   351  0011                     	;# 
   352  0012                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0016                     	;# 
   356  0017                     	;# 
   357  0018                     	;# 
   358  0019                     	;# 
   359  001A                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001E                     	;# 
   363  001F                     	;# 
   364  008C                     	;# 
   365  008E                     	;# 
   366  0091                     	;# 
   367  0092                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  010C                     	;# 
   380  010E                     	;# 
   381  0111                     	;# 
   382  0112                     	;# 
   383  0113                     	;# 
   384  0114                     	;# 
   385  0115                     	;# 
   386  0116                     	;# 
   387  0117                     	;# 
   388  0118                     	;# 
   389  0119                     	;# 
   390  011A                     	;# 
   391  011B                     	;# 
   392  011D                     	;# 
   393  011D                     	;# 
   394  018C                     	;# 
   395  018E                     	;# 
   396  0191                     	;# 
   397  0191                     	;# 
   398  0192                     	;# 
   399  0193                     	;# 
   400  0193                     	;# 
   401  0193                     	;# 
   402  0194                     	;# 
   403  0195                     	;# 
   404  0196                     	;# 
   405  0199                     	;# 
   406  019A                     	;# 
   407  019B                     	;# 
   408  019B                     	;# 
   409  019B                     	;# 
   410  019B                     	;# 
   411  019C                     	;# 
   412  019C                     	;# 
   413  019D                     	;# 
   414  019E                     	;# 
   415  019F                     	;# 
   416  020C                     	;# 
   417  020E                     	;# 
   418  0211                     	;# 
   419  0211                     	;# 
   420  0212                     	;# 
   421  0212                     	;# 
   422  0213                     	;# 
   423  0213                     	;# 
   424  0214                     	;# 
   425  0214                     	;# 
   426  0215                     	;# 
   427  0215                     	;# 
   428  0215                     	;# 
   429  0216                     	;# 
   430  0216                     	;# 
   431  0217                     	;# 
   432  0217                     	;# 
   433  0291                     	;# 
   434  0291                     	;# 
   435  0292                     	;# 
   436  0293                     	;# 
   437  0294                     	;# 
   438  0295                     	;# 
   439  0295                     	;# 
   440  0296                     	;# 
   441  0391                     	;# 
   442  0392                     	;# 
   443  0393                     	;# 
   444  039A                     	;# 
   445  039C                     	;# 
   446  039D                     	;# 
   447  039E                     	;# 
   448  039F                     	;# 
   449  0FE4                     	;# 
   450  0FE5                     	;# 
   451  0FE6                     	;# 
   452  0FE7                     	;# 
   453  0FE8                     	;# 
   454  0FE9                     	;# 
   455  0FEA                     	;# 
   456  0FEB                     	;# 
   457  0FED                     	;# 
   458  0FEE                     	;# 
   459  0FEF                     	;# 
   460  0000                     	;# 
   461  0001                     	;# 
   462  0002                     	;# 
   463  0003                     	;# 
   464  0004                     	;# 
   465  0005                     	;# 
   466  0006                     	;# 
   467  0007                     	;# 
   468  0008                     	;# 
   469  0009                     	;# 
   470  000A                     	;# 
   471  000B                     	;# 
   472  000C                     	;# 
   473  000E                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0015                     	;# 
   477  0016                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001C                     	;# 
   485  001E                     	;# 
   486  001F                     	;# 
   487  008C                     	;# 
   488  008E                     	;# 
   489  0091                     	;# 
   490  0092                     	;# 
   491  0095                     	;# 
   492  0096                     	;# 
   493  0097                     	;# 
   494  0098                     	;# 
   495  0099                     	;# 
   496  009A                     	;# 
   497  009B                     	;# 
   498  009B                     	;# 
   499  009C                     	;# 
   500  009D                     	;# 
   501  009E                     	;# 
   502  010C                     	;# 
   503  010E                     	;# 
   504  0111                     	;# 
   505  0112                     	;# 
   506  0113                     	;# 
   507  0114                     	;# 
   508  0115                     	;# 
   509  0116                     	;# 
   510  0117                     	;# 
   511  0118                     	;# 
   512  0119                     	;# 
   513  011A                     	;# 
   514  011B                     	;# 
   515  011D                     	;# 
   516  011D                     	;# 
   517  018C                     	;# 
   518  018E                     	;# 
   519  0191                     	;# 
   520  0191                     	;# 
   521  0192                     	;# 
   522  0193                     	;# 
   523  0193                     	;# 
   524  0193                     	;# 
   525  0194                     	;# 
   526  0195                     	;# 
   527  0196                     	;# 
   528  0199                     	;# 
   529  019A                     	;# 
   530  019B                     	;# 
   531  019B                     	;# 
   532  019B                     	;# 
   533  019B                     	;# 
   534  019C                     	;# 
   535  019C                     	;# 
   536  019D                     	;# 
   537  019E                     	;# 
   538  019F                     	;# 
   539  020C                     	;# 
   540  020E                     	;# 
   541  0211                     	;# 
   542  0211                     	;# 
   543  0212                     	;# 
   544  0212                     	;# 
   545  0213                     	;# 
   546  0213                     	;# 
   547  0214                     	;# 
   548  0214                     	;# 
   549  0215                     	;# 
   550  0215                     	;# 
   551  0215                     	;# 
   552  0216                     	;# 
   553  0216                     	;# 
   554  0217                     	;# 
   555  0217                     	;# 
   556  0291                     	;# 
   557  0291                     	;# 
   558  0292                     	;# 
   559  0293                     	;# 
   560  0294                     	;# 
   561  0295                     	;# 
   562  0295                     	;# 
   563  0296                     	;# 
   564  0391                     	;# 
   565  0392                     	;# 
   566  0393                     	;# 
   567  039A                     	;# 
   568  039C                     	;# 
   569  039D                     	;# 
   570  039E                     	;# 
   571  039F                     	;# 
   572  0FE4                     	;# 
   573  0FE5                     	;# 
   574  0FE6                     	;# 
   575  0FE7                     	;# 
   576  0FE8                     	;# 
   577  0FE9                     	;# 
   578  0FEA                     	;# 
   579  0FEB                     	;# 
   580  0FED                     	;# 
   581  0FEE                     	;# 
   582  0FEF                     	;# 
   583  0000                     	;# 
   584  0001                     	;# 
   585  0002                     	;# 
   586  0003                     	;# 
   587  0004                     	;# 
   588  0005                     	;# 
   589  0006                     	;# 
   590  0007                     	;# 
   591  0008                     	;# 
   592  0009                     	;# 
   593  000A                     	;# 
   594  000B                     	;# 
   595  000C                     	;# 
   596  000E                     	;# 
   597  0011                     	;# 
   598  0012                     	;# 
   599  0015                     	;# 
   600  0016                     	;# 
   601  0016                     	;# 
   602  0017                     	;# 
   603  0018                     	;# 
   604  0019                     	;# 
   605  001A                     	;# 
   606  001B                     	;# 
   607  001C                     	;# 
   608  001E                     	;# 
   609  001F                     	;# 
   610  008C                     	;# 
   611  008E                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0095                     	;# 
   615  0096                     	;# 
   616  0097                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  010C                     	;# 
   626  010E                     	;# 
   627  0111                     	;# 
   628  0112                     	;# 
   629  0113                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0118                     	;# 
   635  0119                     	;# 
   636  011A                     	;# 
   637  011B                     	;# 
   638  011D                     	;# 
   639  011D                     	;# 
   640  018C                     	;# 
   641  018E                     	;# 
   642  0191                     	;# 
   643  0191                     	;# 
   644  0192                     	;# 
   645  0193                     	;# 
   646  0193                     	;# 
   647  0193                     	;# 
   648  0194                     	;# 
   649  0195                     	;# 
   650  0196                     	;# 
   651  0199                     	;# 
   652  019A                     	;# 
   653  019B                     	;# 
   654  019B                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019C                     	;# 
   658  019C                     	;# 
   659  019D                     	;# 
   660  019E                     	;# 
   661  019F                     	;# 
   662  020C                     	;# 
   663  020E                     	;# 
   664  0211                     	;# 
   665  0211                     	;# 
   666  0212                     	;# 
   667  0212                     	;# 
   668  0213                     	;# 
   669  0213                     	;# 
   670  0214                     	;# 
   671  0214                     	;# 
   672  0215                     	;# 
   673  0215                     	;# 
   674  0215                     	;# 
   675  0216                     	;# 
   676  0216                     	;# 
   677  0217                     	;# 
   678  0217                     	;# 
   679  0291                     	;# 
   680  0291                     	;# 
   681  0292                     	;# 
   682  0293                     	;# 
   683  0294                     	;# 
   684  0295                     	;# 
   685  0295                     	;# 
   686  0296                     	;# 
   687  0391                     	;# 
   688  0392                     	;# 
   689  0393                     	;# 
   690  039A                     	;# 
   691  039C                     	;# 
   692  039D                     	;# 
   693  039E                     	;# 
   694  039F                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000E                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0015                     	;# 
   723  0016                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001B                     	;# 
   730  001C                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  008C                     	;# 
   734  008E                     	;# 
   735  0091                     	;# 
   736  0092                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  010C                     	;# 
   749  010E                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011D                     	;# 
   762  011D                     	;# 
   763  018C                     	;# 
   764  018E                     	;# 
   765  0191                     	;# 
   766  0191                     	;# 
   767  0192                     	;# 
   768  0193                     	;# 
   769  0193                     	;# 
   770  0193                     	;# 
   771  0194                     	;# 
   772  0195                     	;# 
   773  0196                     	;# 
   774  0199                     	;# 
   775  019A                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019C                     	;# 
   781  019C                     	;# 
   782  019D                     	;# 
   783  019E                     	;# 
   784  019F                     	;# 
   785  020C                     	;# 
   786  020E                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0212                     	;# 
   791  0213                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0214                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0215                     	;# 
   798  0216                     	;# 
   799  0216                     	;# 
   800  0217                     	;# 
   801  0217                     	;# 
   802  0291                     	;# 
   803  0291                     	;# 
   804  0292                     	;# 
   805  0293                     	;# 
   806  0294                     	;# 
   807  0295                     	;# 
   808  0295                     	;# 
   809  0296                     	;# 
   810  0391                     	;# 
   811  0392                     	;# 
   812  0393                     	;# 
   813  039A                     	;# 
   814  039C                     	;# 
   815  039D                     	;# 
   816  039E                     	;# 
   817  039F                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829                           
   830                           	psect	idataBANK0
   831  015F                     __pidataBANK0:	
   832                           
   833                           ;initializer for NRF_Check@F2718
   834  015F  34E1               	retlw	225
   835  0160  34E2               	retlw	226
   836  0161  34E3               	retlw	227
   837  0162  34E4               	retlw	228
   838  0163  3405               	retlw	5
   839                           
   840                           ;initializer for _TX_ADDRESS
   841  0164  340F               	retlw	15
   842  0165  340E               	retlw	14
   843  0166  340D               	retlw	13
   844  0167  340C               	retlw	12
   845  0168  340B               	retlw	11
   846                           
   847                           ;initializer for _rx_addr_0
   848  0169  340F               	retlw	15
   849  016A  340E               	retlw	14
   850  016B  340D               	retlw	13
   851  016C  340C               	retlw	12
   852  016D  340B               	retlw	11
   853                           
   854                           ;initializer for _tx_addr
   855  016E  340F               	retlw	15
   856  016F  340E               	retlw	14
   857  0170  340D               	retlw	13
   858  0171  340C               	retlw	12
   859  0172  340B               	retlw	11
   860                           
   861                           ;initializer for _RX_ADDRESS_P5
   862  0173  340E               	retlw	14
   863  0174  3410               	retlw	16
   864  0175  3409               	retlw	9
   865  0176  3408               	retlw	8
   866  0177  3407               	retlw	7
   867                           
   868                           ;initializer for _RX_ADDRESS_P4
   869  0178  340D               	retlw	13
   870  0179  3410               	retlw	16
   871  017A  3409               	retlw	9
   872  017B  3408               	retlw	8
   873  017C  3407               	retlw	7
   874                           
   875                           ;initializer for _RX_ADDRESS_P3
   876  017D  340C               	retlw	12
   877  017E  3410               	retlw	16
   878  017F  3409               	retlw	9
   879  0180  3408               	retlw	8
   880  0181  3407               	retlw	7
   881                           
   882                           ;initializer for _RX_ADDRESS_P2
   883  0182  340B               	retlw	11
   884  0183  3410               	retlw	16
   885  0184  3409               	retlw	9
   886  0185  3408               	retlw	8
   887  0186  3407               	retlw	7
   888                           
   889                           ;initializer for _RX_ADDRESS_P1
   890  0187  340A               	retlw	10
   891  0188  3410               	retlw	16
   892  0189  3409               	retlw	9
   893  018A  3408               	retlw	8
   894  018B  3407               	retlw	7
   895                           
   896                           ;initializer for _RX_ADDRESS_P0
   897  018C  340F               	retlw	15
   898  018D  340E               	retlw	14
   899  018E  340D               	retlw	13
   900  018F  340C               	retlw	12
   901  0190  340B               	retlw	11
   902                           
   903                           	psect	idataBANK1
   904  0260                     __pidataBANK1:	
   905                           
   906                           ;initializer for _rx_addr_5
   907  0260  3455               	retlw	85
   908  0261  348E               	retlw	142
   909  0262  3429               	retlw	41
   910  0263  34F3               	retlw	243
   911  0264  34A5               	retlw	165
   912                           
   913                           ;initializer for _rx_addr_4
   914  0265  3488               	retlw	136
   915  0266  348E               	retlw	142
   916  0267  3429               	retlw	41
   917  0268  34F3               	retlw	243
   918  0269  34A5               	retlw	165
   919                           
   920                           ;initializer for _rx_addr_3
   921  026A  3433               	retlw	51
   922  026B  348E               	retlw	142
   923  026C  3429               	retlw	41
   924  026D  34F3               	retlw	243
   925  026E  34A5               	retlw	165
   926                           
   927                           ;initializer for _rx_addr_2
   928  026F  3499               	retlw	153
   929  0270  348E               	retlw	142
   930  0271  3429               	retlw	41
   931  0272  34F3               	retlw	243
   932  0273  34A5               	retlw	165
   933                           
   934                           ;initializer for _rx_addr_1
   935  0274  3466               	retlw	102
   936  0275  348E               	retlw	142
   937  0276  3429               	retlw	41
   938  0277  34F3               	retlw	243
   939  0278  34A5               	retlw	165
   940                           
   941                           	psect	stringtext1
   942  036E                     __pstringtext1:	
   943  036E                     _pad_aux_off:	
   944  036E  3403               	retlw	3
   945  036F  3403               	retlw	3
   946  0370                     __end_of_pad_aux_off:	
   947                           
   948                           	psect	stringtext2
   949  0370                     __pstringtext2:	
   950  0370                     _pad_aux_on:	
   951  0370  3402               	retlw	2
   952  0371  3402               	retlw	2
   953  0372                     __end_of_pad_aux_on:	
   954                           
   955                           	psect	stringtext3
   956  0372                     __pstringtext3:	
   957  0372                     _tx_pad_bed:	
   958  0372  3498               	retlw	152
   959  0373  3458               	retlw	88
   960  0374                     __end_of_tx_pad_bed:	
   961                           
   962                           	psect	stringtext4
   963  0374                     __pstringtext4:	
   964  0374                     _tx_pad_potty:	
   965  0374  3488               	retlw	136
   966  0375  3468               	retlw	104
   967  0376                     __end_of_tx_pad_potty:	
   968                           
   969                           	psect	stringtext5
   970  0376                     __pstringtext5:	
   971  0376                     _tx_pad_nci:	
   972  0376  3486               	retlw	134
   973  0377  3466               	retlw	102
   974  0378                     __end_of_tx_pad_nci:	
   975                           
   976                           	psect	stringtext6
   977  0378                     __pstringtext6:	
   978  0378                     _tx_pad_chair:	
   979  0378  3468               	retlw	104
   980  0379  3486               	retlw	134
   981  037A                     __end_of_tx_pad_chair:	
   982                           
   983                           	psect	stringtext7
   984  037A                     __pstringtext7:	
   985  037A                     _tx_pad_aux:	
   986  037A  3466               	retlw	102
   987  037B  3488               	retlw	136
   988  037C                     __end_of_tx_pad_aux:	
   989                           
   990                           	psect	stringtext8
   991  037C                     __pstringtext8:	
   992  037C                     _pad_aux_ok:	
   993  037C  3401               	retlw	1
   994  037D  3401               	retlw	1
   995  037E                     __end_of_pad_aux_ok:	
   996  000E                     _PORTC	set	14
   997  000C                     _PORTA	set	12
   998  005B                     _IOCIE	set	91
   999  0058                     _IOCIF	set	88
  1000  0073                     _RC3	set	115
  1001  0064                     _RA4	set	100
  1002  008B                     _SSP1IF	set	139
  1003  0065                     _RA5	set	101
  1004  0062                     _RA2	set	98
  1005  0060                     _RA0	set	96
  1006  0099                     _OSCCON	set	153
  1007  009B                     _ADRESL	set	155
  1008  009C                     _ADRESH	set	156
  1009  009D                     _ADCON0bits	set	157
  1010  009D                     _ADCON0	set	157
  1011  009E                     _ADCON1	set	158
  1012  008E                     _TRISC	set	142
  1013  008C                     _TRISA	set	140
  1014  04E8                     _ADON	set	1256
  1015  0473                     _TRISC3	set	1139
  1016  0464                     _TRISA4	set	1124
  1017  0460                     _TRISA0	set	1120
  1018  0462                     _TRISA2	set	1122
  1019  0470                     _TRISC0	set	1136
  1020  0472                     _TRISC2	set	1138
  1021  0471                     _TRISC1	set	1137
  1022  0117                     _FVRCON	set	279
  1023  010E                     _LATC	set	270
  1024  010C                     _LATA	set	268
  1025  08BE                     _FVRRDY	set	2238
  1026  08BF                     _FVREN	set	2239
  1027  018E                     _ANSELC	set	398
  1028  018C                     _ANSELA	set	396
  1029  0215                     _SSP1CON1	set	533
  1030  0211                     _SSP1BUF	set	529
  1031  0214                     _SSP1STATbits	set	532
  1032  0214                     _SSP1STAT	set	532
  1033  1C9C                     _IOCAF4	set	7324
  1034                           
  1035                           ; #config settings
  1036  0000                     
  1037                           	psect	cinit
  1038  0012                     start_initialization:	
  1039  0012                     __initialization:	
  1040                           
  1041                           ; Initialize objects allocated to BANK0
  1042  0012  305F               	movlw	low __pidataBANK0
  1043  0013  0084               	movwf	4
  1044  0014  3081               	movlw	(high __pidataBANK0)| (0+128)
  1045  0015  0085               	movwf	5
  1046  0016  3020               	movlw	low __pdataBANK0
  1047  0017  0086               	movwf	6
  1048  0018  3000               	movlw	high __pdataBANK0
  1049  0019  0087               	movwf	7
  1050  001A  3032               	movlw	50
  1051  001B  234C               	fcall	init_ram
  1052                           
  1053                           ; Initialize objects allocated to BANK1
  1054  001C  3060               	movlw	low __pidataBANK1
  1055  001D  0084               	movwf	4
  1056  001E  3082               	movlw	(high __pidataBANK1)| (0+128)
  1057  001F  0085               	movwf	5
  1058  0020  30A0               	movlw	low __pdataBANK1
  1059  0021  0086               	movwf	6
  1060  0022  3000               	movlw	high __pdataBANK1
  1061  0023  0087               	movwf	7
  1062  0024  3019               	movlw	25
  1063  0025  234C               	fcall	init_ram
  1064                           
  1065                           ; Clear objects allocated to BANK0
  1066  0026  01E4               	clrf	__pbssBANK0& (0+127)
  1067  0027  01E5               	clrf	(__pbssBANK0+1)& (0+127)
  1068  0028  01E6               	clrf	(__pbssBANK0+2)& (0+127)
  1069  0029  01E7               	clrf	(__pbssBANK0+3)& (0+127)
  1070  002A  01E8               	clrf	(__pbssBANK0+4)& (0+127)
  1071  002B  01E9               	clrf	(__pbssBANK0+5)& (0+127)
  1072  002C  01EA               	clrf	(__pbssBANK0+6)& (0+127)
  1073  002D  01EB               	clrf	(__pbssBANK0+7)& (0+127)
  1074  002E  01EC               	clrf	(__pbssBANK0+8)& (0+127)
  1075  002F  01ED               	clrf	(__pbssBANK0+9)& (0+127)
  1076  0030                     end_of_initialization:	
  1077                           ;End of C runtime variable initialization code
  1078                           
  1079  0030                     __end_of__initialization:	
  1080  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1081  0031  0020               	movlb	0
  1082  0032  2ACA               	ljmp	_main	;jump to C main() function
  1083                           
  1084                           	psect	bssBANK0
  1085  0064                     __pbssBANK0:	
  1086  0064                     NRF_Check@F2720:	
  1087  0064                     	ds	5
  1088  0069                     WirelessPad@F2734:	
  1089  0069                     	ds	2
  1090  006B                     _PAD_MODE:	
  1091  006B                     	ds	1
  1092  006C                     _pad_aux_dat:	
  1093  006C                     	ds	2
  1094                           
  1095                           	psect	dataBANK0
  1096  0020                     __pdataBANK0:	
  1097  0020                     NRF_Check@F2718:	
  1098  0020                     	ds	5
  1099  0025                     _TX_ADDRESS:	
  1100  0025                     	ds	5
  1101  002A                     _rx_addr_0:	
  1102  002A                     	ds	5
  1103  002F                     _tx_addr:	
  1104  002F                     	ds	5
  1105  0034                     _RX_ADDRESS_P5:	
  1106  0034                     	ds	5
  1107  0039                     _RX_ADDRESS_P4:	
  1108  0039                     	ds	5
  1109  003E                     _RX_ADDRESS_P3:	
  1110  003E                     	ds	5
  1111  0043                     _RX_ADDRESS_P2:	
  1112  0043                     	ds	5
  1113  0048                     _RX_ADDRESS_P1:	
  1114  0048                     	ds	5
  1115  004D                     _RX_ADDRESS_P0:	
  1116  004D                     	ds	5
  1117                           
  1118                           	psect	dataBANK1
  1119  00A0                     __pdataBANK1:	
  1120  00A0                     _rx_addr_5:	
  1121  00A0                     	ds	5
  1122  00A5                     _rx_addr_4:	
  1123  00A5                     	ds	5
  1124  00AA                     _rx_addr_3:	
  1125  00AA                     	ds	5
  1126  00AF                     _rx_addr_2:	
  1127  00AF                     	ds	5
  1128  00B4                     _rx_addr_1:	
  1129  00B4                     	ds	5
  1130                           
  1131                           	psect	inittext
  1132  034C                     init_ram:	
  1133  034C  00FE               	movwf	126
  1134  034D                     initloop:	
  1135  034D  0012               	moviw fsr0++
  1136  034E  001E               	movwi fsr1++
  1137  034F  0BFE               	decfsz	126,f
  1138  0350  2B4D               	goto	initloop
  1139  0351  3400               	retlw	0
  1140                           
  1141                           	psect	cstackCOMMON
  1142  0070                     __pcstackCOMMON:	
  1143  0070                     ?_NRF_Get_Status:	
  1144  0070                     ?_NRF_Read_RX_Pload:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_NRF_Flush_RX:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_NRF_Tx_CheckACK:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_PORTA_Init:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ??_PORTA_Init:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_PORTC_Init:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ??_PORTC_Init:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_WirelessPad:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_memcpy:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_NRF_Port_Init:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ??_NRF_Port_Init:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_NRF_On:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ??_NRF_On:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?_NRF_SPI_Init:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ??_NRF_SPI_Init:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?_NRF_SPI_RW:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ??_NRF_SPI_RW:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?_NRF_Read_Reg:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?_NRF_Check:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_NRF_RxPacket:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?_NRF_Get_Current_Pipenum:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?_NRF_Clear_IRQ:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     ?_NRF_Rx_Receive:	
  1211                           ; 1 bytes @ 0x0
  1212                           
  1213  0070                     ?_PORT_Init:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     ??_PORT_Init:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ?_LED_Init:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     ??_LED_Init:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     ?_LEDx:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     ??_LEDx:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     ?_BEEP_Init:	
  1232                           ; 1 bytes @ 0x0
  1233                           
  1234  0070                     ??_BEEP_Init:	
  1235                           ; 1 bytes @ 0x0
  1236                           
  1237  0070                     ?_ADC_Init:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0070                     ??_ADC_Init:	
  1241                           ; 1 bytes @ 0x0
  1242                           
  1243  0070                     ?_Key_Init:	
  1244                           ; 1 bytes @ 0x0
  1245                           
  1246  0070                     ??_Key_Init:	
  1247                           ; 1 bytes @ 0x0
  1248                           
  1249  0070                     ?_ISR:	
  1250                           ; 1 bytes @ 0x0
  1251                           
  1252  0070                     ??_ISR:	
  1253                           ; 1 bytes @ 0x0
  1254                           
  1255  0070                     ?_main:	
  1256                           ; 1 bytes @ 0x0
  1257                           
  1258  0070                     ?_ADC_Read:	
  1259                           ; 1 bytes @ 0x0
  1260                           
  1261  0070                     NRF_SPI_RW@dat:	
  1262                           ; 2 bytes @ 0x0
  1263                           
  1264  0070                     memcpy@s1:	
  1265                           ; 1 bytes @ 0x0
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x0
  1269  0070                     	ds	1
  1270  0071                     ??_NRF_Read_Reg:	
  1271  0071                     ?_NRF_Write_Reg:	
  1272                           ; 1 bytes @ 0x1
  1273                           
  1274  0071                     ?_NRF_Read_Buf:	
  1275                           ; 1 bytes @ 0x1
  1276                           
  1277  0071                     ?_NRF_Write_Buf:	
  1278                           ; 1 bytes @ 0x1
  1279                           
  1280  0071                     NRF_Write_Reg@value:	
  1281                           ; 1 bytes @ 0x1
  1282                           
  1283  0071                     NRF_Read_Buf@pBuf:	
  1284                           ; 1 bytes @ 0x1
  1285                           
  1286  0071                     NRF_Write_Buf@pBuf:	
  1287                           ; 1 bytes @ 0x1
  1288                           
  1289  0071                     LEDx@num:	
  1290                           ; 1 bytes @ 0x1
  1291                           
  1292                           
  1293                           ; 1 bytes @ 0x1
  1294  0071                     	ds	1
  1295  0072                     ??_NRF_Write_Reg:	
  1296  0072                     ??_ADC_Read:	
  1297                           ; 1 bytes @ 0x2
  1298                           
  1299  0072                     NRF_Read_Reg@reg:	
  1300                           ; 1 bytes @ 0x2
  1301                           
  1302  0072                     NRF_Read_Buf@len:	
  1303                           ; 1 bytes @ 0x2
  1304                           
  1305  0072                     NRF_Write_Buf@len:	
  1306                           ; 1 bytes @ 0x2
  1307                           
  1308  0072                     memcpy@n:	
  1309                           ; 1 bytes @ 0x2
  1310                           
  1311                           
  1312                           ; 2 bytes @ 0x2
  1313  0072                     	ds	1
  1314  0073                     ??_NRF_Read_Buf:	
  1315  0073                     ??_NRF_Write_Buf:	
  1316                           ; 1 bytes @ 0x3
  1317                           
  1318  0073                     NRF_Read_Reg@status:	
  1319                           ; 1 bytes @ 0x3
  1320                           
  1321  0073                     NRF_Write_Reg@reg:	
  1322                           ; 1 bytes @ 0x3
  1323                           
  1324                           
  1325                           ; 1 bytes @ 0x3
  1326  0073                     	ds	1
  1327  0074                     ??_NRF_Get_Status:	
  1328  0074                     ??_memcpy:	
  1329                           ; 1 bytes @ 0x4
  1330                           
  1331  0074                     ??_NRF_Get_Current_Pipenum:	
  1332                           ; 1 bytes @ 0x4
  1333                           
  1334  0074                     NRF_Write_Reg@status:	
  1335                           ; 1 bytes @ 0x4
  1336                           
  1337  0074                     ADC_Read@value:	
  1338                           ; 1 bytes @ 0x4
  1339                           
  1340                           
  1341                           ; 2 bytes @ 0x4
  1342  0074                     	ds	1
  1343  0075                     ??_NRF_Flush_RX:	
  1344  0075                     ??_NRF_Tx_CheckACK:	
  1345                           ; 1 bytes @ 0x5
  1346                           
  1347  0075                     ??_NRF_Clear_IRQ:	
  1348                           ; 1 bytes @ 0x5
  1349                           
  1350  0075                     ?_NRF_Rx_Set:	
  1351                           ; 1 bytes @ 0x5
  1352                           
  1353  0075                     ??_NRF_Rx_Receive:	
  1354                           ; 1 bytes @ 0x5
  1355                           
  1356  0075                     NRF_Write_Buf@reg:	
  1357                           ; 1 bytes @ 0x5
  1358                           
  1359  0075                     NRF_Rx_Set@pipe:	
  1360                           ; 1 bytes @ 0x5
  1361                           
  1362  0075                     memcpy@s:	
  1363                           ; 1 bytes @ 0x5
  1364                           
  1365                           
  1366                           ; 2 bytes @ 0x5
  1367  0075                     	ds	1
  1368  0076                     ??_NRF_Rx_Set:	
  1369  0076                     NRF_Read_Buf@reg:	
  1370                           ; 1 bytes @ 0x6
  1371                           
  1372  0076                     NRF_Write_Buf@i:	
  1373                           ; 1 bytes @ 0x6
  1374                           
  1375  0076                     NRF_Tx_CheckACK@sta:	
  1376                           ; 1 bytes @ 0x6
  1377                           
  1378                           
  1379                           ; 1 bytes @ 0x6
  1380  0076                     	ds	1
  1381  0077                     ?_NRF_Tx_Set:	
  1382  0077                     ?_NRF_Tx_Send:	
  1383                           ; 1 bytes @ 0x7
  1384                           
  1385  0077                     ?_NRF_Rx_Set_P0:	
  1386                           ; 1 bytes @ 0x7
  1387                           
  1388  0077                     NRF_Read_Buf@i:	
  1389                           ; 1 bytes @ 0x7
  1390                           
  1391  0077                     NRF_Tx_Set@ack:	
  1392                           ; 1 bytes @ 0x7
  1393                           
  1394  0077                     NRF_Tx_Send@len:	
  1395                           ; 1 bytes @ 0x7
  1396                           
  1397  0077                     NRF_Rx_Set@ack:	
  1398                           ; 1 bytes @ 0x7
  1399                           
  1400  0077                     NRF_Rx_Set_P0@buf_len:	
  1401                           ; 1 bytes @ 0x7
  1402                           
  1403  0077                     memcpy@tmp:	
  1404                           ; 1 bytes @ 0x7
  1405                           
  1406                           
  1407                           ; 1 bytes @ 0x7
  1408  0077                     	ds	1
  1409  0078                     ??_NRF_Read_RX_Pload:	
  1410  0078                     ??_NRF_Check:	
  1411                           ; 1 bytes @ 0x8
  1412                           
  1413  0078                     ??_NRF_Tx_Set:	
  1414                           ; 1 bytes @ 0x8
  1415                           
  1416  0078                     ??_NRF_Tx_Send:	
  1417                           ; 1 bytes @ 0x8
  1418                           
  1419  0078                     ??_NRF_Rx_Set_P0:	
  1420                           ; 1 bytes @ 0x8
  1421                           
  1422  0078                     NRF_Clear_IRQ@temp:	
  1423                           ; 1 bytes @ 0x8
  1424                           
  1425  0078                     memcpy@d1:	
  1426                           ; 1 bytes @ 0x8
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x8
  1430  0078                     	ds	1
  1431  0079                     memcpy@d:	
  1432                           
  1433                           ; 1 bytes @ 0x9
  1434  0079                     	ds	1
  1435  007A                     NRF_Read_RX_Pload@width:	
  1436  007A                     NRF_Tx_Set@addr:	
  1437                           ; 1 bytes @ 0xA
  1438                           
  1439  007A                     NRF_Tx_Send@txbuf:	
  1440                           ; 1 bytes @ 0xA
  1441                           
  1442  007A                     NRF_Rx_Set_P0@addr:	
  1443                           ; 1 bytes @ 0xA
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0xA
  1447  007A                     	ds	1
  1448  007B                     NRF_Read_RX_Pload@pBuf:	
  1449                           
  1450                           ; 1 bytes @ 0xB
  1451  007B                     	ds	1
  1452  007C                     NRF_Read_RX_Pload@pipe:	
  1453                           
  1454                           ; 1 bytes @ 0xC
  1455  007C                     	ds	1
  1456  007D                     ??_NRF_RxPacket:	
  1457                           
  1458                           ; 1 bytes @ 0xD
  1459  007D                     	ds	1
  1460  007E                     ??_main:	
  1461                           
  1462                           	psect	cstackBANK0
  1463  0052                     __pcstackBANK0:	
  1464                           ; 1 bytes @ 0xE
  1465                           
  1466  0052                     NRF_RxPacket@rxbuf:	
  1467  0052                     NRF_Check@tuf:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470                           
  1471                           ; 5 bytes @ 0x0
  1472  0052                     	ds	1
  1473  0053                     NRF_RxPacket@status:	
  1474                           
  1475                           ; 1 bytes @ 0x1
  1476  0053                     	ds	4
  1477  0057                     NRF_Check@buf:	
  1478                           
  1479                           ; 5 bytes @ 0x5
  1480  0057                     	ds	5
  1481  005C                     NRF_Check@i:	
  1482                           
  1483                           ; 1 bytes @ 0xA
  1484  005C                     	ds	1
  1485  005D                     ??_WirelessPad:	
  1486                           
  1487                           ; 1 bytes @ 0xB
  1488  005D                     	ds	2
  1489  005F                     WirelessPad@rxbuf:	
  1490                           
  1491                           ; 2 bytes @ 0xD
  1492  005F                     	ds	2
  1493  0061                     WirelessPad@i:	
  1494                           
  1495                           ; 2 bytes @ 0xF
  1496  0061                     	ds	2
  1497  0063                     WirelessPad@adc:	
  1498                           
  1499                           ; 1 bytes @ 0x11
  1500  0063                     	ds	1
  1501                           
  1502                           	psect	maintext
  1503  02CA                     __pmaintext:	
  1504 ;;
  1505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1506 ;;
  1507 ;; *************** function _main *****************
  1508 ;; Defined at:
  1509 ;;		line 192 in file "main.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : B1F/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1
  1523 ;;      Params:         0       0       0
  1524 ;;      Locals:         0       0       0
  1525 ;;      Temps:          0       0       0
  1526 ;;      Totals:         0       0       0
  1527 ;;Total ram usage:        0 bytes
  1528 ;; Hardware stack levels required when called:    8
  1529 ;; This function calls:
  1530 ;;		_ADC_Init
  1531 ;;		_BEEP_Init
  1532 ;;		_Key_Init
  1533 ;;		_LED_Init
  1534 ;;		_PORT_Init
  1535 ;;		_WirelessPad
  1536 ;; This function is called by:
  1537 ;;		Startup code after reset
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _main
  1543  02CA                     _main:	
  1544                           
  1545                           ;main.c: 194:     OSCCON = 0X28;
  1546                           
  1547                           ;incstack = 0
  1548                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1549  02CA  3028               	movlw	40
  1550  02CB  0021               	movlb	1	; select bank1
  1551  02CC  0099               	movwf	25	;volatile
  1552                           
  1553                           ;main.c: 196:     PORT_Init();
  1554  02CD  236B               	fcall	_PORT_Init
  1555                           
  1556                           ;main.c: 198:     LED_Init();
  1557  02CE  2364               	fcall	_LED_Init
  1558                           
  1559                           ;main.c: 200:     if(PAD_MODE == 1) {
  1560  02CF  036B               	decf	_PAD_MODE,w
  1561  02D0  1D03               	btfss	3,2
  1562  02D1  2AD3               	goto	l1778
  1563                           
  1564                           ;main.c: 201:         BEEP_Init();
  1565  02D2  2357               	fcall	_BEEP_Init
  1566  02D3                     l1778:	
  1567                           
  1568                           ;main.c: 204:     if(PAD_MODE == 0) {
  1569  02D3  086B               	movf	_PAD_MODE,w
  1570  02D4  1D03               	btfss	3,2
  1571  02D5  2AD7               	goto	l1782
  1572                           
  1573                           ;main.c: 205:         Key_Init();
  1574  02D6  2352               	fcall	_Key_Init
  1575  02D7                     l1782:	
  1576                           
  1577                           ;main.c: 208:     ADC_Init();
  1578  02D7  2343               	fcall	_ADC_Init
  1579                           
  1580                           ;main.c: 212:     WirelessPad();
  1581  02D8  2033               	fcall	_WirelessPad
  1582  02D9                     l430:	
  1583                           ;main.c: 216:     while(1);
  1584                           
  1585  02D9  2AD9               	goto	l430
  1586  02DA                     __end_of_main:	
  1587                           
  1588                           	psect	text1
  1589  0033                     __ptext1:	
  1590 ;; *************** function _WirelessPad *****************
  1591 ;; Defined at:
  1592 ;;		line 219 in file "main.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;		None
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  i               2   15[BANK0 ] unsigned int 
  1597 ;;  adc             1   17[BANK0 ] unsigned char 
  1598 ;;  rxbuf           2   13[BANK0 ] unsigned char [2]
  1599 ;;  ledx            1    0        unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 1F/1
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1
  1609 ;;      Params:         0       0       0
  1610 ;;      Locals:         0       6       0
  1611 ;;      Temps:          0       1       0
  1612 ;;      Totals:         0       7       0
  1613 ;;Total ram usage:        7 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    7
  1616 ;; This function calls:
  1617 ;;		_ADC_Read
  1618 ;;		_LEDx
  1619 ;;		_NRF_Check
  1620 ;;		_NRF_Clear_IRQ
  1621 ;;		_NRF_On
  1622 ;;		_NRF_Port_Init
  1623 ;;		_NRF_RxPacket
  1624 ;;		_NRF_Rx_Receive
  1625 ;;		_NRF_Rx_Set
  1626 ;;		_NRF_Rx_Set_P0
  1627 ;;		_NRF_SPI_Init
  1628 ;;		_NRF_Tx_Send
  1629 ;;		_NRF_Tx_Set
  1630 ;;		_memcpy
  1631 ;; This function is called by:
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function _WirelessPad
  1638  0033                     _WirelessPad:	
  1639                           
  1640                           ;main.c: 221:     unsigned char ledx;;main.c: 222:     unsigned char rxbuf[2] ={0, 0};
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in _WirelessPad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1644  0033  0020               	movlb	0	; select bank0
  1645  0034  01DF               	clrf	WirelessPad@rxbuf
  1646  0035  01E0               	clrf	WirelessPad@rxbuf+1
  1647                           
  1648                           ;main.c: 224:     PAD_MODE = 1;
  1649  0036  01EB               	clrf	_PAD_MODE
  1650  0037  0AEB               	incf	_PAD_MODE,f
  1651                           
  1652                           ;main.c: 226:     NRF_On();
  1653  0038  237E               	fcall	_NRF_On
  1654                           
  1655                           ;main.c: 227:     NRF_Port_Init();
  1656  0039  2327               	fcall	_NRF_Port_Init
  1657                           
  1658                           ;main.c: 228:     NRF_SPI_Init();
  1659  003A  231D               	fcall	_NRF_SPI_Init
  1660                           
  1661                           ;main.c: 230:     _delay((unsigned long)((500)*(125000/4000.0)));
  1662  003B  3015               	movlw	21
  1663  003C  0020               	movlb	0	; select bank0
  1664  003D  00DD               	movwf	??_WirelessPad
  1665  003E  3049               	movlw	73
  1666  003F                     u657:	
  1667  003F  0B89               	decfsz	9,f
  1668  0040  283F               	goto	u657
  1669  0041  0BDD               	decfsz	??_WirelessPad,f
  1670  0042  283F               	goto	u657
  1671  0043  0000               	nop
  1672                           
  1673                           ;main.c: 232:     if(NRF_Check()) {
  1674  0044  20DD               	fcall	_NRF_Check
  1675  0045  3A00               	xorlw	0
  1676  0046  1903               	skipnz
  1677  0047  285F               	goto	l1710
  1678  0048                     l439:	
  1679                           ;main.c: 233:         while(1) {
  1680                           
  1681                           
  1682                           ;main.c: 234:             RA4 = 0;
  1683  0048  0020               	movlb	0	; select bank0
  1684  0049  120C               	bcf	12,4	;volatile
  1685                           
  1686                           ;main.c: 235:             _delay((unsigned long)((100)*(125000/4000.0)));
  1687  004A  3005               	movlw	5
  1688  004B  0020               	movlb	0	; select bank0
  1689  004C  00DD               	movwf	??_WirelessPad
  1690  004D  300D               	movlw	13
  1691  004E                     u667:	
  1692  004E  0B89               	decfsz	9,f
  1693  004F  284E               	goto	u667
  1694  0050  0BDD               	decfsz	??_WirelessPad,f
  1695  0051  284E               	goto	u667
  1696  0052  0000               	nop
  1697                           
  1698                           ;main.c: 236:             RA4 = 1;
  1699  0053  0020               	movlb	0	; select bank0
  1700  0054  160C               	bsf	12,4	;volatile
  1701                           
  1702                           ;main.c: 237:             _delay((unsigned long)((100)*(125000/4000.0)));
  1703  0055  3005               	movlw	5
  1704  0056  0020               	movlb	0	; select bank0
  1705  0057  00DD               	movwf	??_WirelessPad
  1706  0058  300D               	movlw	13
  1707  0059                     u677:	
  1708  0059  0B89               	decfsz	9,f
  1709  005A  2859               	goto	u677
  1710  005B  0BDD               	decfsz	??_WirelessPad,f
  1711  005C  2859               	goto	u677
  1712  005D  0000               	nop
  1713  005E  2848               	goto	l439
  1714  005F                     l1710:	
  1715                           
  1716                           ;main.c: 241:     if(PAD_MODE == 1) {
  1717  005F  036B               	decf	_PAD_MODE,w
  1718  0060  1D03               	btfss	3,2
  1719  0061  286D               	goto	l1718
  1720                           
  1721                           ;main.c: 242:         NRF_Rx_Set(0x00, 0x01);
  1722  0062  01F5               	clrf	NRF_Rx_Set@pipe
  1723  0063  0AF5               	incf	NRF_Rx_Set@pipe,f
  1724  0064  3000               	movlw	0
  1725  0065  21F5               	fcall	_NRF_Rx_Set
  1726                           
  1727                           ;main.c: 243:         NRF_Rx_Set_P0(rx_addr_0, 2);
  1728  0066  3002               	movlw	2
  1729  0067  00DD               	movwf	??_WirelessPad
  1730  0068  085D               	movf	??_WirelessPad,w
  1731  0069  00F7               	movwf	NRF_Rx_Set_P0@buf_len
  1732  006A  302A               	movlw	(low (_rx_addr_0| 0))& (0+255)
  1733  006B  22A5               	fcall	_NRF_Rx_Set_P0
  1734                           
  1735                           ;main.c: 244:         NRF_Rx_Receive();
  1736  006C  2305               	fcall	_NRF_Rx_Receive
  1737  006D                     l1718:	
  1738                           
  1739                           ;main.c: 247:     if(PAD_MODE == 0) {
  1740  006D  0020               	movlb	0	; select bank0
  1741  006E  086B               	movf	_PAD_MODE,w
  1742  006F  1D03               	btfss	3,2
  1743  0070  287E               	goto	l1726
  1744                           
  1745                           ;main.c: 248:         memcpy(pad_aux_dat, pad_aux_ok, 2);
  1746  0071  307C               	movlw	low (_pad_aux_ok| (0+32768))
  1747  0072  00F0               	movwf	memcpy@s1
  1748  0073  3083               	movlw	high (_pad_aux_ok| (0+32768))
  1749  0074  00F1               	movwf	memcpy@s1+1
  1750  0075  3002               	movlw	2
  1751  0076  00F2               	movwf	memcpy@n
  1752  0077  3000               	movlw	0
  1753  0078  00F3               	movwf	memcpy@n+1
  1754  0079  306C               	movlw	(low (_pad_aux_dat| 0))& (0+255)
  1755  007A  2191               	fcall	_memcpy
  1756                           
  1757                           ;main.c: 249:         NRF_Tx_Set(tx_addr, 0x00);
  1758  007B  01F7               	clrf	NRF_Tx_Set@ack
  1759  007C  302F               	movlw	(low (_tx_addr| 0))& (0+255)
  1760  007D  2126               	fcall	_NRF_Tx_Set
  1761  007E                     l1726:	
  1762                           
  1763                           ;main.c: 255:         unsigned char adc = 0;
  1764  007E  0020               	movlb	0	; select bank0
  1765  007F  01E3               	clrf	WirelessPad@adc
  1766                           
  1767                           ;main.c: 257:         if(PAD_MODE == 1) {
  1768  0080  036B               	decf	_PAD_MODE,w
  1769  0081  1D03               	btfss	3,2
  1770  0082  289F               	goto	l1742
  1771                           
  1772                           ;main.c: 258:             rxbuf[0] = 0;
  1773  0083  01DF               	clrf	WirelessPad@rxbuf
  1774  0084  305F               	movlw	(low (WirelessPad@rxbuf| 0))& (0+255)
  1775  0085  2246               	fcall	_NRF_RxPacket
  1776                           
  1777                           ;main.c: 260:             NRF_Clear_IRQ();
  1778  0086  22DA               	fcall	_NRF_Clear_IRQ
  1779                           
  1780                           ;main.c: 262:             if(rxbuf[0] == pad_aux_ok[0]) {
  1781  0087  307C               	movlw	low (_pad_aux_ok| (0+32768))
  1782  0088  0084               	movwf	4
  1783  0089  3083               	movlw	high (_pad_aux_ok| (0+32768))
  1784  008A  0085               	movwf	5
  1785  008B  0800               	movf	0,w	;code access
  1786  008C  00DD               	movwf	??_WirelessPad
  1787  008D  085F               	movf	WirelessPad@rxbuf,w
  1788  008E  065D               	xorwf	??_WirelessPad,w
  1789  008F  1D03               	skipz
  1790  0090  289C               	goto	l446
  1791                           
  1792                           ;main.c: 263:                 RC3 = 0;
  1793  0091  118E               	bcf	14,3	;volatile
  1794                           
  1795                           ;main.c: 264:                 _delay((unsigned long)((100)*(125000/4000.0)));
  1796  0092  3005               	movlw	5
  1797  0093  0020               	movlb	0	; select bank0
  1798  0094  00DD               	movwf	??_WirelessPad
  1799  0095  300D               	movlw	13
  1800  0096                     u687:	
  1801  0096  0B89               	decfsz	9,f
  1802  0097  2896               	goto	u687
  1803  0098  0BDD               	decfsz	??_WirelessPad,f
  1804  0099  2896               	goto	u687
  1805  009A  0000               	nop
  1806                           
  1807                           ;main.c: 265:             }else {
  1808  009B  289F               	goto	l1742
  1809  009C                     l446:	
  1810                           
  1811                           ;main.c: 266:                 RC3 = 1;
  1812  009C  158E               	bsf	14,3	;volatile
  1813                           
  1814                           ;main.c: 267:                 adc = 1;
  1815  009D  01E3               	clrf	WirelessPad@adc
  1816  009E  0AE3               	incf	WirelessPad@adc,f
  1817  009F                     l1742:	
  1818                           
  1819                           ;main.c: 271:         if(PAD_MODE == 0) {
  1820  009F  0020               	movlb	0	; select bank0
  1821  00A0  086B               	movf	_PAD_MODE,w
  1822  00A1  1D03               	btfss	3,2
  1823  00A2  28B4               	goto	l1752
  1824                           
  1825                           ;main.c: 272:             if(RA4) {
  1826  00A3  1E0C               	btfss	12,4	;volatile
  1827  00A4  28B1               	goto	l449
  1828                           
  1829                           ;main.c: 273:                 RA4 = 0;
  1830  00A5  120C               	bcf	12,4	;volatile
  1831                           
  1832                           ;main.c: 275:                 NRF_Tx_Send(pad_aux_dat, 2);
  1833  00A6  3002               	movlw	2
  1834  00A7  00DD               	movwf	??_WirelessPad
  1835  00A8  085D               	movf	??_WirelessPad,w
  1836  00A9  00F7               	movwf	NRF_Tx_Send@len
  1837  00AA  306C               	movlw	(low (_pad_aux_dat| 0))& (0+255)
  1838  00AB  22B8               	fcall	_NRF_Tx_Send
  1839                           
  1840                           ;main.c: 276:                 _delay((unsigned long)((1)*(125000/4000.0)));
  1841  00AC  300A               	movlw	10
  1842  00AD                     u697:	
  1843  00AD  0B89               	decfsz	9,f
  1844  00AE  28AD               	goto	u697
  1845  00AF  0000               	nop
  1846                           
  1847                           ;main.c: 277:             }else {
  1848  00B0  28B4               	goto	l1752
  1849  00B1                     l449:	
  1850                           
  1851                           ;main.c: 278:                 RA4 = 1;
  1852  00B1  160C               	bsf	12,4	;volatile
  1853                           
  1854                           ;main.c: 279:                 adc = 1;
  1855  00B2  01E3               	clrf	WirelessPad@adc
  1856  00B3  0AE3               	incf	WirelessPad@adc,f
  1857  00B4                     l1752:	
  1858                           
  1859                           ;main.c: 283:         if(adc == 1) {
  1860  00B4  0020               	movlb	0	; select bank0
  1861  00B5  0363               	decf	WirelessPad@adc,w
  1862  00B6  1D03               	btfss	3,2
  1863  00B7  28D3               	goto	l1766
  1864                           
  1865                           ;main.c: 284:             FVREN = 1;
  1866  00B8  0022               	movlb	2	; select bank2
  1867  00B9  1797               	bsf	23,7	;volatile
  1868  00BA                     l452:	
  1869                           ;main.c: 285:             while(!FVRRDY);
  1870                           
  1871  00BA  1F17               	btfss	23,6	;volatile
  1872  00BB  28BA               	goto	l452
  1873                           
  1874                           ;main.c: 287:             ADON = 1;
  1875  00BC  0021               	movlb	1	; select bank1
  1876  00BD  141D               	bsf	29,0	;volatile
  1877                           
  1878                           ;main.c: 288:             _delay((unsigned long)((2)*(125000/4000.0)));
  1879  00BE  3014               	movlw	20
  1880  00BF                     u707:	
  1881  00BF  0B89               	decfsz	9,f
  1882  00C0  28BF               	goto	u707
  1883  00C1  3200               	nop2
  1884                           
  1885                           ;main.c: 290:             i = ADC_Read();
  1886  00C2  21BB               	fcall	_ADC_Read
  1887  00C3  0871               	movf	?_ADC_Read+1,w
  1888  00C4  0020               	movlb	0	; select bank0
  1889  00C5  00E2               	movwf	WirelessPad@i+1
  1890  00C6  0870               	movf	?_ADC_Read,w
  1891  00C7  00E1               	movwf	WirelessPad@i
  1892                           
  1893                           ;main.c: 292:             if(i >= 524) {
  1894  00C8  3002               	movlw	2
  1895  00C9  0262               	subwf	WirelessPad@i+1,w
  1896  00CA  300C               	movlw	12
  1897  00CB  1903               	skipnz
  1898  00CC  0261               	subwf	WirelessPad@i,w
  1899  00CD  1C03               	skipc
  1900  00CE  28D1               	goto	l1764
  1901                           
  1902                           ;main.c: 293:                 LEDx(1);
  1903  00CF  3001               	movlw	1
  1904  00D0  222B               	fcall	_LEDx
  1905  00D1                     l1764:	
  1906                           
  1907                           ;main.c: 296:             FVREN = 0;
  1908  00D1  0022               	movlb	2	; select bank2
  1909  00D2  1397               	bcf	23,7	;volatile
  1910  00D3                     l1766:	
  1911                           
  1912                           ;main.c: 300:         _delay((unsigned long)((200)*(125000/4000.0)));
  1913  00D3  3009               	movlw	9
  1914  00D4  0020               	movlb	0	; select bank0
  1915  00D5  00DD               	movwf	??_WirelessPad
  1916  00D6  301C               	movlw	28
  1917  00D7                     u717:	
  1918  00D7  0B89               	decfsz	9,f
  1919  00D8  28D7               	goto	u717
  1920  00D9  0BDD               	decfsz	??_WirelessPad,f
  1921  00DA  28D7               	goto	u717
  1922  00DB  0000               	nop
  1923  00DC  287E               	goto	l1726
  1924  00DD                     __end_of_WirelessPad:	
  1925                           
  1926                           	psect	text2
  1927  0191                     __ptext2:	
  1928 ;; *************** function _memcpy *****************
  1929 ;; Defined at:
  1930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  d1              1    wreg     PTR void 
  1933 ;;		 -> pad_aux_dat(2), 
  1934 ;;  s1              2    0[COMMON] PTR const void 
  1935 ;;		 -> pad_aux_ok(2), 
  1936 ;;  n               2    2[COMMON] unsigned int 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  d1              1    8[COMMON] PTR void 
  1939 ;;		 -> pad_aux_dat(2), 
  1940 ;;  s               2    5[COMMON] PTR const unsigned char 
  1941 ;;		 -> pad_aux_ok(2), 
  1942 ;;  d               1    9[COMMON] PTR unsigned char 
  1943 ;;		 -> pad_aux_dat(2), 
  1944 ;;  tmp             1    7[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      PTR void 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1949 ;; Tracked objects:
  1950 ;;		On entry : 1F/0
  1951 ;;		On exit  : 1F/0
  1952 ;;		Unchanged: 1F/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1
  1954 ;;      Params:         4       0       0
  1955 ;;      Locals:         5       0       0
  1956 ;;      Temps:          1       0       0
  1957 ;;      Totals:        10       0       0
  1958 ;;Total ram usage:       10 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    1
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_WirelessPad
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _memcpy
  1970  0191                     _memcpy:	
  1971                           
  1972                           ;incstack = 0
  1973                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  1974                           ;memcpy@d1 stored from wreg
  1975  0191  00F8               	movwf	memcpy@d1
  1976  0192  0871               	movf	memcpy@s1+1,w
  1977  0193  00F6               	movwf	memcpy@s+1
  1978  0194  0870               	movf	memcpy@s1,w
  1979  0195  00F5               	movwf	memcpy@s
  1980  0196  0878               	movf	memcpy@d1,w
  1981  0197  00F4               	movwf	??_memcpy
  1982  0198  0874               	movf	??_memcpy,w
  1983  0199  00F9               	movwf	memcpy@d
  1984  019A                     l1680:	
  1985  019A  3001               	movlw	1
  1986  019B  02F2               	subwf	memcpy@n,f
  1987  019C  3000               	movlw	0
  1988  019D  3BF3               	subwfb	memcpy@n+1,f
  1989  019E  0A72               	incf	memcpy@n,w
  1990  019F  1903               	btfsc	3,2
  1991  01A0  0A73               	incf	memcpy@n+1,w
  1992  01A1  1903               	btfsc	3,2
  1993  01A2  0008               	return
  1994  01A3  0875               	movf	memcpy@s,w
  1995  01A4  0084               	movwf	4
  1996  01A5  0876               	movf	memcpy@s+1,w
  1997  01A6  0085               	movwf	5
  1998  01A7  0800               	movf	0,w	;code access
  1999  01A8  00F4               	movwf	??_memcpy
  2000  01A9  0874               	movf	??_memcpy,w
  2001  01AA  00F7               	movwf	memcpy@tmp
  2002  01AB  3001               	movlw	1
  2003  01AC  07F5               	addwf	memcpy@s,f
  2004  01AD  3000               	movlw	0
  2005  01AE  3DF6               	addwfc	memcpy@s+1,f
  2006  01AF  0877               	movf	memcpy@tmp,w
  2007  01B0  00F4               	movwf	??_memcpy
  2008  01B1  0879               	movf	memcpy@d,w
  2009  01B2  0086               	movwf	6
  2010  01B3  0187               	clrf	7
  2011  01B4  0874               	movf	??_memcpy,w
  2012  01B5  0081               	movwf	1
  2013  01B6  3001               	movlw	1
  2014  01B7  00F4               	movwf	??_memcpy
  2015  01B8  0874               	movf	??_memcpy,w
  2016  01B9  07F9               	addwf	memcpy@d,f
  2017  01BA  299A               	goto	l1680
  2018  01BB                     __end_of_memcpy:	
  2019                           
  2020                           	psect	text3
  2021  0126                     __ptext3:	
  2022 ;; *************** function _NRF_Tx_Set *****************
  2023 ;; Defined at:
  2024 ;;		line 363 in file "../library/nrf24l01.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  addr            1    wreg     PTR unsigned char 
  2027 ;;		 -> tx_addr(5), 
  2028 ;;  ack             1    7[COMMON] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  addr            1   10[COMMON] PTR unsigned char 
  2031 ;;		 -> tx_addr(5), 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 1F/0
  2038 ;;		On exit  : 1F/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMMON   BANK0   BANK1
  2041 ;;      Params:         1       0       0
  2042 ;;      Locals:         1       0       0
  2043 ;;      Temps:          2       0       0
  2044 ;;      Totals:         4       0       0
  2045 ;;Total ram usage:        4 bytes
  2046 ;; Hardware stack levels used:    1
  2047 ;; Hardware stack levels required when called:    3
  2048 ;; This function calls:
  2049 ;;		_NRF_Write_Buf
  2050 ;;		_NRF_Write_Reg
  2051 ;; This function is called by:
  2052 ;;		_WirelessPad
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _NRF_Tx_Set
  2058  0126                     _NRF_Tx_Set:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in _NRF_Tx_Set: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2062                           ;NRF_Tx_Set@addr stored from wreg
  2063  0126  00FA               	movwf	NRF_Tx_Set@addr
  2064                           
  2065                           ;../library/nrf24l01.c: 364:     RA0 = 0;
  2066  0127  100C               	bcf	12,0	;volatile
  2067                           
  2068                           ;../library/nrf24l01.c: 365:     NRF_Write_Buf(0x20 + 0x10, addr, 5);
  2069  0128  087A               	movf	NRF_Tx_Set@addr,w
  2070  0129  00F8               	movwf	??_NRF_Tx_Set
  2071  012A  0878               	movf	??_NRF_Tx_Set,w
  2072  012B  00F1               	movwf	NRF_Write_Buf@pBuf
  2073  012C  3005               	movlw	5
  2074  012D  00F9               	movwf	??_NRF_Tx_Set+1
  2075  012E  0879               	movf	??_NRF_Tx_Set+1,w
  2076  012F  00F2               	movwf	NRF_Write_Buf@len
  2077  0130  3030               	movlw	48
  2078  0131  2210               	fcall	_NRF_Write_Buf
  2079                           
  2080                           ;../library/nrf24l01.c: 366:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  2081  0132  087A               	movf	NRF_Tx_Set@addr,w
  2082  0133  00F8               	movwf	??_NRF_Tx_Set
  2083  0134  0878               	movf	??_NRF_Tx_Set,w
  2084  0135  00F1               	movwf	NRF_Write_Buf@pBuf
  2085  0136  3005               	movlw	5
  2086  0137  00F9               	movwf	??_NRF_Tx_Set+1
  2087  0138  0879               	movf	??_NRF_Tx_Set+1,w
  2088  0139  00F2               	movwf	NRF_Write_Buf@len
  2089  013A  302A               	movlw	42
  2090  013B  2210               	fcall	_NRF_Write_Buf
  2091                           
  2092                           ;../library/nrf24l01.c: 367:     NRF_Write_Reg(0x20 + 0x01, ack);
  2093  013C  0877               	movf	NRF_Tx_Set@ack,w
  2094  013D  00F8               	movwf	??_NRF_Tx_Set
  2095  013E  0878               	movf	??_NRF_Tx_Set,w
  2096  013F  00F1               	movwf	NRF_Write_Reg@value
  2097  0140  3021               	movlw	33
  2098  0141  22F8               	fcall	_NRF_Write_Reg
  2099                           
  2100                           ;../library/nrf24l01.c: 369:     NRF_Write_Reg(0x20 + 0x02, 0x01);
  2101  0142  01F1               	clrf	NRF_Write_Reg@value
  2102  0143  0AF1               	incf	NRF_Write_Reg@value,f
  2103  0144  3022               	movlw	34
  2104  0145  22F8               	fcall	_NRF_Write_Reg
  2105                           
  2106                           ;../library/nrf24l01.c: 370:     NRF_Write_Reg(0x20 + 0x04, 0x1a);
  2107  0146  301A               	movlw	26
  2108  0147  00F8               	movwf	??_NRF_Tx_Set
  2109  0148  0878               	movf	??_NRF_Tx_Set,w
  2110  0149  00F1               	movwf	NRF_Write_Reg@value
  2111  014A  3024               	movlw	36
  2112  014B  22F8               	fcall	_NRF_Write_Reg
  2113                           
  2114                           ;../library/nrf24l01.c: 371:     NRF_Write_Reg(0x20 + 0x05, 40);
  2115  014C  3028               	movlw	40
  2116  014D  00F8               	movwf	??_NRF_Tx_Set
  2117  014E  0878               	movf	??_NRF_Tx_Set,w
  2118  014F  00F1               	movwf	NRF_Write_Reg@value
  2119  0150  3025               	movlw	37
  2120  0151  22F8               	fcall	_NRF_Write_Reg
  2121                           
  2122                           ;../library/nrf24l01.c: 372:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  2123  0152  300F               	movlw	15
  2124  0153  00F8               	movwf	??_NRF_Tx_Set
  2125  0154  0878               	movf	??_NRF_Tx_Set,w
  2126  0155  00F1               	movwf	NRF_Write_Reg@value
  2127  0156  3026               	movlw	38
  2128  0157  22F8               	fcall	_NRF_Write_Reg
  2129                           
  2130                           ;../library/nrf24l01.c: 373:     NRF_Write_Reg(0x20 + 0x00, 0x0e);
  2131  0158  300E               	movlw	14
  2132  0159  00F8               	movwf	??_NRF_Tx_Set
  2133  015A  0878               	movf	??_NRF_Tx_Set,w
  2134  015B  00F1               	movwf	NRF_Write_Reg@value
  2135  015C  3020               	movlw	32
  2136  015D  22F8               	fcall	_NRF_Write_Reg
  2137  015E  0008               	return
  2138  015F                     __end_of_NRF_Tx_Set:	
  2139                           
  2140                           	psect	text4
  2141  02B8                     __ptext4:	
  2142 ;; *************** function _NRF_Tx_Send *****************
  2143 ;; Defined at:
  2144 ;;		line 376 in file "../library/nrf24l01.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  txbuf           1    wreg     PTR unsigned char 
  2147 ;;		 -> pad_aux_dat(2), 
  2148 ;;  len             1    7[COMMON] unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  txbuf           1   10[COMMON] PTR unsigned char 
  2151 ;;		 -> pad_aux_dat(2), 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  1    wreg      void 
  2154 ;; Registers used:
  2155 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2156 ;; Tracked objects:
  2157 ;;		On entry : 1F/0
  2158 ;;		On exit  : 1F/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1
  2161 ;;      Params:         1       0       0
  2162 ;;      Locals:         1       0       0
  2163 ;;      Temps:          2       0       0
  2164 ;;      Totals:         4       0       0
  2165 ;;Total ram usage:        4 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    4
  2168 ;; This function calls:
  2169 ;;		_NRF_Tx_CheckACK
  2170 ;;		_NRF_Write_Buf
  2171 ;; This function is called by:
  2172 ;;		_WirelessPad
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           
  2177                           ;psect for function _NRF_Tx_Send
  2178  02B8                     _NRF_Tx_Send:	
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _NRF_Tx_Send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2182                           ;NRF_Tx_Send@txbuf stored from wreg
  2183  02B8  00FA               	movwf	NRF_Tx_Send@txbuf
  2184                           
  2185                           ;../library/nrf24l01.c: 377:     RA0 = 0;
  2186  02B9  100C               	bcf	12,0	;volatile
  2187                           
  2188                           ;../library/nrf24l01.c: 378:     NRF_Write_Buf(0xA0, txbuf, len);
  2189  02BA  087A               	movf	NRF_Tx_Send@txbuf,w
  2190  02BB  00F8               	movwf	??_NRF_Tx_Send
  2191  02BC  0878               	movf	??_NRF_Tx_Send,w
  2192  02BD  00F1               	movwf	NRF_Write_Buf@pBuf
  2193  02BE  0877               	movf	NRF_Tx_Send@len,w
  2194  02BF  00F9               	movwf	??_NRF_Tx_Send+1
  2195  02C0  0879               	movf	??_NRF_Tx_Send+1,w
  2196  02C1  00F2               	movwf	NRF_Write_Buf@len
  2197  02C2  30A0               	movlw	160
  2198  02C3  2210               	fcall	_NRF_Write_Buf
  2199                           
  2200                           ;../library/nrf24l01.c: 379:     RA0 = 1;
  2201  02C4  140C               	bsf	12,0	;volatile
  2202  02C5                     l1630:	
  2203                           ;../library/nrf24l01.c: 380:     _delay((unsigned long)((10)*(125000/4000000.0)));
  2204                           ;../library/nrf24l01.c: 381:     while(NRF_Tx_CheckACK());
  2205                           
  2206  02C5  2290               	fcall	_NRF_Tx_CheckACK
  2207  02C6  3A00               	xorlw	0
  2208  02C7  1903               	btfsc	3,2
  2209  02C8  0008               	return
  2210  02C9  2AC5               	goto	l1630
  2211  02CA                     __end_of_NRF_Tx_Send:	
  2212                           
  2213                           	psect	text5
  2214  0290                     __ptext5:	
  2215 ;; *************** function _NRF_Tx_CheckACK *****************
  2216 ;; Defined at:
  2217 ;;		line 384 in file "../library/nrf24l01.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  sta             1    6[COMMON] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      unsigned char 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 1F/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1
  2231 ;;      Params:         0       0       0
  2232 ;;      Locals:         1       0       0
  2233 ;;      Temps:          1       0       0
  2234 ;;      Totals:         2       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    3
  2238 ;; This function calls:
  2239 ;;		_NRF_Read_Reg
  2240 ;;		_NRF_Write_Reg
  2241 ;; This function is called by:
  2242 ;;		_NRF_Tx_Send
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _NRF_Tx_CheckACK
  2248  0290                     _NRF_Tx_CheckACK:	
  2249                           
  2250                           ;../library/nrf24l01.c: 387:  sta = NRF_Read_Reg(0x07);
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in _NRF_Tx_CheckACK: [wreg+status,2+status,0+pclath+cstack]
  2254  0290  3007               	movlw	7
  2255  0291  22EA               	fcall	_NRF_Read_Reg
  2256  0292  00F5               	movwf	??_NRF_Tx_CheckACK
  2257  0293  0875               	movf	??_NRF_Tx_CheckACK,w
  2258  0294  00F6               	movwf	NRF_Tx_CheckACK@sta
  2259                           
  2260                           ;../library/nrf24l01.c: 388:     if(sta & 0X10 || sta & 0X20) {
  2261  0295  1A76               	btfsc	NRF_Tx_CheckACK@sta,4
  2262  0296  2A99               	goto	l1516
  2263  0297  1EF6               	btfss	NRF_Tx_CheckACK@sta,5
  2264  0298  2A9F               	goto	l1518
  2265  0299                     l1516:	
  2266                           
  2267                           ;../library/nrf24l01.c: 389:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  2268  0299  30FF               	movlw	255
  2269  029A  00F5               	movwf	??_NRF_Tx_CheckACK
  2270  029B  0875               	movf	??_NRF_Tx_CheckACK,w
  2271  029C  00F1               	movwf	NRF_Write_Reg@value
  2272  029D  3027               	movlw	39
  2273  029E  22F8               	fcall	_NRF_Write_Reg
  2274  029F                     l1518:	
  2275                           
  2276                           ;../library/nrf24l01.c: 391:  if(sta & 0X20) {
  2277  029F  1EF6               	btfss	NRF_Tx_CheckACK@sta,5
  2278  02A0  2AA3               	goto	l1524
  2279                           
  2280                           ;../library/nrf24l01.c: 392:     return(0);
  2281  02A1  3000               	movlw	0
  2282  02A2  0008               	return
  2283  02A3                     l1524:	
  2284                           
  2285                           ;../library/nrf24l01.c: 394:  return(1);
  2286  02A3  3001               	movlw	1
  2287  02A4  0008               	return
  2288  02A5                     __end_of_NRF_Tx_CheckACK:	
  2289                           
  2290                           	psect	text6
  2291  031D                     __ptext6:	
  2292 ;; *************** function _NRF_SPI_Init *****************
  2293 ;; Defined at:
  2294 ;;		line 72 in file "../library/nrf24l01.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2
  2303 ;; Tracked objects:
  2304 ;;		On entry : 1F/0
  2305 ;;		On exit  : 1F/4
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1
  2308 ;;      Params:         0       0       0
  2309 ;;      Locals:         0       0       0
  2310 ;;      Temps:          0       0       0
  2311 ;;      Totals:         0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_WirelessPad
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _NRF_SPI_Init
  2324  031D                     _NRF_SPI_Init:	
  2325                           
  2326                           ;../library/nrf24l01.c: 73:     SSP1STAT = 0x00;
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _NRF_SPI_Init: [wreg+status,2]
  2330  031D  0024               	movlb	4	; select bank4
  2331  031E  0194               	clrf	20	;volatile
  2332                           
  2333                           ;../library/nrf24l01.c: 74:     SSP1STATbits.CKE = 1;
  2334  031F  1714               	bsf	20,6	;volatile
  2335                           
  2336                           ;../library/nrf24l01.c: 76:     SSP1BUF = 0;
  2337  0320  0191               	clrf	17	;volatile
  2338                           
  2339                           ;../library/nrf24l01.c: 77:     SSP1IF = 0;
  2340  0321  0020               	movlb	0	; select bank0
  2341  0322  1191               	bcf	17,3	;volatile
  2342                           
  2343                           ;../library/nrf24l01.c: 78:     SSP1CON1 = 0x20;
  2344  0323  3020               	movlw	32
  2345  0324  0024               	movlb	4	; select bank4
  2346  0325  0095               	movwf	21	;volatile
  2347  0326  0008               	return
  2348  0327                     __end_of_NRF_SPI_Init:	
  2349                           
  2350                           	psect	text7
  2351  02A5                     __ptext7:	
  2352 ;; *************** function _NRF_Rx_Set_P0 *****************
  2353 ;; Defined at:
  2354 ;;		line 428 in file "../library/nrf24l01.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  addr            1    wreg     PTR unsigned char 
  2357 ;;		 -> rx_addr_0(5), 
  2358 ;;  buf_len         1    7[COMMON] unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  addr            1   10[COMMON] PTR unsigned char 
  2361 ;;		 -> rx_addr_0(5), 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 1F/0
  2368 ;;		On exit  : 1F/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1
  2371 ;;      Params:         1       0       0
  2372 ;;      Locals:         1       0       0
  2373 ;;      Temps:          2       0       0
  2374 ;;      Totals:         4       0       0
  2375 ;;Total ram usage:        4 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    3
  2378 ;; This function calls:
  2379 ;;		_NRF_Write_Buf
  2380 ;;		_NRF_Write_Reg
  2381 ;; This function is called by:
  2382 ;;		_WirelessPad
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _NRF_Rx_Set_P0
  2388  02A5                     _NRF_Rx_Set_P0:	
  2389                           
  2390                           ;incstack = 0
  2391                           ; Regs used in _NRF_Rx_Set_P0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2392                           ;NRF_Rx_Set_P0@addr stored from wreg
  2393  02A5  00FA               	movwf	NRF_Rx_Set_P0@addr
  2394                           
  2395                           ;../library/nrf24l01.c: 429:     RA0 = 0;
  2396  02A6  100C               	bcf	12,0	;volatile
  2397                           
  2398                           ;../library/nrf24l01.c: 430:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  2399  02A7  087A               	movf	NRF_Rx_Set_P0@addr,w
  2400  02A8  00F8               	movwf	??_NRF_Rx_Set_P0
  2401  02A9  0878               	movf	??_NRF_Rx_Set_P0,w
  2402  02AA  00F1               	movwf	NRF_Write_Buf@pBuf
  2403  02AB  3005               	movlw	5
  2404  02AC  00F9               	movwf	??_NRF_Rx_Set_P0+1
  2405  02AD  0879               	movf	??_NRF_Rx_Set_P0+1,w
  2406  02AE  00F2               	movwf	NRF_Write_Buf@len
  2407  02AF  302A               	movlw	42
  2408  02B0  2210               	fcall	_NRF_Write_Buf
  2409                           
  2410                           ;../library/nrf24l01.c: 431:     NRF_Write_Reg(0x20 + 0x11, buf_len);
  2411  02B1  0877               	movf	NRF_Rx_Set_P0@buf_len,w
  2412  02B2  00F8               	movwf	??_NRF_Rx_Set_P0
  2413  02B3  0878               	movf	??_NRF_Rx_Set_P0,w
  2414  02B4  00F1               	movwf	NRF_Write_Reg@value
  2415  02B5  3031               	movlw	49
  2416  02B6  22F8               	fcall	_NRF_Write_Reg
  2417  02B7  0008               	return
  2418  02B8                     __end_of_NRF_Rx_Set_P0:	
  2419                           
  2420                           	psect	text8
  2421  01F5                     __ptext8:	
  2422 ;; *************** function _NRF_Rx_Set *****************
  2423 ;; Defined at:
  2424 ;;		line 419 in file "../library/nrf24l01.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  ack             1    wreg     unsigned char 
  2427 ;;  pipe            1    5[COMMON] unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  ack             1    7[COMMON] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, pclath, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 1F/0
  2436 ;;		On exit  : 1F/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1
  2439 ;;      Params:         1       0       0
  2440 ;;      Locals:         1       0       0
  2441 ;;      Temps:          1       0       0
  2442 ;;      Totals:         3       0       0
  2443 ;;Total ram usage:        3 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    3
  2446 ;; This function calls:
  2447 ;;		_NRF_Write_Reg
  2448 ;; This function is called by:
  2449 ;;		_WirelessPad
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           
  2454                           ;psect for function _NRF_Rx_Set
  2455  01F5                     _NRF_Rx_Set:	
  2456                           
  2457                           ;incstack = 0
  2458                           ; Regs used in _NRF_Rx_Set: [wreg+status,2+status,0+pclath+cstack]
  2459                           ;NRF_Rx_Set@ack stored from wreg
  2460  01F5  00F7               	movwf	NRF_Rx_Set@ack
  2461                           
  2462                           ;../library/nrf24l01.c: 420:     RA0 = 0;
  2463  01F6  100C               	bcf	12,0	;volatile
  2464                           
  2465                           ;../library/nrf24l01.c: 421:     NRF_Write_Reg(0x20 + 0x01, ack);
  2466  01F7  0877               	movf	NRF_Rx_Set@ack,w
  2467  01F8  00F6               	movwf	??_NRF_Rx_Set
  2468  01F9  0876               	movf	??_NRF_Rx_Set,w
  2469  01FA  00F1               	movwf	NRF_Write_Reg@value
  2470  01FB  3021               	movlw	33
  2471  01FC  22F8               	fcall	_NRF_Write_Reg
  2472                           
  2473                           ;../library/nrf24l01.c: 422:     NRF_Write_Reg(0x20 + 0x02, pipe);
  2474  01FD  0875               	movf	NRF_Rx_Set@pipe,w
  2475  01FE  00F6               	movwf	??_NRF_Rx_Set
  2476  01FF  0876               	movf	??_NRF_Rx_Set,w
  2477  0200  00F1               	movwf	NRF_Write_Reg@value
  2478  0201  3022               	movlw	34
  2479  0202  22F8               	fcall	_NRF_Write_Reg
  2480                           
  2481                           ;../library/nrf24l01.c: 424:     NRF_Write_Reg(0x20 + 0x05, 40);
  2482  0203  3028               	movlw	40
  2483  0204  00F6               	movwf	??_NRF_Rx_Set
  2484  0205  0876               	movf	??_NRF_Rx_Set,w
  2485  0206  00F1               	movwf	NRF_Write_Reg@value
  2486  0207  3025               	movlw	37
  2487  0208  22F8               	fcall	_NRF_Write_Reg
  2488                           
  2489                           ;../library/nrf24l01.c: 425:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  2490  0209  300F               	movlw	15
  2491  020A  00F6               	movwf	??_NRF_Rx_Set
  2492  020B  0876               	movf	??_NRF_Rx_Set,w
  2493  020C  00F1               	movwf	NRF_Write_Reg@value
  2494  020D  3026               	movlw	38
  2495  020E  22F8               	fcall	_NRF_Write_Reg
  2496  020F  0008               	return
  2497  0210                     __end_of_NRF_Rx_Set:	
  2498                           
  2499                           	psect	text9
  2500  0305                     __ptext9:	
  2501 ;; *************** function _NRF_Rx_Receive *****************
  2502 ;; Defined at:
  2503 ;;		line 458 in file "../library/nrf24l01.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 1F/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1
  2517 ;;      Params:         0       0       0
  2518 ;;      Locals:         0       0       0
  2519 ;;      Temps:          1       0       0
  2520 ;;      Totals:         1       0       0
  2521 ;;Total ram usage:        1 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    3
  2524 ;; This function calls:
  2525 ;;		_NRF_Write_Reg
  2526 ;; This function is called by:
  2527 ;;		_WirelessPad
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function _NRF_Rx_Receive
  2533  0305                     _NRF_Rx_Receive:	
  2534                           
  2535                           ;../library/nrf24l01.c: 459:     RA0 = 0;
  2536                           
  2537                           ;incstack = 0
  2538                           ; Regs used in _NRF_Rx_Receive: [wreg+status,2+status,0+pclath+cstack]
  2539  0305  100C               	bcf	12,0	;volatile
  2540                           
  2541                           ;../library/nrf24l01.c: 460:     NRF_Write_Reg(0x20 + 0x00, 0x0f);
  2542  0306  300F               	movlw	15
  2543  0307  00F5               	movwf	??_NRF_Rx_Receive
  2544  0308  0875               	movf	??_NRF_Rx_Receive,w
  2545  0309  00F1               	movwf	NRF_Write_Reg@value
  2546  030A  3020               	movlw	32
  2547  030B  22F8               	fcall	_NRF_Write_Reg
  2548                           
  2549                           ;../library/nrf24l01.c: 461:     RA0 = 1;
  2550  030C  140C               	bsf	12,0	;volatile
  2551                           
  2552                           ;../library/nrf24l01.c: 462:     _delay((unsigned long)((200)*(125000/4000000.0)));
  2553  030D  3200               	nop2	;2 cycle nop
  2554  030E  3200               	nop2	;2 cycle nop
  2555  030F  3200               	nop2	;2 cycle nop
  2556  0310  0008               	return
  2557  0311                     __end_of_NRF_Rx_Receive:	
  2558                           
  2559                           	psect	text10
  2560  0246                     __ptext10:	
  2561 ;; *************** function _NRF_RxPacket *****************
  2562 ;; Defined at:
  2563 ;;		line 266 in file "../library/nrf24l01.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  rxbuf           1    wreg     PTR unsigned char 
  2566 ;;		 -> WirelessPad@rxbuf(2), 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  rxbuf           1    0[BANK0 ] PTR unsigned char 
  2569 ;;		 -> WirelessPad@rxbuf(2), 
  2570 ;;  status          1    1[BANK0 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      unsigned char 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 1F/0
  2577 ;;		On exit  : 1F/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1
  2580 ;;      Params:         0       0       0
  2581 ;;      Locals:         0       2       0
  2582 ;;      Temps:          1       0       0
  2583 ;;      Totals:         1       2       0
  2584 ;;Total ram usage:        3 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    6
  2587 ;; This function calls:
  2588 ;;		_NRF_Flush_RX
  2589 ;;		_NRF_Get_Status
  2590 ;;		_NRF_Read_RX_Pload
  2591 ;;		_NRF_Write_Reg
  2592 ;; This function is called by:
  2593 ;;		_WirelessPad
  2594 ;; This function uses a non-reentrant model
  2595 ;;
  2596                           
  2597                           
  2598                           ;psect for function _NRF_RxPacket
  2599  0246                     _NRF_RxPacket:	
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _NRF_RxPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2603                           ;NRF_RxPacket@rxbuf stored from wreg
  2604  0246  00D2               	movwf	NRF_RxPacket@rxbuf
  2605                           
  2606                           ;../library/nrf24l01.c: 270:     if(NRF_Get_Status() & 0X40) {
  2607  0247  2368               	fcall	_NRF_Get_Status
  2608  0248  3940               	andlw	64
  2609  0249  1903               	btfsc	3,2
  2610  024A  2A5D               	goto	l1584
  2611                           
  2612                           ;../library/nrf24l01.c: 271:         status = NRF_Read_RX_Pload(rxbuf);
  2613  024B  0852               	movf	NRF_RxPacket@rxbuf,w
  2614  024C  2279               	fcall	_NRF_Read_RX_Pload
  2615  024D  00FD               	movwf	??_NRF_RxPacket
  2616  024E  087D               	movf	??_NRF_RxPacket,w
  2617  024F  00D3               	movwf	NRF_RxPacket@status
  2618                           
  2619                           ;../library/nrf24l01.c: 272:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  2620  0250  30FF               	movlw	255
  2621  0251  00FD               	movwf	??_NRF_RxPacket
  2622  0252  087D               	movf	??_NRF_RxPacket,w
  2623  0253  00F1               	movwf	NRF_Write_Reg@value
  2624  0254  3027               	movlw	39
  2625  0255  22F8               	fcall	_NRF_Write_Reg
  2626                           
  2627                           ;../library/nrf24l01.c: 273:         NRF_Flush_RX();
  2628  0256  2360               	fcall	_NRF_Flush_RX
  2629                           
  2630                           ;../library/nrf24l01.c: 274:         status = status + 1;
  2631  0257  0853               	movf	NRF_RxPacket@status,w
  2632  0258  3E01               	addlw	1
  2633  0259  00FD               	movwf	??_NRF_RxPacket
  2634  025A  087D               	movf	??_NRF_RxPacket,w
  2635  025B  00D3               	movwf	NRF_RxPacket@status
  2636                           
  2637                           ;../library/nrf24l01.c: 275:     }else {
  2638  025C  2A5E               	goto	l1586
  2639  025D                     l1584:	
  2640                           
  2641                           ;../library/nrf24l01.c: 276:         status = 0;
  2642  025D  01D3               	clrf	NRF_RxPacket@status
  2643  025E                     l1586:	
  2644                           
  2645                           ;../library/nrf24l01.c: 279:  return status;
  2646  025E  0853               	movf	NRF_RxPacket@status,w
  2647  025F  0008               	return
  2648  0260                     __end_of_NRF_RxPacket:	
  2649                           
  2650                           	psect	text11
  2651  0279                     __ptext11:	
  2652 ;; *************** function _NRF_Read_RX_Pload *****************
  2653 ;; Defined at:
  2654 ;;		line 295 in file "../library/nrf24l01.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;  pBuf            1    wreg     PTR unsigned char 
  2657 ;;		 -> WirelessPad@rxbuf(2), 
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  pBuf            1   11[COMMON] PTR unsigned char 
  2660 ;;		 -> WirelessPad@rxbuf(2), 
  2661 ;;  pipe            1   12[COMMON] unsigned char 
  2662 ;;  width           1   10[COMMON] unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      unsigned char 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 1F/0
  2669 ;;		On exit  : 1F/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1
  2672 ;;      Params:         0       0       0
  2673 ;;      Locals:         3       0       0
  2674 ;;      Temps:          2       0       0
  2675 ;;      Totals:         5       0       0
  2676 ;;Total ram usage:        5 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    5
  2679 ;; This function calls:
  2680 ;;		_NRF_Get_Current_Pipenum
  2681 ;;		_NRF_Read_Buf
  2682 ;;		_NRF_Read_Reg
  2683 ;; This function is called by:
  2684 ;;		_NRF_RxPacket
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           
  2689                           ;psect for function _NRF_Read_RX_Pload
  2690  0279                     _NRF_Read_RX_Pload:	
  2691                           
  2692                           ;incstack = 0
  2693                           ; Regs used in _NRF_Read_RX_Pload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2694                           ;NRF_Read_RX_Pload@pBuf stored from wreg
  2695  0279  00FB               	movwf	NRF_Read_RX_Pload@pBuf
  2696                           
  2697                           ;../library/nrf24l01.c: 296:     unsigned char pipe, width;;../library/nrf24l01.c: 297: 
      +                              pipe = NRF_Get_Current_Pipenum();
  2698  027A  235C               	fcall	_NRF_Get_Current_Pipenum
  2699  027B  00F8               	movwf	??_NRF_Read_RX_Pload
  2700  027C  0878               	movf	??_NRF_Read_RX_Pload,w
  2701  027D  00FC               	movwf	NRF_Read_RX_Pload@pipe
  2702                           
  2703                           ;../library/nrf24l01.c: 298:     width = NRF_Read_Reg(0x11 + pipe);
  2704  027E  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2705  027F  3E11               	addlw	17
  2706  0280  22EA               	fcall	_NRF_Read_Reg
  2707  0281  00F8               	movwf	??_NRF_Read_RX_Pload
  2708  0282  0878               	movf	??_NRF_Read_RX_Pload,w
  2709  0283  00FA               	movwf	NRF_Read_RX_Pload@width
  2710                           
  2711                           ;../library/nrf24l01.c: 299:     NRF_Read_Buf(0x61, pBuf, width);
  2712  0284  087B               	movf	NRF_Read_RX_Pload@pBuf,w
  2713  0285  00F8               	movwf	??_NRF_Read_RX_Pload
  2714  0286  0878               	movf	??_NRF_Read_RX_Pload,w
  2715  0287  00F1               	movwf	NRF_Read_Buf@pBuf
  2716  0288  087A               	movf	NRF_Read_RX_Pload@width,w
  2717  0289  00F9               	movwf	??_NRF_Read_RX_Pload+1
  2718  028A  0879               	movf	??_NRF_Read_RX_Pload+1,w
  2719  028B  00F2               	movwf	NRF_Read_Buf@len
  2720  028C  3061               	movlw	97
  2721  028D  21D9               	fcall	_NRF_Read_Buf
  2722                           
  2723                           ;../library/nrf24l01.c: 300:     return pipe;
  2724  028E  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2725  028F  0008               	return
  2726  0290                     __end_of_NRF_Read_RX_Pload:	
  2727                           
  2728                           	psect	text12
  2729  035C                     __ptext12:	
  2730 ;; *************** function _NRF_Get_Current_Pipenum *****************
  2731 ;; Defined at:
  2732 ;;		line 286 in file "../library/nrf24l01.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      unsigned char 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 1F/0
  2743 ;;		On exit  : 1F/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1
  2746 ;;      Params:         0       0       0
  2747 ;;      Locals:         0       0       0
  2748 ;;      Temps:          0       0       0
  2749 ;;      Totals:         0       0       0
  2750 ;;Total ram usage:        0 bytes
  2751 ;; Hardware stack levels used:    1
  2752 ;; Hardware stack levels required when called:    4
  2753 ;; This function calls:
  2754 ;;		_NRF_Get_Status
  2755 ;; This function is called by:
  2756 ;;		_NRF_Read_RX_Pload
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _NRF_Get_Current_Pipenum
  2762  035C                     _NRF_Get_Current_Pipenum:	
  2763                           
  2764                           ;../library/nrf24l01.c: 287:   return ((NRF_Get_Status() & 0x0E) >> 1);
  2765                           
  2766                           ;incstack = 0
  2767                           ; Regs used in _NRF_Get_Current_Pipenum: [wreg+status,2+status,0+pclath+cstack]
  2768  035C  2368               	fcall	_NRF_Get_Status
  2769  035D  3689               	lsrf	9,f
  2770  035E  3907               	andlw	7
  2771  035F  0008               	return
  2772  0360                     __end_of_NRF_Get_Current_Pipenum:	
  2773                           
  2774                           	psect	text13
  2775  0368                     __ptext13:	
  2776 ;; *************** function _NRF_Get_Status *****************
  2777 ;; Defined at:
  2778 ;;		line 306 in file "../library/nrf24l01.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      unsigned char 
  2785 ;; Registers used:
  2786 ;;		wreg, status,2, status,0, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 1F/0
  2789 ;;		On exit  : 1F/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1
  2792 ;;      Params:         0       0       0
  2793 ;;      Locals:         0       0       0
  2794 ;;      Temps:          0       0       0
  2795 ;;      Totals:         0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    3
  2799 ;; This function calls:
  2800 ;;		_NRF_Read_Reg
  2801 ;; This function is called by:
  2802 ;;		_NRF_RxPacket
  2803 ;;		_NRF_Get_Current_Pipenum
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807                           
  2808                           ;psect for function _NRF_Get_Status
  2809  0368                     _NRF_Get_Status:	
  2810                           
  2811                           ;../library/nrf24l01.c: 307:     return NRF_Read_Reg(0x07);
  2812                           
  2813                           ;incstack = 0
  2814                           ; Regs used in _NRF_Get_Status: [wreg+status,2+status,0+pclath+cstack]
  2815  0368  3007               	movlw	7
  2816  0369  22EA               	fcall	_NRF_Read_Reg
  2817  036A  0008               	return
  2818  036B                     __end_of_NRF_Get_Status:	
  2819                           
  2820                           	psect	text14
  2821  02EA                     __ptext14:	
  2822 ;; *************** function _NRF_Read_Reg *****************
  2823 ;; Defined at:
  2824 ;;		line 89 in file "../library/nrf24l01.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  reg             1    wreg     unsigned char 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  reg             1    2[COMMON] unsigned char 
  2829 ;;  status          1    3[COMMON] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 1F/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1
  2839 ;;      Params:         0       0       0
  2840 ;;      Locals:         2       0       0
  2841 ;;      Temps:          1       0       0
  2842 ;;      Totals:         3       0       0
  2843 ;;Total ram usage:        3 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    2
  2846 ;; This function calls:
  2847 ;;		_NRF_SPI_RW
  2848 ;; This function is called by:
  2849 ;;		_NRF_Read_RX_Pload
  2850 ;;		_NRF_Get_Status
  2851 ;;		_NRF_Tx_CheckACK
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _NRF_Read_Reg
  2857  02EA                     _NRF_Read_Reg:	
  2858                           
  2859                           ;incstack = 0
  2860                           ; Regs used in _NRF_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  2861                           ;NRF_Read_Reg@reg stored from wreg
  2862  02EA  00F2               	movwf	NRF_Read_Reg@reg
  2863                           
  2864                           ;../library/nrf24l01.c: 90:  unsigned char status;;../library/nrf24l01.c: 91:    RA2 = 0
      +                          ;
  2865  02EB  0020               	movlb	0	; select bank0
  2866  02EC  110C               	bcf	12,2	;volatile
  2867                           
  2868                           ;../library/nrf24l01.c: 92:    NRF_SPI_RW(reg);
  2869  02ED  0872               	movf	NRF_Read_Reg@reg,w
  2870  02EE  2311               	fcall	_NRF_SPI_RW
  2871                           
  2872                           ;../library/nrf24l01.c: 93:    status = NRF_SPI_RW(0xFF);
  2873  02EF  30FF               	movlw	255
  2874  02F0  2311               	fcall	_NRF_SPI_RW
  2875  02F1  00F1               	movwf	??_NRF_Read_Reg
  2876  02F2  0871               	movf	??_NRF_Read_Reg,w
  2877  02F3  00F3               	movwf	NRF_Read_Reg@status
  2878                           
  2879                           ;../library/nrf24l01.c: 94:    RA2 = 1;
  2880  02F4  0020               	movlb	0	; select bank0
  2881  02F5  150C               	bsf	12,2	;volatile
  2882                           
  2883                           ;../library/nrf24l01.c: 95:    return(status);
  2884  02F6  0873               	movf	NRF_Read_Reg@status,w
  2885  02F7  0008               	return
  2886  02F8                     __end_of_NRF_Read_Reg:	
  2887                           
  2888                           	psect	text15
  2889  0360                     __ptext15:	
  2890 ;; *************** function _NRF_Flush_RX *****************
  2891 ;; Defined at:
  2892 ;;		line 320 in file "../library/nrf24l01.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 1F/0
  2903 ;;		On exit  : 1F/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1
  2906 ;;      Params:         0       0       0
  2907 ;;      Locals:         0       0       0
  2908 ;;      Temps:          0       0       0
  2909 ;;      Totals:         0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    3
  2913 ;; This function calls:
  2914 ;;		_NRF_Write_Reg
  2915 ;; This function is called by:
  2916 ;;		_NRF_RxPacket
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           
  2921                           ;psect for function _NRF_Flush_RX
  2922  0360                     _NRF_Flush_RX:	
  2923                           
  2924                           ;../library/nrf24l01.c: 321:     NRF_Write_Reg(0xE2, 0);
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _NRF_Flush_RX: [wreg+status,2+status,0+pclath+cstack]
  2928  0360  01F1               	clrf	NRF_Write_Reg@value
  2929  0361  30E2               	movlw	226
  2930  0362  22F8               	fcall	_NRF_Write_Reg
  2931  0363  0008               	return
  2932  0364                     __end_of_NRF_Flush_RX:	
  2933                           
  2934                           	psect	text16
  2935  0327                     __ptext16:	
  2936 ;; *************** function _NRF_Port_Init *****************
  2937 ;; Defined at:
  2938 ;;		line 46 in file "../library/nrf24l01.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		None
  2947 ;; Tracked objects:
  2948 ;;		On entry : 1F/0
  2949 ;;		On exit  : 1F/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1
  2952 ;;      Params:         0       0       0
  2953 ;;      Locals:         0       0       0
  2954 ;;      Temps:          0       0       0
  2955 ;;      Totals:         0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_WirelessPad
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           
  2967                           ;psect for function _NRF_Port_Init
  2968  0327                     _NRF_Port_Init:	
  2969                           
  2970                           ;../library/nrf24l01.c: 47:     TRISC1 = 1;
  2971                           
  2972                           ;incstack = 0
  2973                           ; Regs used in _NRF_Port_Init: []
  2974  0327  0021               	movlb	1	; select bank1
  2975  0328  148E               	bsf	14,1	;volatile
  2976                           
  2977                           ;../library/nrf24l01.c: 48:     TRISC2 = 0;
  2978  0329  110E               	bcf	14,2	;volatile
  2979                           
  2980                           ;../library/nrf24l01.c: 49:     TRISC0 = 0;
  2981  032A  100E               	bcf	14,0	;volatile
  2982                           
  2983                           ;../library/nrf24l01.c: 50:     TRISA2 = 0;
  2984  032B  110C               	bcf	12,2	;volatile
  2985                           
  2986                           ;../library/nrf24l01.c: 51:     TRISA0 = 0;
  2987  032C  100C               	bcf	12,0	;volatile
  2988                           
  2989                           ;../library/nrf24l01.c: 56:     RA0 = 0;
  2990  032D  0020               	movlb	0	; select bank0
  2991  032E  100C               	bcf	12,0	;volatile
  2992                           
  2993                           ;../library/nrf24l01.c: 57:     RA2 = 1;
  2994  032F  150C               	bsf	12,2	;volatile
  2995  0330  0008               	return
  2996  0331                     __end_of_NRF_Port_Init:	
  2997                           
  2998                           	psect	text17
  2999  037E                     __ptext17:	
  3000 ;; *************** function _NRF_On *****************
  3001 ;; Defined at:
  3002 ;;		line 60 in file "../library/nrf24l01.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;		None
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		None
  3011 ;; Tracked objects:
  3012 ;;		On entry : 1F/0
  3013 ;;		On exit  : 1F/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1
  3016 ;;      Params:         0       0       0
  3017 ;;      Locals:         0       0       0
  3018 ;;      Temps:          0       0       0
  3019 ;;      Totals:         0       0       0
  3020 ;;Total ram usage:        0 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_WirelessPad
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           
  3031                           ;psect for function _NRF_On
  3032  037E                     _NRF_On:	
  3033                           
  3034                           ;../library/nrf24l01.c: 61:     RA5 = 0;
  3035                           
  3036                           ;incstack = 0
  3037                           ; Regs used in _NRF_On: []
  3038  037E  128C               	bcf	12,5	;volatile
  3039  037F  0008               	return
  3040  0380                     __end_of_NRF_On:	
  3041                           
  3042                           	psect	text18
  3043  02DA                     __ptext18:	
  3044 ;; *************** function _NRF_Clear_IRQ *****************
  3045 ;; Defined at:
  3046 ;;		line 324 in file "../library/nrf24l01.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  buf             2    0        PTR unsigned char 
  3051 ;;  temp            1    8[COMMON] unsigned char 
  3052 ;;  IRQ_FLAG        1    0        unsigned char 
  3053 ;;  rx_pw           1    0        unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      unsigned char 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, pclath, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 1F/0
  3060 ;;		On exit  : 1F/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1
  3063 ;;      Params:         0       0       0
  3064 ;;      Locals:         2       0       0
  3065 ;;      Temps:          2       0       0
  3066 ;;      Totals:         4       0       0
  3067 ;;Total ram usage:        4 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; Hardware stack levels required when called:    3
  3070 ;; This function calls:
  3071 ;;		_NRF_Write_Reg
  3072 ;; This function is called by:
  3073 ;;		_WirelessPad
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           
  3078                           ;psect for function _NRF_Clear_IRQ
  3079  02DA                     _NRF_Clear_IRQ:	
  3080                           
  3081                           ;../library/nrf24l01.c: 326:     unsigned char IRQ_FLAG;;../library/nrf24l01.c: 328:    
      +                           unsigned char temp, rx_pw;;../library/nrf24l01.c: 329:     unsigned char* buf;;../libra
      +                          ry/nrf24l01.c: 331:     temp = NRF_Write_Reg(0x20 + 0x07, 0x70);
  3082                           
  3083                           ;incstack = 0
  3084                           ; Regs used in _NRF_Clear_IRQ: [wreg+status,2+status,0+pclath+cstack]
  3085  02DA  3070               	movlw	112
  3086  02DB  00F5               	movwf	??_NRF_Clear_IRQ
  3087  02DC  0875               	movf	??_NRF_Clear_IRQ,w
  3088  02DD  00F1               	movwf	NRF_Write_Reg@value
  3089  02DE  3027               	movlw	39
  3090  02DF  22F8               	fcall	_NRF_Write_Reg
  3091  02E0  00F6               	movwf	??_NRF_Clear_IRQ+1
  3092  02E1  0876               	movf	??_NRF_Clear_IRQ+1,w
  3093  02E2  00F8               	movwf	NRF_Clear_IRQ@temp
  3094                           
  3095                           ;../library/nrf24l01.c: 333:     if(temp & 0X10) IRQ_FLAG = 0X10;
  3096  02E3  1A78               	btfsc	NRF_Clear_IRQ@temp,4
  3097  02E4  2AE5               	goto	l1596
  3098  02E5                     l1596:	
  3099                           
  3100                           ;../library/nrf24l01.c: 334:     if(temp & 0X20) IRQ_FLAG = 0X20;
  3101  02E5  1AF8               	btfsc	NRF_Clear_IRQ@temp,5
  3102  02E6  2AE7               	goto	l1600
  3103  02E7                     l1600:	
  3104                           
  3105                           ;../library/nrf24l01.c: 336:     if(temp & 0X40)
  3106  02E7  1B78               	btfsc	NRF_Clear_IRQ@temp,6
  3107  02E8  0008               	return
  3108  02E9  0008               	return
  3109  02EA                     __end_of_NRF_Clear_IRQ:	
  3110                           
  3111                           	psect	text19
  3112  02F8                     __ptext19:	
  3113 ;; *************** function _NRF_Write_Reg *****************
  3114 ;; Defined at:
  3115 ;;		line 105 in file "../library/nrf24l01.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;  reg             1    wreg     unsigned char 
  3118 ;;  value           1    1[COMMON] unsigned char 
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  reg             1    3[COMMON] unsigned char 
  3121 ;;  status          1    4[COMMON] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      unsigned char 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, pclath, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 1F/0
  3128 ;;		On exit  : 1F/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMMON   BANK0   BANK1
  3131 ;;      Params:         1       0       0
  3132 ;;      Locals:         2       0       0
  3133 ;;      Temps:          1       0       0
  3134 ;;      Totals:         4       0       0
  3135 ;;Total ram usage:        4 bytes
  3136 ;; Hardware stack levels used:    1
  3137 ;; Hardware stack levels required when called:    2
  3138 ;; This function calls:
  3139 ;;		_NRF_SPI_RW
  3140 ;; This function is called by:
  3141 ;;		_NRF_RxPacket
  3142 ;;		_NRF_Flush_RX
  3143 ;;		_NRF_Clear_IRQ
  3144 ;;		_NRF_Tx_Set
  3145 ;;		_NRF_Tx_CheckACK
  3146 ;;		_NRF_Rx_Set
  3147 ;;		_NRF_Rx_Set_P0
  3148 ;;		_NRF_Rx_Receive
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _NRF_Write_Reg
  3154  02F8                     _NRF_Write_Reg:	
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in _NRF_Write_Reg: [wreg+status,2+status,0+pclath+cstack]
  3158                           ;NRF_Write_Reg@reg stored from wreg
  3159  02F8  00F3               	movwf	NRF_Write_Reg@reg
  3160                           
  3161                           ;../library/nrf24l01.c: 106:  unsigned char status;;../library/nrf24l01.c: 107:    RA2 =
      +                           0;
  3162  02F9  110C               	bcf	12,2	;volatile
  3163                           
  3164                           ;../library/nrf24l01.c: 108:    status = NRF_SPI_RW(reg);
  3165  02FA  0873               	movf	NRF_Write_Reg@reg,w
  3166  02FB  2311               	fcall	_NRF_SPI_RW
  3167  02FC  00F2               	movwf	??_NRF_Write_Reg
  3168  02FD  0872               	movf	??_NRF_Write_Reg,w
  3169  02FE  00F4               	movwf	NRF_Write_Reg@status
  3170                           
  3171                           ;../library/nrf24l01.c: 109:    NRF_SPI_RW(value);
  3172  02FF  0871               	movf	NRF_Write_Reg@value,w
  3173  0300  2311               	fcall	_NRF_SPI_RW
  3174                           
  3175                           ;../library/nrf24l01.c: 110:    RA2 = 1;
  3176  0301  0020               	movlb	0	; select bank0
  3177  0302  150C               	bsf	12,2	;volatile
  3178                           
  3179                           ;../library/nrf24l01.c: 111:    return(status);
  3180  0303  0874               	movf	NRF_Write_Reg@status,w
  3181  0304  0008               	return
  3182  0305                     __end_of_NRF_Write_Reg:	
  3183                           
  3184                           	psect	text20
  3185  00DD                     __ptext20:	
  3186 ;; *************** function _NRF_Check *****************
  3187 ;; Defined at:
  3188 ;;		line 160 in file "../library/nrf24l01.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;		None
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  buf             5    5[BANK0 ] unsigned char [5]
  3193 ;;  tuf             5    0[BANK0 ] unsigned char [5]
  3194 ;;  i               1   10[BANK0 ] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/4
  3201 ;;		On exit  : 1F/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1
  3204 ;;      Params:         0       0       0
  3205 ;;      Locals:         0      11       0
  3206 ;;      Temps:          2       0       0
  3207 ;;      Totals:         2      11       0
  3208 ;;Total ram usage:       13 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:    3
  3211 ;; This function calls:
  3212 ;;		_NRF_Read_Buf
  3213 ;;		_NRF_Write_Buf
  3214 ;; This function is called by:
  3215 ;;		_WirelessPad
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           
  3220                           ;psect for function _NRF_Check
  3221  00DD                     _NRF_Check:	
  3222                           
  3223                           ;../library/nrf24l01.c: 161:     unsigned char tuf[5] = {0xE1, 0xE2, 0xE3, 0xE4, 0x05};
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _NRF_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3227  00DD  3020               	movlw	low NRF_Check@F2718
  3228  00DE  0086               	movwf	6
  3229  00DF  3000               	movlw	high NRF_Check@F2718
  3230  00E0  0087               	movwf	7
  3231  00E1  3052               	movlw	low NRF_Check@tuf
  3232  00E2  0084               	movwf	4
  3233  00E3  3000               	movlw	high NRF_Check@tuf
  3234  00E4  0085               	movwf	5
  3235  00E5  3005               	movlw	5
  3236  00E6  00F8               	movwf	??_NRF_Check
  3237  00E7                     u400:	
  3238  00E7  0016               	moviw fsr1++
  3239  00E8  001A               	movwi fsr0++
  3240  00E9  0BF8               	decfsz	??_NRF_Check,f
  3241  00EA  28E7               	goto	u400
  3242                           
  3243                           ;../library/nrf24l01.c: 162:  unsigned char buf[5] = {0, 0, 0, 0, 0};
  3244  00EB  3057               	movlw	low NRF_Check@buf
  3245  00EC  0086               	movwf	6
  3246  00ED  3000               	movlw	high NRF_Check@buf
  3247  00EE  0087               	movwf	7
  3248  00EF  3005               	movlw	5
  3249  00F0  00F8               	movwf	??_NRF_Check
  3250  00F1  3000               	movlw	0
  3251  00F2                     u410:	
  3252  00F2  001E               	movwi fsr1++
  3253  00F3  0BF8               	decfsz	??_NRF_Check,f
  3254  00F4  28F2               	goto	u410
  3255                           
  3256                           ;../library/nrf24l01.c: 163:  unsigned char i;;../library/nrf24l01.c: 164:     NRF_Write
      +                          _Buf(0x20 + 0x10, tuf, 5);
  3257  00F5  3052               	movlw	(low (NRF_Check@tuf| 0))& (0+255)
  3258  00F6  00F8               	movwf	??_NRF_Check
  3259  00F7  0878               	movf	??_NRF_Check,w
  3260  00F8  00F1               	movwf	NRF_Write_Buf@pBuf
  3261  00F9  3005               	movlw	5
  3262  00FA  00F9               	movwf	??_NRF_Check+1
  3263  00FB  0879               	movf	??_NRF_Check+1,w
  3264  00FC  00F2               	movwf	NRF_Write_Buf@len
  3265  00FD  3030               	movlw	48
  3266  00FE  2210               	fcall	_NRF_Write_Buf
  3267                           
  3268                           ;../library/nrf24l01.c: 165:  NRF_Read_Buf(0x10, buf, 5);
  3269  00FF  3057               	movlw	(low (NRF_Check@buf| 0))& (0+255)
  3270  0100  00F8               	movwf	??_NRF_Check
  3271  0101  0878               	movf	??_NRF_Check,w
  3272  0102  00F1               	movwf	NRF_Read_Buf@pBuf
  3273  0103  3005               	movlw	5
  3274  0104  00F9               	movwf	??_NRF_Check+1
  3275  0105  0879               	movf	??_NRF_Check+1,w
  3276  0106  00F2               	movwf	NRF_Read_Buf@len
  3277  0107  3010               	movlw	16
  3278  0108  21D9               	fcall	_NRF_Read_Buf
  3279                           
  3280                           ;../library/nrf24l01.c: 166:  for(i = 0; i < 5; i++) if(tuf[i] != buf[i]) break;
  3281  0109  01DC               	clrf	NRF_Check@i
  3282  010A                     l1554:	
  3283  010A  085C               	movf	NRF_Check@i,w
  3284  010B  3E57               	addlw	(low (NRF_Check@buf| 0))& (0+255)
  3285  010C  0086               	movwf	6
  3286  010D  0187               	clrf	7
  3287  010E  085C               	movf	NRF_Check@i,w
  3288  010F  3E52               	addlw	(low (NRF_Check@tuf| 0))& (0+255)
  3289  0110  0084               	movwf	4
  3290  0111  0185               	clrf	5
  3291  0112  0800               	movf	0,w
  3292  0113  0601               	xorwf	1,w
  3293  0114  1D03               	btfss	3,2
  3294  0115  291E               	goto	l1562
  3295  0116  3001               	movlw	1
  3296  0117  00F8               	movwf	??_NRF_Check
  3297  0118  0878               	movf	??_NRF_Check,w
  3298  0119  07DC               	addwf	NRF_Check@i,f
  3299  011A  3005               	movlw	5
  3300  011B  025C               	subwf	NRF_Check@i,w
  3301  011C  1C03               	skipc
  3302  011D  290A               	goto	l1554
  3303  011E                     l1562:	
  3304                           
  3305                           ;../library/nrf24l01.c: 167:  if(i != 5) return 1;
  3306  011E  3005               	movlw	5
  3307  011F  065C               	xorwf	NRF_Check@i,w
  3308  0120  1903               	btfsc	3,2
  3309  0121  2924               	goto	l1568
  3310  0122  3001               	movlw	1
  3311  0123  0008               	return
  3312  0124                     l1568:	
  3313                           
  3314                           ;../library/nrf24l01.c: 168:  return 0;
  3315  0124  3000               	movlw	0
  3316  0125  0008               	return
  3317  0126                     __end_of_NRF_Check:	
  3318                           
  3319                           	psect	text21
  3320  0210                     __ptext21:	
  3321 ;; *************** function _NRF_Write_Buf *****************
  3322 ;; Defined at:
  3323 ;;		line 140 in file "../library/nrf24l01.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  reg             1    wreg     unsigned char 
  3326 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  3327 ;;		 -> tx_addr(5), pad_aux_dat(2), rx_addr_0(5), RX_ADDRESS_P5(5), 
  3328 ;;		 -> RX_ADDRESS_P4(5), RX_ADDRESS_P3(5), RX_ADDRESS_P2(5), RX_ADDRESS_P1(5), 
  3329 ;;		 -> RX_ADDRESS_P0(5), NRF_Check@tuf(5), 
  3330 ;;  len             1    2[COMMON] unsigned char 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  reg             1    5[COMMON] unsigned char 
  3333 ;;  i               1    6[COMMON] unsigned char 
  3334 ;;  status          1    0        unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      unsigned char 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 1F/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1
  3344 ;;      Params:         2       0       0
  3345 ;;      Locals:         3       0       0
  3346 ;;      Temps:          1       0       0
  3347 ;;      Totals:         6       0       0
  3348 ;;Total ram usage:        6 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    2
  3351 ;; This function calls:
  3352 ;;		_NRF_SPI_RW
  3353 ;; This function is called by:
  3354 ;;		_NRF_Check
  3355 ;;		_NRF_Tx_Set
  3356 ;;		_NRF_Tx_Send
  3357 ;;		_NRF_Rx_Set_P0
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           
  3362                           ;psect for function _NRF_Write_Buf
  3363  0210                     _NRF_Write_Buf:	
  3364                           
  3365                           ;incstack = 0
  3366                           ; Regs used in _NRF_Write_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3367                           ;NRF_Write_Buf@reg stored from wreg
  3368  0210  00F5               	movwf	NRF_Write_Buf@reg
  3369                           
  3370                           ;../library/nrf24l01.c: 140: unsigned char NRF_Write_Buf(unsigned char reg, unsigned cha
      +                          r *pBuf, unsigned char len);../library/nrf24l01.c: 141: {;../library/nrf24l01.c: 142:  u
      +                          nsigned char status, i;;../library/nrf24l01.c: 143:    RA2 = 0;
  3371  0211  0020               	movlb	0	; select bank0
  3372  0212  110C               	bcf	12,2	;volatile
  3373  0213  0875               	movf	NRF_Write_Buf@reg,w
  3374  0214  2311               	fcall	_NRF_SPI_RW
  3375                           
  3376                           ;../library/nrf24l01.c: 145:    for(i = 0; i < len; i++) {
  3377  0215  01F6               	clrf	NRF_Write_Buf@i
  3378  0216                     l1496:	
  3379  0216  0872               	movf	NRF_Write_Buf@len,w
  3380  0217  0276               	subwf	NRF_Write_Buf@i,w
  3381  0218  1803               	btfsc	3,0
  3382  0219  2A28               	goto	l113
  3383                           
  3384                           ;../library/nrf24l01.c: 146:      NRF_SPI_RW(*pBuf++);
  3385  021A  0871               	movf	NRF_Write_Buf@pBuf,w
  3386  021B  0086               	movwf	6
  3387  021C  0187               	clrf	7
  3388  021D  0801               	movf	1,w
  3389  021E  2311               	fcall	_NRF_SPI_RW
  3390  021F  3001               	movlw	1
  3391  0220  00F3               	movwf	??_NRF_Write_Buf
  3392  0221  0873               	movf	??_NRF_Write_Buf,w
  3393  0222  07F1               	addwf	NRF_Write_Buf@pBuf,f
  3394                           
  3395                           ;../library/nrf24l01.c: 147:  }
  3396  0223  3001               	movlw	1
  3397  0224  00F3               	movwf	??_NRF_Write_Buf
  3398  0225  0873               	movf	??_NRF_Write_Buf,w
  3399  0226  07F6               	addwf	NRF_Write_Buf@i,f
  3400  0227  2A16               	goto	l1496
  3401  0228                     l113:	
  3402                           
  3403                           ;../library/nrf24l01.c: 148:    RA2 = 1;
  3404  0228  0020               	movlb	0	; select bank0
  3405  0229  150C               	bsf	12,2	;volatile
  3406                           
  3407                           ;../library/nrf24l01.c: 149:    return(status);;	Return value of _NRF_Write_Buf is never
      +                           used
  3408  022A  0008               	return
  3409  022B                     __end_of_NRF_Write_Buf:	
  3410                           
  3411                           	psect	text22
  3412  01D9                     __ptext22:	
  3413 ;; *************** function _NRF_Read_Buf *****************
  3414 ;; Defined at:
  3415 ;;		line 121 in file "../library/nrf24l01.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  reg             1    wreg     unsigned char 
  3418 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  3419 ;;		 -> WirelessPad@rxbuf(2), NRF_Check@buf(5), 
  3420 ;;  len             1    2[COMMON] unsigned char 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  reg             1    6[COMMON] unsigned char 
  3423 ;;  i               1    7[COMMON] unsigned char 
  3424 ;;  status          1    0        unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  1    wreg      unsigned char 
  3427 ;; Registers used:
  3428 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 1F/0
  3431 ;;		On exit  : 1F/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1
  3434 ;;      Params:         2       0       0
  3435 ;;      Locals:         3       0       0
  3436 ;;      Temps:          2       0       0
  3437 ;;      Totals:         7       0       0
  3438 ;;Total ram usage:        7 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    2
  3441 ;; This function calls:
  3442 ;;		_NRF_SPI_RW
  3443 ;; This function is called by:
  3444 ;;		_NRF_Check
  3445 ;;		_NRF_Read_RX_Pload
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _NRF_Read_Buf
  3451  01D9                     _NRF_Read_Buf:	
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in _NRF_Read_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3455                           ;NRF_Read_Buf@reg stored from wreg
  3456  01D9  00F6               	movwf	NRF_Read_Buf@reg
  3457                           
  3458                           ;../library/nrf24l01.c: 121: unsigned char NRF_Read_Buf(unsigned char reg, unsigned char
      +                           *pBuf, unsigned char len);../library/nrf24l01.c: 122: {;../library/nrf24l01.c: 123:  un
      +                          signed char status,i;;../library/nrf24l01.c: 124:    RA2 = 0;
  3459  01DA  110C               	bcf	12,2	;volatile
  3460  01DB  0876               	movf	NRF_Read_Buf@reg,w
  3461  01DC  2311               	fcall	_NRF_SPI_RW
  3462                           
  3463                           ;../library/nrf24l01.c: 126:    for(i = 0; i < len; i++)
  3464  01DD  01F7               	clrf	NRF_Read_Buf@i
  3465  01DE                     l1478:	
  3466  01DE  0872               	movf	NRF_Read_Buf@len,w
  3467  01DF  0277               	subwf	NRF_Read_Buf@i,w
  3468  01E0  1803               	btfsc	3,0
  3469  01E1  29F2               	goto	l107
  3470                           
  3471                           ;../library/nrf24l01.c: 127:  {;../library/nrf24l01.c: 128:      pBuf[i] = NRF_SPI_RW(0x
      +                          FF);
  3472  01E2  30FF               	movlw	255
  3473  01E3  2311               	fcall	_NRF_SPI_RW
  3474  01E4  00F3               	movwf	??_NRF_Read_Buf
  3475  01E5  0877               	movf	NRF_Read_Buf@i,w
  3476  01E6  0771               	addwf	NRF_Read_Buf@pBuf,w
  3477  01E7  00F4               	movwf	??_NRF_Read_Buf+1
  3478  01E8  0874               	movf	??_NRF_Read_Buf+1,w
  3479  01E9  0086               	movwf	6
  3480  01EA  0187               	clrf	7
  3481  01EB  0873               	movf	??_NRF_Read_Buf,w
  3482  01EC  0081               	movwf	1
  3483                           
  3484                           ;../library/nrf24l01.c: 129:    }
  3485  01ED  3001               	movlw	1
  3486  01EE  00F3               	movwf	??_NRF_Read_Buf
  3487  01EF  0873               	movf	??_NRF_Read_Buf,w
  3488  01F0  07F7               	addwf	NRF_Read_Buf@i,f
  3489  01F1  29DE               	goto	l1478
  3490  01F2                     l107:	
  3491                           
  3492                           ;../library/nrf24l01.c: 130:  RA2 = 1;
  3493  01F2  0020               	movlb	0	; select bank0
  3494  01F3  150C               	bsf	12,2	;volatile
  3495                           
  3496                           ;../library/nrf24l01.c: 131:    return(status);;	Return value of _NRF_Read_Buf is never 
      +                          used
  3497  01F4  0008               	return
  3498  01F5                     __end_of_NRF_Read_Buf:	
  3499                           
  3500                           	psect	text23
  3501  0311                     __ptext23:	
  3502 ;; *************** function _NRF_SPI_RW *****************
  3503 ;; Defined at:
  3504 ;;		line 81 in file "../library/nrf24l01.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  dat             1    wreg     unsigned char 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  dat             1    0[COMMON] unsigned char 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      unsigned char 
  3511 ;; Registers used:
  3512 ;;		wreg
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 1F/4
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1
  3518 ;;      Params:         0       0       0
  3519 ;;      Locals:         1       0       0
  3520 ;;      Temps:          0       0       0
  3521 ;;      Totals:         1       0       0
  3522 ;;Total ram usage:        1 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_NRF_Read_Reg
  3529 ;;		_NRF_Write_Reg
  3530 ;;		_NRF_Read_Buf
  3531 ;;		_NRF_Write_Buf
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           
  3536                           ;psect for function _NRF_SPI_RW
  3537  0311                     _NRF_SPI_RW:	
  3538                           
  3539                           ;incstack = 0
  3540                           ; Regs used in _NRF_SPI_RW: [wreg]
  3541                           ;NRF_SPI_RW@dat stored from wreg
  3542  0311  00F0               	movwf	NRF_SPI_RW@dat
  3543                           
  3544                           ;../library/nrf24l01.c: 82:     SSP1IF = 0;
  3545  0312  0020               	movlb	0	; select bank0
  3546  0313  1191               	bcf	17,3	;volatile
  3547                           
  3548                           ;../library/nrf24l01.c: 83:     SSP1BUF = dat;
  3549  0314  0870               	movf	NRF_SPI_RW@dat,w
  3550  0315  0024               	movlb	4	; select bank4
  3551  0316  0091               	movwf	17	;volatile
  3552  0317                     l93:	
  3553                           ;../library/nrf24l01.c: 84:     while(!SSP1IF);
  3554                           
  3555  0317  0020               	movlb	0	; select bank0
  3556  0318  1D91               	btfss	17,3	;volatile
  3557  0319  2B17               	goto	l93
  3558                           
  3559                           ;../library/nrf24l01.c: 86:     return(SSP1BUF);
  3560  031A  0024               	movlb	4	; select bank4
  3561  031B  0811               	movf	17,w	;volatile
  3562  031C  0008               	return
  3563  031D                     __end_of_NRF_SPI_RW:	
  3564                           
  3565                           	psect	text24
  3566  022B                     __ptext24:	
  3567 ;; *************** function _LEDx *****************
  3568 ;; Defined at:
  3569 ;;		line 100 in file "main.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  num             1    wreg     unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  num             1    1[COMMON] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0
  3578 ;; Tracked objects:
  3579 ;;		On entry : 1F/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMMON   BANK0   BANK1
  3583 ;;      Params:         0       0       0
  3584 ;;      Locals:         1       0       0
  3585 ;;      Temps:          1       0       0
  3586 ;;      Totals:         2       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    1
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_WirelessPad
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _LEDx
  3599  022B                     _LEDx:	
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in _LEDx: [wreg+status,2+status,0]
  3603                           ;LEDx@num stored from wreg
  3604  022B  00F1               	movwf	LEDx@num
  3605  022C                     l1660:	
  3606                           ;main.c: 101:     while(num--) {
  3607                           
  3608                           
  3609                           ;main.c: 101:     while(num--) {
  3610  022C  3001               	movlw	1
  3611  022D  02F1               	subwf	LEDx@num,f
  3612  022E  0A71               	incf	LEDx@num,w
  3613  022F  1903               	btfsc	3,2
  3614  0230  0008               	return
  3615                           
  3616                           ;main.c: 102:         RA4 = 0;
  3617  0231  0020               	movlb	0	; select bank0
  3618  0232  120C               	bcf	12,4	;volatile
  3619                           
  3620                           ;main.c: 103:         _delay((unsigned long)((200)*(125000/4000.0)));
  3621  0233  3009               	movlw	9
  3622  0234  00F0               	movwf	??_LEDx
  3623  0235  301C               	movlw	28
  3624  0236                     u727:	
  3625  0236  0B89               	decfsz	9,f
  3626  0237  2A36               	goto	u727
  3627  0238  0BF0               	decfsz	??_LEDx,f
  3628  0239  2A36               	goto	u727
  3629  023A  3200               	nop2
  3630                           
  3631                           ;main.c: 104:         RA4 = 1;
  3632  023B  0020               	movlb	0	; select bank0
  3633  023C  160C               	bsf	12,4	;volatile
  3634                           
  3635                           ;main.c: 105:         _delay((unsigned long)((200)*(125000/4000.0)));
  3636  023D  3009               	movlw	9
  3637  023E  00F0               	movwf	??_LEDx
  3638  023F  301C               	movlw	28
  3639  0240                     u737:	
  3640  0240  0B89               	decfsz	9,f
  3641  0241  2A40               	goto	u737
  3642  0242  0BF0               	decfsz	??_LEDx,f
  3643  0243  2A40               	goto	u737
  3644  0244  3200               	nop2
  3645  0245  2A2C               	goto	l1660
  3646  0246                     __end_of_LEDx:	
  3647                           
  3648                           	psect	text25
  3649  01BB                     __ptext25:	
  3650 ;; *************** function _ADC_Read *****************
  3651 ;; Defined at:
  3652 ;;		line 129 in file "main.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  value           2    4[COMMON] unsigned int 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  2    0[COMMON] unsigned int 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/1
  3663 ;;		On exit  : 1F/1
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1
  3666 ;;      Params:         2       0       0
  3667 ;;      Locals:         2       0       0
  3668 ;;      Temps:          2       0       0
  3669 ;;      Totals:         6       0       0
  3670 ;;Total ram usage:        6 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_WirelessPad
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           
  3681                           ;psect for function _ADC_Read
  3682  01BB                     _ADC_Read:	
  3683                           
  3684                           ;main.c: 132:     ADCON0bits.GO = 1;
  3685                           
  3686                           ;incstack = 0
  3687                           ; Regs used in _ADC_Read: [wreg+status,2]
  3688  01BB  0021               	movlb	1	; select bank1
  3689  01BC  149D               	bsf	29,1	;volatile
  3690  01BD                     l401:	
  3691                           ;main.c: 133:     while(ADCON0bits.GO == 1);
  3692                           
  3693  01BD  189D               	btfsc	29,1	;volatile
  3694  01BE  29BD               	goto	l401
  3695                           
  3696                           ;main.c: 134:     value = (unsigned int)ADRESH;
  3697  01BF  081C               	movf	28,w	;volatile
  3698  01C0  00F2               	movwf	??_ADC_Read
  3699  01C1  01F3               	clrf	??_ADC_Read+1
  3700  01C2  0872               	movf	??_ADC_Read,w
  3701  01C3  00F4               	movwf	ADC_Read@value
  3702  01C4  0873               	movf	??_ADC_Read+1,w
  3703  01C5  00F5               	movwf	ADC_Read@value+1
  3704                           
  3705                           ;main.c: 135:     value = value<<8;
  3706  01C6  0874               	movf	ADC_Read@value,w
  3707  01C7  00F3               	movwf	??_ADC_Read+1
  3708  01C8  01F2               	clrf	??_ADC_Read
  3709  01C9  0872               	movf	??_ADC_Read,w
  3710  01CA  00F4               	movwf	ADC_Read@value
  3711  01CB  0873               	movf	??_ADC_Read+1,w
  3712  01CC  00F5               	movwf	ADC_Read@value+1
  3713                           
  3714                           ;main.c: 136:     value += ADRESL;
  3715  01CD  081B               	movf	27,w	;volatile
  3716  01CE  00F2               	movwf	??_ADC_Read
  3717  01CF  01F3               	clrf	??_ADC_Read+1
  3718  01D0  0872               	movf	??_ADC_Read,w
  3719  01D1  07F4               	addwf	ADC_Read@value,f
  3720  01D2  0873               	movf	??_ADC_Read+1,w
  3721  01D3  3DF5               	addwfc	ADC_Read@value+1,f
  3722                           
  3723                           ;main.c: 137:     return value;
  3724  01D4  0875               	movf	ADC_Read@value+1,w
  3725  01D5  00F1               	movwf	?_ADC_Read+1
  3726  01D6  0874               	movf	ADC_Read@value,w
  3727  01D7  00F0               	movwf	?_ADC_Read
  3728  01D8  0008               	return
  3729  01D9                     __end_of_ADC_Read:	
  3730                           
  3731                           	psect	text26
  3732  036B                     __ptext26:	
  3733 ;; *************** function _PORT_Init *****************
  3734 ;; Defined at:
  3735 ;;		line 4 in file "../library/port.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : B1F/1
  3746 ;;		On exit  : B1F/1
  3747 ;;		Unchanged: B00/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1
  3749 ;;      Params:         0       0       0
  3750 ;;      Locals:         0       0       0
  3751 ;;      Temps:          0       0       0
  3752 ;;      Totals:         0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    2
  3756 ;; This function calls:
  3757 ;;		_PORTA_Init
  3758 ;;		_PORTC_Init
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           
  3765                           ;psect for function _PORT_Init
  3766  036B                     _PORT_Init:	
  3767                           
  3768                           ;../library/port.c: 5:     PORTA_Init();
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
  3772  036B  233A               	fcall	_PORTA_Init
  3773                           
  3774                           ;../library/port.c: 6:     PORTC_Init();
  3775  036C  2331               	fcall	_PORTC_Init
  3776  036D  0008               	return
  3777  036E                     __end_of_PORT_Init:	
  3778                           
  3779                           	psect	text27
  3780  0331                     __ptext27:	
  3781 ;; *************** function _PORTC_Init *****************
  3782 ;; Defined at:
  3783 ;;		line 16 in file "../library/port.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		status,2
  3792 ;; Tracked objects:
  3793 ;;		On entry : B1F/1
  3794 ;;		On exit  : B1F/1
  3795 ;;		Unchanged: B00/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1
  3797 ;;      Params:         0       0       0
  3798 ;;      Locals:         0       0       0
  3799 ;;      Temps:          0       0       0
  3800 ;;      Totals:         0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used:    1
  3803 ;; Hardware stack levels required when called:    1
  3804 ;; This function calls:
  3805 ;;		Nothing
  3806 ;; This function is called by:
  3807 ;;		_PORT_Init
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _PORTC_Init
  3813  0331                     _PORTC_Init:	
  3814                           
  3815                           ;../library/port.c: 17:     PORTC = 0;
  3816                           
  3817                           ;incstack = 0
  3818                           ; Regs used in _PORTC_Init: [status,2]
  3819  0331  0020               	movlb	0	; select bank0
  3820  0332  018E               	clrf	14	;volatile
  3821                           
  3822                           ;../library/port.c: 18:     LATC = 0;
  3823  0333  0022               	movlb	2	; select bank2
  3824  0334  018E               	clrf	14	;volatile
  3825                           
  3826                           ;../library/port.c: 19:     ANSELC = 0;
  3827  0335  0023               	movlb	3	; select bank3
  3828  0336  018E               	clrf	14	;volatile
  3829                           
  3830                           ;../library/port.c: 20:     TRISC = 0;
  3831  0337  0021               	movlb	1	; select bank1
  3832  0338  018E               	clrf	14	;volatile
  3833  0339  0008               	return
  3834  033A                     __end_of_PORTC_Init:	
  3835                           
  3836                           	psect	text28
  3837  033A                     __ptext28:	
  3838 ;; *************** function _PORTA_Init *****************
  3839 ;; Defined at:
  3840 ;;		line 9 in file "../library/port.c"
  3841 ;; Parameters:    Size  Location     Type
  3842 ;;		None
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		status,2
  3849 ;; Tracked objects:
  3850 ;;		On entry : B1F/1
  3851 ;;		On exit  : B1F/1
  3852 ;;		Unchanged: B00/0
  3853 ;; Data sizes:     COMMON   BANK0   BANK1
  3854 ;;      Params:         0       0       0
  3855 ;;      Locals:         0       0       0
  3856 ;;      Temps:          0       0       0
  3857 ;;      Totals:         0       0       0
  3858 ;;Total ram usage:        0 bytes
  3859 ;; Hardware stack levels used:    1
  3860 ;; Hardware stack levels required when called:    1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_PORT_Init
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           
  3869                           ;psect for function _PORTA_Init
  3870  033A                     _PORTA_Init:	
  3871                           
  3872                           ;../library/port.c: 10:     PORTA = 0;
  3873                           
  3874                           ;incstack = 0
  3875                           ; Regs used in _PORTA_Init: [status,2]
  3876  033A  0020               	movlb	0	; select bank0
  3877  033B  018C               	clrf	12	;volatile
  3878                           
  3879                           ;../library/port.c: 11:     LATA = 0;
  3880  033C  0022               	movlb	2	; select bank2
  3881  033D  018C               	clrf	12	;volatile
  3882                           
  3883                           ;../library/port.c: 12:     ANSELA = 0;
  3884  033E  0023               	movlb	3	; select bank3
  3885  033F  018C               	clrf	12	;volatile
  3886                           
  3887                           ;../library/port.c: 13:     TRISA = 0;
  3888  0340  0021               	movlb	1	; select bank1
  3889  0341  018C               	clrf	12	;volatile
  3890  0342  0008               	return
  3891  0343                     __end_of_PORTA_Init:	
  3892                           
  3893                           	psect	text29
  3894  0364                     __ptext29:	
  3895 ;; *************** function _LED_Init *****************
  3896 ;; Defined at:
  3897 ;;		line 95 in file "main.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;		None
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		None
  3906 ;; Tracked objects:
  3907 ;;		On entry : B1F/1
  3908 ;;		On exit  : B1F/0
  3909 ;;		Unchanged: B00/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1
  3911 ;;      Params:         0       0       0
  3912 ;;      Locals:         0       0       0
  3913 ;;      Temps:          0       0       0
  3914 ;;      Totals:         0       0       0
  3915 ;;Total ram usage:        0 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    1
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _LED_Init
  3927  0364                     _LED_Init:	
  3928                           
  3929                           ;main.c: 96:     TRISA4 = 0;
  3930                           
  3931                           ;incstack = 0
  3932                           ; Regs used in _LED_Init: []
  3933  0364  120C               	bcf	12,4	;volatile
  3934                           
  3935                           ;main.c: 97:     RA4 = 1;
  3936  0365  0020               	movlb	0	; select bank0
  3937  0366  160C               	bsf	12,4	;volatile
  3938  0367  0008               	return
  3939  0368                     __end_of_LED_Init:	
  3940                           
  3941                           	psect	text30
  3942  0352                     __ptext30:	
  3943 ;; *************** function _Key_Init *****************
  3944 ;; Defined at:
  3945 ;;		line 160 in file "main.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		None
  3954 ;; Tracked objects:
  3955 ;;		On entry : B1F/0
  3956 ;;		On exit  : B1F/0
  3957 ;;		Unchanged: B00/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1
  3959 ;;      Params:         0       0       0
  3960 ;;      Locals:         0       0       0
  3961 ;;      Temps:          0       0       0
  3962 ;;      Totals:         0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_main
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _Key_Init
  3975  0352                     _Key_Init:	
  3976                           
  3977                           ;main.c: 162:     TRISA4 = 1;
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in _Key_Init: []
  3981  0352  0021               	movlb	1	; select bank1
  3982  0353  160C               	bsf	12,4	;volatile
  3983                           
  3984                           ;main.c: 163:     RA4 = 0;
  3985  0354  0020               	movlb	0	; select bank0
  3986  0355  120C               	bcf	12,4	;volatile
  3987  0356  0008               	return
  3988  0357                     __end_of_Key_Init:	
  3989                           
  3990                           	psect	text31
  3991  0357                     __ptext31:	
  3992 ;; *************** function _BEEP_Init *****************
  3993 ;; Defined at:
  3994 ;;		line 109 in file "main.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		None
  4003 ;; Tracked objects:
  4004 ;;		On entry : B1F/0
  4005 ;;		On exit  : B1F/0
  4006 ;;		Unchanged: B00/0
  4007 ;; Data sizes:     COMMON   BANK0   BANK1
  4008 ;;      Params:         0       0       0
  4009 ;;      Locals:         0       0       0
  4010 ;;      Temps:          0       0       0
  4011 ;;      Totals:         0       0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    1
  4015 ;; This function calls:
  4016 ;;		Nothing
  4017 ;; This function is called by:
  4018 ;;		_main
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           
  4023                           ;psect for function _BEEP_Init
  4024  0357                     _BEEP_Init:	
  4025                           
  4026                           ;main.c: 110:     TRISC3 = 0;
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _BEEP_Init: []
  4030  0357  0021               	movlb	1	; select bank1
  4031  0358  118E               	bcf	14,3	;volatile
  4032                           
  4033                           ;main.c: 111:     RC3 = 1;
  4034  0359  0020               	movlb	0	; select bank0
  4035  035A  158E               	bsf	14,3	;volatile
  4036  035B  0008               	return
  4037  035C                     __end_of_BEEP_Init:	
  4038                           
  4039                           	psect	text32
  4040  0343                     __ptext32:	
  4041 ;; *************** function _ADC_Init *****************
  4042 ;; Defined at:
  4043 ;;		line 123 in file "main.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;		None
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;		None
  4048 ;; Return value:  Size  Location     Type
  4049 ;;                  1    wreg      void 
  4050 ;; Registers used:
  4051 ;;		wreg
  4052 ;; Tracked objects:
  4053 ;;		On entry : B1F/0
  4054 ;;		On exit  : B1F/1
  4055 ;;		Unchanged: B00/0
  4056 ;; Data sizes:     COMMON   BANK0   BANK1
  4057 ;;      Params:         0       0       0
  4058 ;;      Locals:         0       0       0
  4059 ;;      Temps:          0       0       0
  4060 ;;      Totals:         0       0       0
  4061 ;;Total ram usage:        0 bytes
  4062 ;; Hardware stack levels used:    1
  4063 ;; Hardware stack levels required when called:    1
  4064 ;; This function calls:
  4065 ;;		Nothing
  4066 ;; This function is called by:
  4067 ;;		_main
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           
  4072                           ;psect for function _ADC_Init
  4073  0343                     _ADC_Init:	
  4074                           
  4075                           ;main.c: 124:     FVRCON = 0B01010001;
  4076                           
  4077                           ;incstack = 0
  4078                           ; Regs used in _ADC_Init: [wreg]
  4079  0343  3051               	movlw	81
  4080  0344  0022               	movlb	2	; select bank2
  4081  0345  0097               	movwf	23	;volatile
  4082                           
  4083                           ;main.c: 125:     ADCON1 = 0B10000000;
  4084  0346  3080               	movlw	128
  4085  0347  0021               	movlb	1	; select bank1
  4086  0348  009E               	movwf	30	;volatile
  4087                           
  4088                           ;main.c: 126:     ADCON0 = 0B01111100;
  4089  0349  307C               	movlw	124
  4090  034A  009D               	movwf	29	;volatile
  4091  034B  0008               	return
  4092  034C                     __end_of_ADC_Init:	
  4093                           
  4094                           	psect	intentry
  4095  0004                     __pintentry:	
  4096 ;; *************** function _ISR *****************
  4097 ;; Defined at:
  4098 ;;		line 176 in file "main.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;		None
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;		None
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		None
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1
  4112 ;;      Params:         0       0       0
  4113 ;;      Locals:         0       0       0
  4114 ;;      Temps:          0       0       0
  4115 ;;      Totals:         0       0       0
  4116 ;;Total ram usage:        0 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		Interrupt level 1
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125  0004                     _ISR:	
  4126                           
  4127                           ;incstack = 0
  4128  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4129                           
  4130                           ; Regs used in _ISR: []
  4131  0005  3180               	pagesel	$
  4132                           
  4133                           ;main.c: 178:     if(IOCIF && IOCAF4) {
  4134  0006  1C0B               	btfss	11,0	;volatile
  4135  0007  280F               	goto	i1l423
  4136  0008  0027               	movlb	7	; select bank7
  4137  0009  1E13               	btfss	19,4	;volatile
  4138  000A  280F               	goto	i1l423
  4139                           
  4140                           ;main.c: 179:         IOCIE = 0;
  4141  000B  118B               	bcf	11,3	;volatile
  4142                           
  4143                           ;main.c: 180:         IOCIF = 0;
  4144  000C  100B               	bcf	11,0	;volatile
  4145                           
  4146                           ;main.c: 181:         IOCAF4 = 0;
  4147  000D  1213               	bcf	19,4	;volatile
  4148                           
  4149                           ;main.c: 188:         IOCIE = 1;
  4150                           
  4151                           ;main.c: 183:         if(RA4 == 1) {
  4152                           ;main.c: 186:         }
  4153  000E  158B               	bsf	11,3	;volatile
  4154  000F                     i1l423:	
  4155  000F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4156  0010  0009               	retfie
  4157  0011                     __end_of_ISR:	
  4158  007E                     btemp	set	126	;btemp
  4159  007E                     int$flags	set	126
  4160  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        75
    BSS         10
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      78
    BANK1            32      0      25

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    NRF_Rx_Set_P0@addr	PTR unsigned char  size(1) Largest target is 5
		 -> rx_addr_0(BANK0[5]), 

    NRF_Tx_Send@txbuf	PTR unsigned char  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    NRF_Tx_Set@addr	PTR unsigned char  size(1) Largest target is 5
		 -> tx_addr(BANK0[5]), 

    NRF_Read_RX_Pload@pBuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_RxPacket@rxbuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_Write_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> tx_addr(BANK0[5]), pad_aux_dat(BANK0[2]), rx_addr_0(BANK0[5]), RX_ADDRESS_P5(BANK0[5]), 
		 -> RX_ADDRESS_P4(BANK0[5]), RX_ADDRESS_P3(BANK0[5]), RX_ADDRESS_P2(BANK0[5]), RX_ADDRESS_P1(BANK0[5]), 
		 -> RX_ADDRESS_P0(BANK0[5]), NRF_Check@tuf(BANK0[5]), 

    NRF_Read_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> WirelessPad@rxbuf(BANK0[2]), NRF_Check@buf(BANK0[5]), 


Critical Paths under _main in COMMON

    _WirelessPad->_NRF_RxPacket
    _NRF_Tx_Set->_NRF_Write_Buf
    _NRF_Tx_Send->_NRF_Tx_CheckACK
    _NRF_Tx_Send->_NRF_Write_Buf
    _NRF_Tx_CheckACK->_NRF_Write_Reg
    _NRF_Rx_Set_P0->_NRF_Write_Buf
    _NRF_Rx_Set->_NRF_Write_Reg
    _NRF_Rx_Receive->_NRF_Write_Reg
    _NRF_RxPacket->_NRF_Read_RX_Pload
    _NRF_Read_RX_Pload->_NRF_Read_Buf
    _NRF_Get_Status->_NRF_Read_Reg
    _NRF_Read_Reg->_NRF_SPI_RW
    _NRF_Flush_RX->_NRF_Write_Reg
    _NRF_Clear_IRQ->_NRF_Write_Reg
    _NRF_Write_Reg->_NRF_SPI_RW
    _NRF_Check->_NRF_Read_Buf
    _NRF_Write_Buf->_NRF_SPI_RW
    _NRF_Read_Buf->_NRF_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WirelessPad
    _WirelessPad->_NRF_Check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35944
                           _ADC_Init
                          _BEEP_Init
                           _Key_Init
                           _LED_Init
                          _PORT_Init
                        _WirelessPad
 ---------------------------------------------------------------------------------
 (1) _WirelessPad                                          7     7      0   35944
                                             11 BANK0      7     7      0
                           _ADC_Read
                               _LEDx
                          _NRF_Check
                      _NRF_Clear_IRQ
                             _NRF_On
                      _NRF_Port_Init
                       _NRF_RxPacket
                     _NRF_Rx_Receive
                         _NRF_Rx_Set
                      _NRF_Rx_Set_P0
                       _NRF_SPI_Init
                        _NRF_Tx_Send
                         _NRF_Tx_Set
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _NRF_Tx_Set                                           4     3      1    5573
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Tx_Send                                          4     3      1    5686
                                              7 COMMON     4     3      1
                    _NRF_Tx_CheckACK
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Tx_CheckACK                                      2     2      0    3015
                                              5 COMMON     2     2      0
                       _NRF_Read_Reg
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_SPI_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set_P0                                        4     3      1    5551
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set                                           3     2      1    3000
                                              5 COMMON     3     2      1
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Receive                                       1     1      0    2880
                                              5 COMMON     1     1      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_RxPacket                                         3     3      0    6632
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                       _NRF_Flush_RX
                     _NRF_Get_Status
                  _NRF_Read_RX_Pload
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Read_RX_Pload                                    5     5      0     702
                                              8 COMMON     5     5      0
            _NRF_Get_Current_Pipenum
                       _NRF_Read_Buf
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Get_Current_Pipenum                              0     0      0      67
                     _NRF_Get_Status
 ---------------------------------------------------------------------------------
 (5) _NRF_Get_Status                                       0     0      0      67
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Reg                                         3     3      0      67
                                              1 COMMON     3     3      0
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _NRF_Flush_RX                                         0     0      0    2880
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Clear_IRQ                                        7     7      0    2956
                                              5 COMMON     4     4      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Reg                                        4     3      1    2880
                                              1 COMMON     4     3      1
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _NRF_Check                                           13    13      0    3170
                                              8 COMMON     2     2      0
                                              0 BANK0     11    11      0
                       _NRF_Read_Buf
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Buf                                        6     4      2    2518
                                              1 COMMON     6     4      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Buf                                         7     5      2     445
                                              1 COMMON     7     5      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_SPI_RW                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LEDx                                                 2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      48
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BEEP_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _BEEP_Init
   _Key_Init
   _LED_Init
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _WirelessPad
     _ADC_Read
     _LEDx
     _NRF_Check
       _NRF_Read_Buf
         _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_Clear_IRQ
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_On
     _NRF_Port_Init
     _NRF_RxPacket
       _NRF_Flush_RX
         _NRF_Write_Reg
           _NRF_SPI_RW
       _NRF_Get_Status
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Read_RX_Pload
         _NRF_Get_Current_Pipenum
           _NRF_Get_Status
             _NRF_Read_Reg
               _NRF_SPI_RW
         _NRF_Read_Buf
           _NRF_SPI_RW
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Receive
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set_P0
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_SPI_Init
     _NRF_Tx_Send
       _NRF_Tx_CheckACK
         _NRF_Read_Reg
           _NRF_SPI_RW
         _NRF_Write_Reg
           _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_Tx_Set
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      75       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      4E       6       97.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0      19       8       78.1%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      75       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 15 10:12:10 2019

      __size_of_NRF_Read_RX_Pload 0017                       __CFG_CP$OFF 0000                                l93 0317  
              __size_of_BEEP_Init 0005                    NRF_Check@F2720 0064                    NRF_Check@F2718 0020  
                             l113 0228                               l107 01F2                               l401 01BD  
                             l430 02D9                               l452 00BA                               l446 009C  
                             l439 0048                               l449 00B1                               _RA0 0060  
                             _RA2 0062                               _RA4 0064                               _RA5 0065  
                             _RC3 0073                               u400 00E7                               u410 00F2  
                    __CFG_CPD$OFF 0000                               _ISR 0004                               u707 00BF  
                             u717 00D7                               u727 0236                               u737 0240  
                             u657 003F                               u667 004E                               u677 0059  
                             u687 0096                               u697 00AD                      __CFG_BORV$LO 0000  
                             wreg 0009                        _TX_ADDRESS 0025                      __CFG_LVP$OFF 0000  
               NRF_Rx_Set_P0@addr 007A                              ?_ISR 0070                              l1600 02E7  
                            l1524 02A3                              l1516 0299                              l1518 029F  
                            l1630 02C5                              l1710 005F                              l1562 011E  
                            l1554 010A                              l1660 022C                              l1478 01DE  
                            l1742 009F                              l1726 007E                              l1718 006D  
                            l1496 0216                              l1568 0124                              l1584 025D  
                            l1680 019A                              l1752 00B4                              l1586 025E  
                            l1596 02E5                              l1764 00D1                              l1766 00D3  
                            l1782 02D7                              l1778 02D3                              _ADON 04E8  
                            _LATA 010C                              _LATC 010E                              _LEDx 022B  
                    __CFG_WRT$OFF 0000                  WirelessPad@F2734 0069                              _main 02CA  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                  __end_of_ADC_Init 034C                  __end_of_ADC_Read 01D9  
                            start 0011                     __CFG_IESO$OFF 0000                  NRF_Write_Buf@len 0072  
                NRF_Write_Buf@reg 0075                  NRF_Write_Reg@reg 0073                             ??_ISR 0070  
                WirelessPad@rxbuf 005F                             ?_LEDx 0070                  __end_of_LED_Init 0368  
                     ?_NRF_SPI_RW 0070                      _tx_pad_chair 0378                             ?_main 0070  
              NRF_Tx_CheckACK@sta 0076                     __CFG_WDTE$OFF 0000                             _IOCIE 005B  
                           _IOCIF 0058                      _tx_pad_potty 0374                             i1l423 000F  
                           _FVREN 08BF                  ?_NRF_Tx_CheckACK 0070                             _PORTA 000C  
                           _PORTC 000E                             _TRISA 008C                             _TRISC 008E  
              __size_of_NRF_Check 0049                       ?_NRF_Rx_Set 0075           _NRF_Get_Current_Pipenum 035C  
                     ?_NRF_Tx_Set 0077                       ?_PORTA_Init 0070                    __CFG_FCMEN$OFF 0000  
                     ?_PORTC_Init 0070           __size_of_NRF_Get_Status 0003             NRF_Read_RX_Pload@pBuf 007B  
              __size_of_PORT_Init 0003             NRF_Read_RX_Pload@pipe 007C                    __CFG_BOREN$OFF 0000  
               __end_of_BEEP_Init 035C                             status 0003                             wtemp0 007E  
               NRF_Write_Buf@pBuf 0071                      WirelessPad@i 0061                      __end_of_LEDx 0246  
                  __CFG_MCLRE$OFF 0000                   __initialization 0012                      __end_of_main 02DA  
                __end_of_Key_Init 0357                            ??_LEDx 0070                            ??_main 007E  
                   _RX_ADDRESS_P0 004D                     _RX_ADDRESS_P1 0048                     _RX_ADDRESS_P2 0043  
                   _RX_ADDRESS_P3 003E                     _RX_ADDRESS_P4 0039                     _RX_ADDRESS_P5 0034  
                  __CFG_PLLEN$OFF 0000             __end_of_NRF_Clear_IRQ 02EA                            _ADCON0 009D  
                          _ADCON1 009E                            _ADRESH 009C                            _ADRESL 009B  
                          _ANSELA 018C                            _ANSELC 018E                            _IOCAF4 1C9C  
                          _FVRCON 0117                            _FVRRDY 08BE                            _OSCCON 0099  
                          _NRF_On 037E                            _SSP1IF 008B                            _TRISA0 0460  
                          _TRISA2 0462                            _TRISC0 0470                            _TRISA4 0464  
                          _TRISC1 0471                            _TRISC2 0472                            _TRISC3 0473  
             __size_of_NRF_SPI_RW 000C                    __CFG_PWRTE$OFF 0000                      ?_NRF_Tx_Send 0077  
               __end_of_NRF_Check 0126               __size_of_NRF_Rx_Set 001B               __size_of_NRF_Tx_Set 0039  
             __size_of_PORTA_Init 0009               __size_of_PORTC_Init 0009                 __end_of_PORT_Init 036E  
                          _memcpy 0191         ??_NRF_Get_Current_Pipenum 0074           __size_of_NRF_Rx_Receive 000C  
          NRF_Read_RX_Pload@width 007A                         ?_ADC_Init 0070                         ?_ADC_Read 0070  
           __end_of_NRF_Rx_Set_P0 02B8             __end_of_NRF_Port_Init 0331           __end_of__initialization 0030  
                       ?_LED_Init 0070                    __pcstackCOMMON 0070                      __pidataBANK0 015F  
                    __pidataBANK1 0260             __end_of_NRF_Write_Buf 022B             __end_of_NRF_Write_Reg 0305  
              NRF_Write_Reg@value 0071                        ??_ADC_Init 0070                        ??_ADC_Read 0072  
                   ??_WirelessPad 005D                    _NRF_Get_Status 0368                        __pbssBANK0 0064  
                       ?_Key_Init 0070                           ?_NRF_On 0070                        ??_LED_Init 0070  
                         LEDx@num 0071              NRF_Rx_Set_P0@buf_len 0077                        __pmaintext 02CA  
                   ?_NRF_SPI_Init 0070                        __pintentry 0004                           ?_memcpy 0070  
                    ??_NRF_SPI_RW 0070            __end_of_NRF_Get_Status 036B                      ??_NRF_Rx_Set 0076  
                    ??_NRF_Tx_Set 0078                      ??_PORTA_Init 0070                      ??_PORTC_Init 0070  
                   ?_NRF_Flush_RX 0070                     ?_NRF_Read_Buf 0071                     ?_NRF_Read_Reg 0070  
                         _SSP1BUF 0211                        ??_Key_Init 0070               __end_of_WirelessPad 00DD  
                  NRF_Rx_Set@pipe 0075                     ?_NRF_RxPacket 0070                   __size_of_NRF_On 0002  
                      _pad_aux_ok 037C                        _pad_aux_on 0370                __end_of_NRF_SPI_RW 031D  
                       _BEEP_Init 0357                    ??_NRF_SPI_Init 0070                __end_of_NRF_Rx_Set 0210  
            __size_of_NRF_Tx_Send 0012                __end_of_NRF_Tx_Set 015F                __end_of_PORTA_Init 0343  
              __end_of_PORTC_Init 033A                    NRF_Tx_Set@addr 007A                   __CFG_STVREN$OFF 0000  
                  NRF_Tx_Send@len 0077                   __size_of_memcpy 002A                           __ptext1 0033  
                         __ptext2 0191                           __ptext3 0126                           __ptext4 02B8  
                         __ptext5 0290                           __ptext6 031D                           __ptext7 02A5  
                         __ptext8 01F5                           __ptext9 0305                    _NRF_Rx_Receive 0305  
                    __size_of_ISR 000D                   ?_NRF_Get_Status 0070                    ??_NRF_Flush_RX 0075  
                  ??_NRF_Read_Buf 0073                    ??_NRF_Read_Reg 0071                           _tx_addr 002F  
            end_of_initialization 0030          __size_of_NRF_Tx_CheckACK 0015                    ??_NRF_RxPacket 007D  
                         memcpy@d 0079                           memcpy@n 0072                           memcpy@s 0075  
                         init_ram 034C                           initloop 034D                        ?_BEEP_Init 0070  
                       _NRF_Check 00DD                     NRF_SPI_RW@dat 0070            __end_of_NRF_Rx_Receive 0311  
                 NRF_Read_Buf@len 0072                   NRF_Read_Buf@reg 0076                         _PORT_Init 036B  
                 NRF_Read_Reg@reg 0072                  __CFG_FOSC$INTOSC 0000                       _WirelessPad 0033  
               __size_of_ADC_Init 0009                 __size_of_ADC_Read 001E                    NRF_Write_Buf@i 0076  
                  WirelessPad@adc 0063                        _tx_pad_bed 0372                        _tx_pad_aux 037A  
                      _tx_pad_nci 0376                    __end_of_NRF_On 0380                 __size_of_LED_Init 0004  
          __size_of_NRF_Clear_IRQ 0010                        ?_NRF_Check 0070                   ?_NRF_Rx_Receive 0070  
                  __end_of_memcpy 01BB                        ?_PORT_Init 0070               start_initialization 0012  
                     __end_of_ISR 0011              __end_of_NRF_SPI_Init 0327                NRF_RxPacket@status 0053  
             NRF_Write_Reg@status 0074                          ??_NRF_On 0070                 __size_of_Key_Init 0005  
                     ??_BEEP_Init 0070                 ??_NRF_Tx_CheckACK 0075              __end_of_NRF_Flush_RX 0364  
            __end_of_NRF_Read_Buf 01F5              __end_of_NRF_Read_Reg 02F8          ?_NRF_Get_Current_Pipenum 0070  
                     __pdataBANK0 0020                       __pdataBANK1 00A0            __size_of_NRF_Rx_Set_P0 0013  
                        ??_memcpy 0074              __end_of_NRF_RxPacket 0260            __size_of_NRF_Port_Init 000A  
                   NRF_Read_Buf@i 0077                         ___latbits 0000                     __pcstackBANK0 0052  
               NRF_Clear_IRQ@temp 0078                     _NRF_Clear_IRQ 02DA            __size_of_NRF_Write_Buf 001B  
          __size_of_NRF_Write_Reg 000D               __end_of_pad_aux_off 0370                  NRF_Tx_Send@txbuf 007A  
                     ??_NRF_Check 0078                  ??_NRF_Get_Status 0074                       ??_PORT_Init 0070  
                   NRF_Rx_Set@ack 0077                        NRF_Check@i 005C                          _ADC_Init 0343  
                        _ADC_Read 01BB                    ?_NRF_Clear_IRQ 0070                     NRF_Tx_Set@ack 0077  
                   _NRF_Rx_Set_P0 02A5                     _NRF_Port_Init 0327                          _LED_Init 0364  
                        _PAD_MODE 006B                     ??_NRF_Tx_Send 0078   __end_of_NRF_Get_Current_Pipenum 0360  
                        _SSP1CON1 0215                          _SSP1STAT 0214                     _NRF_Write_Buf 0210  
                   _NRF_Write_Reg 02F8                         _rx_addr_0 002A                         _rx_addr_1 00B4  
                       _rx_addr_2 00AF                         _rx_addr_3 00AA                         _rx_addr_4 00A5  
                       _rx_addr_5 00A0                        _ADCON0bits 009D             __size_of_NRF_SPI_Init 000A  
                    NRF_Check@buf 0057                      NRF_Check@tuf 0052                      ?_WirelessPad 0070  
                  ?_NRF_Rx_Set_P0 0077                    ?_NRF_Port_Init 0070                       _pad_aux_dat 006C  
                     _pad_aux_off 036E                          _Key_Init 0352             __size_of_NRF_Flush_RX 0004  
           __size_of_NRF_Read_Buf 001C             __size_of_NRF_Read_Reg 000E                 NRF_RxPacket@rxbuf 0052  
                ??_NRF_Rx_Receive 0075                         memcpy@tmp 0077             __size_of_NRF_RxPacket 001A  
                    _NRF_SPI_Init 031D                    ?_NRF_Write_Buf 0071                    ?_NRF_Write_Reg 0071  
                   ADC_Read@value 0074                 _NRF_Read_RX_Pload 0279               __end_of_NRF_Tx_Send 02CA  
              ?_NRF_Read_RX_Pload 0070                   ??_NRF_Clear_IRQ 0075                __end_of_pad_aux_ok 037E  
              __end_of_pad_aux_on 0372               ??_NRF_Read_RX_Pload 0078                      _NRF_Flush_RX 0360  
                        __ptext10 0246                          __ptext11 0279                          __ptext20 00DD  
                        __ptext12 035C                          __ptext21 0210                          __ptext13 0368  
                        __ptext30 0352                          __ptext22 01D9                          __ptext14 02EA  
                        __ptext31 0357                          __ptext23 0311                          __ptext15 0360  
                        __ptext32 0343                          __ptext24 022B                          __ptext16 0327  
                        __ptext25 01BB                          __ptext17 037E                          __ptext26 036B  
                        __ptext18 02DA                          __ptext27 0331                          __ptext19 02F8  
                        __ptext28 033A                          __ptext29 0364                      _NRF_Read_Buf 01D9  
                    _NRF_Read_Reg 02EA                   _NRF_Tx_CheckACK 0290                     __size_of_LEDx 001B  
            __end_of_tx_pad_chair 037A                      _NRF_RxPacket 0246                     __size_of_main 0010  
            __end_of_tx_pad_potty 0376         __end_of_NRF_Read_RX_Pload 0290                          int$flags 007E  
                    _SSP1STATbits 0214                          memcpy@d1 0078                          memcpy@s1 0070  
                 ??_NRF_Rx_Set_P0 0078  __size_of_NRF_Get_Current_Pipenum 0004                   ??_NRF_Port_Init 0070  
                        intlevel1 0000                 __CFG_CLKOUTEN$OFF 0000                       _NRF_Tx_Send 02B8  
                 ??_NRF_Write_Buf 0073                   ??_NRF_Write_Reg 0072                        _NRF_SPI_RW 0311  
                   __pstringtext1 036E                     __pstringtext2 0370                     __pstringtext3 0372  
                   __pstringtext4 0374                     __pstringtext5 0376                     __pstringtext6 0378  
                   __pstringtext7 037A                     __pstringtext8 037C                NRF_Read_Reg@status 0073  
         __end_of_NRF_Tx_CheckACK 02A5                __end_of_tx_pad_bed 0374                __end_of_tx_pad_aux 037C  
              __end_of_tx_pad_nci 0378                        _NRF_Rx_Set 01F5                        _NRF_Tx_Set 0126  
                      _PORTA_Init 033A                        _PORTC_Init 0331                  NRF_Read_Buf@pBuf 0071  
            __size_of_WirelessPad 00AA  
