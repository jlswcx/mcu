

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Sep 09 08:21:37 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F1823
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.10
    50                           ; Generated 31/07/2019 GMT
    51                           ; 
    52                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F1823 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000E                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0016                     	;# 
   102  0017                     	;# 
   103  0018                     	;# 
   104  0019                     	;# 
   105  001A                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  008C                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  010C                     	;# 
   126  010E                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  011D                     	;# 
   140  018C                     	;# 
   141  018E                     	;# 
   142  0191                     	;# 
   143  0191                     	;# 
   144  0192                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0194                     	;# 
   149  0195                     	;# 
   150  0196                     	;# 
   151  0199                     	;# 
   152  019A                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019C                     	;# 
   158  019C                     	;# 
   159  019D                     	;# 
   160  019E                     	;# 
   161  019F                     	;# 
   162  020C                     	;# 
   163  020E                     	;# 
   164  0211                     	;# 
   165  0211                     	;# 
   166  0212                     	;# 
   167  0212                     	;# 
   168  0213                     	;# 
   169  0213                     	;# 
   170  0214                     	;# 
   171  0214                     	;# 
   172  0215                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0216                     	;# 
   176  0216                     	;# 
   177  0217                     	;# 
   178  0217                     	;# 
   179  0291                     	;# 
   180  0291                     	;# 
   181  0292                     	;# 
   182  0293                     	;# 
   183  0294                     	;# 
   184  0295                     	;# 
   185  0295                     	;# 
   186  0296                     	;# 
   187  0391                     	;# 
   188  0392                     	;# 
   189  0393                     	;# 
   190  039A                     	;# 
   191  039C                     	;# 
   192  039D                     	;# 
   193  039E                     	;# 
   194  039F                     	;# 
   195  0FE4                     	;# 
   196  0FE5                     	;# 
   197  0FE6                     	;# 
   198  0FE7                     	;# 
   199  0FE8                     	;# 
   200  0FE9                     	;# 
   201  0FEA                     	;# 
   202  0FEB                     	;# 
   203  0FED                     	;# 
   204  0FEE                     	;# 
   205  0FEF                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000E                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  008C                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  010C                     	;# 
   249  010E                     	;# 
   250  0111                     	;# 
   251  0112                     	;# 
   252  0113                     	;# 
   253  0114                     	;# 
   254  0115                     	;# 
   255  0116                     	;# 
   256  0117                     	;# 
   257  0118                     	;# 
   258  0119                     	;# 
   259  011A                     	;# 
   260  011B                     	;# 
   261  011D                     	;# 
   262  011D                     	;# 
   263  018C                     	;# 
   264  018E                     	;# 
   265  0191                     	;# 
   266  0191                     	;# 
   267  0192                     	;# 
   268  0193                     	;# 
   269  0193                     	;# 
   270  0193                     	;# 
   271  0194                     	;# 
   272  0195                     	;# 
   273  0196                     	;# 
   274  0199                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019C                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019E                     	;# 
   284  019F                     	;# 
   285  020C                     	;# 
   286  020E                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0214                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0216                     	;# 
   299  0216                     	;# 
   300  0217                     	;# 
   301  0217                     	;# 
   302  0291                     	;# 
   303  0291                     	;# 
   304  0292                     	;# 
   305  0293                     	;# 
   306  0294                     	;# 
   307  0295                     	;# 
   308  0295                     	;# 
   309  0296                     	;# 
   310  0391                     	;# 
   311  0392                     	;# 
   312  0393                     	;# 
   313  039A                     	;# 
   314  039C                     	;# 
   315  039D                     	;# 
   316  039E                     	;# 
   317  039F                     	;# 
   318  0FE4                     	;# 
   319  0FE5                     	;# 
   320  0FE6                     	;# 
   321  0FE7                     	;# 
   322  0FE8                     	;# 
   323  0FE9                     	;# 
   324  0FEA                     	;# 
   325  0FEB                     	;# 
   326  0FED                     	;# 
   327  0FEE                     	;# 
   328  0FEF                     	;# 
   329  0000                     	;# 
   330  0001                     	;# 
   331  0002                     	;# 
   332  0003                     	;# 
   333  0004                     	;# 
   334  0005                     	;# 
   335  0006                     	;# 
   336  0007                     	;# 
   337  0008                     	;# 
   338  0009                     	;# 
   339  000A                     	;# 
   340  000B                     	;# 
   341  000C                     	;# 
   342  000E                     	;# 
   343  0011                     	;# 
   344  0012                     	;# 
   345  0015                     	;# 
   346  0016                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001C                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  008C                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009B                     	;# 
   368  009C                     	;# 
   369  009D                     	;# 
   370  009E                     	;# 
   371  010C                     	;# 
   372  010E                     	;# 
   373  0111                     	;# 
   374  0112                     	;# 
   375  0113                     	;# 
   376  0114                     	;# 
   377  0115                     	;# 
   378  0116                     	;# 
   379  0117                     	;# 
   380  0118                     	;# 
   381  0119                     	;# 
   382  011A                     	;# 
   383  011B                     	;# 
   384  011D                     	;# 
   385  011D                     	;# 
   386  018C                     	;# 
   387  018E                     	;# 
   388  0191                     	;# 
   389  0191                     	;# 
   390  0192                     	;# 
   391  0193                     	;# 
   392  0193                     	;# 
   393  0193                     	;# 
   394  0194                     	;# 
   395  0195                     	;# 
   396  0196                     	;# 
   397  0199                     	;# 
   398  019A                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019B                     	;# 
   403  019C                     	;# 
   404  019C                     	;# 
   405  019D                     	;# 
   406  019E                     	;# 
   407  019F                     	;# 
   408  020C                     	;# 
   409  020E                     	;# 
   410  0211                     	;# 
   411  0211                     	;# 
   412  0212                     	;# 
   413  0212                     	;# 
   414  0213                     	;# 
   415  0213                     	;# 
   416  0214                     	;# 
   417  0214                     	;# 
   418  0215                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0216                     	;# 
   422  0216                     	;# 
   423  0217                     	;# 
   424  0217                     	;# 
   425  0291                     	;# 
   426  0291                     	;# 
   427  0292                     	;# 
   428  0293                     	;# 
   429  0294                     	;# 
   430  0295                     	;# 
   431  0295                     	;# 
   432  0296                     	;# 
   433  0391                     	;# 
   434  0392                     	;# 
   435  0393                     	;# 
   436  039A                     	;# 
   437  039C                     	;# 
   438  039D                     	;# 
   439  039E                     	;# 
   440  039F                     	;# 
   441  0FE4                     	;# 
   442  0FE5                     	;# 
   443  0FE6                     	;# 
   444  0FE7                     	;# 
   445  0FE8                     	;# 
   446  0FE9                     	;# 
   447  0FEA                     	;# 
   448  0FEB                     	;# 
   449  0FED                     	;# 
   450  0FEE                     	;# 
   451  0FEF                     	;# 
   452  0000                     	;# 
   453  0001                     	;# 
   454  0002                     	;# 
   455  0003                     	;# 
   456  0004                     	;# 
   457  0005                     	;# 
   458  0006                     	;# 
   459  0007                     	;# 
   460  0008                     	;# 
   461  0009                     	;# 
   462  000A                     	;# 
   463  000B                     	;# 
   464  000C                     	;# 
   465  000E                     	;# 
   466  0011                     	;# 
   467  0012                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  008C                     	;# 
   480  008E                     	;# 
   481  0091                     	;# 
   482  0092                     	;# 
   483  0095                     	;# 
   484  0096                     	;# 
   485  0097                     	;# 
   486  0098                     	;# 
   487  0099                     	;# 
   488  009A                     	;# 
   489  009B                     	;# 
   490  009B                     	;# 
   491  009C                     	;# 
   492  009D                     	;# 
   493  009E                     	;# 
   494  010C                     	;# 
   495  010E                     	;# 
   496  0111                     	;# 
   497  0112                     	;# 
   498  0113                     	;# 
   499  0114                     	;# 
   500  0115                     	;# 
   501  0116                     	;# 
   502  0117                     	;# 
   503  0118                     	;# 
   504  0119                     	;# 
   505  011A                     	;# 
   506  011B                     	;# 
   507  011D                     	;# 
   508  011D                     	;# 
   509  018C                     	;# 
   510  018E                     	;# 
   511  0191                     	;# 
   512  0191                     	;# 
   513  0192                     	;# 
   514  0193                     	;# 
   515  0193                     	;# 
   516  0193                     	;# 
   517  0194                     	;# 
   518  0195                     	;# 
   519  0196                     	;# 
   520  0199                     	;# 
   521  019A                     	;# 
   522  019B                     	;# 
   523  019B                     	;# 
   524  019B                     	;# 
   525  019B                     	;# 
   526  019C                     	;# 
   527  019C                     	;# 
   528  019D                     	;# 
   529  019E                     	;# 
   530  019F                     	;# 
   531  020C                     	;# 
   532  020E                     	;# 
   533  0211                     	;# 
   534  0211                     	;# 
   535  0212                     	;# 
   536  0212                     	;# 
   537  0213                     	;# 
   538  0213                     	;# 
   539  0214                     	;# 
   540  0214                     	;# 
   541  0215                     	;# 
   542  0215                     	;# 
   543  0215                     	;# 
   544  0216                     	;# 
   545  0216                     	;# 
   546  0217                     	;# 
   547  0217                     	;# 
   548  0291                     	;# 
   549  0291                     	;# 
   550  0292                     	;# 
   551  0293                     	;# 
   552  0294                     	;# 
   553  0295                     	;# 
   554  0295                     	;# 
   555  0296                     	;# 
   556  0391                     	;# 
   557  0392                     	;# 
   558  0393                     	;# 
   559  039A                     	;# 
   560  039C                     	;# 
   561  039D                     	;# 
   562  039E                     	;# 
   563  039F                     	;# 
   564  0FE4                     	;# 
   565  0FE5                     	;# 
   566  0FE6                     	;# 
   567  0FE7                     	;# 
   568  0FE8                     	;# 
   569  0FE9                     	;# 
   570  0FEA                     	;# 
   571  0FEB                     	;# 
   572  0FED                     	;# 
   573  0FEE                     	;# 
   574  0FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000E                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001B                     	;# 
   599  001C                     	;# 
   600  001E                     	;# 
   601  001F                     	;# 
   602  008C                     	;# 
   603  008E                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0095                     	;# 
   607  0096                     	;# 
   608  0097                     	;# 
   609  0098                     	;# 
   610  0099                     	;# 
   611  009A                     	;# 
   612  009B                     	;# 
   613  009B                     	;# 
   614  009C                     	;# 
   615  009D                     	;# 
   616  009E                     	;# 
   617  010C                     	;# 
   618  010E                     	;# 
   619  0111                     	;# 
   620  0112                     	;# 
   621  0113                     	;# 
   622  0114                     	;# 
   623  0115                     	;# 
   624  0116                     	;# 
   625  0117                     	;# 
   626  0118                     	;# 
   627  0119                     	;# 
   628  011A                     	;# 
   629  011B                     	;# 
   630  011D                     	;# 
   631  011D                     	;# 
   632  018C                     	;# 
   633  018E                     	;# 
   634  0191                     	;# 
   635  0191                     	;# 
   636  0192                     	;# 
   637  0193                     	;# 
   638  0193                     	;# 
   639  0193                     	;# 
   640  0194                     	;# 
   641  0195                     	;# 
   642  0196                     	;# 
   643  0199                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019C                     	;# 
   650  019C                     	;# 
   651  019D                     	;# 
   652  019E                     	;# 
   653  019F                     	;# 
   654  020C                     	;# 
   655  020E                     	;# 
   656  0211                     	;# 
   657  0211                     	;# 
   658  0212                     	;# 
   659  0212                     	;# 
   660  0213                     	;# 
   661  0213                     	;# 
   662  0214                     	;# 
   663  0214                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0216                     	;# 
   668  0216                     	;# 
   669  0217                     	;# 
   670  0217                     	;# 
   671  0291                     	;# 
   672  0291                     	;# 
   673  0292                     	;# 
   674  0293                     	;# 
   675  0294                     	;# 
   676  0295                     	;# 
   677  0295                     	;# 
   678  0296                     	;# 
   679  0391                     	;# 
   680  0392                     	;# 
   681  0393                     	;# 
   682  039A                     	;# 
   683  039C                     	;# 
   684  039D                     	;# 
   685  039E                     	;# 
   686  039F                     	;# 
   687  0FE4                     	;# 
   688  0FE5                     	;# 
   689  0FE6                     	;# 
   690  0FE7                     	;# 
   691  0FE8                     	;# 
   692  0FE9                     	;# 
   693  0FEA                     	;# 
   694  0FEB                     	;# 
   695  0FED                     	;# 
   696  0FEE                     	;# 
   697  0FEF                     	;# 
   698  0000                     	;# 
   699  0001                     	;# 
   700  0002                     	;# 
   701  0003                     	;# 
   702  0004                     	;# 
   703  0005                     	;# 
   704  0006                     	;# 
   705  0007                     	;# 
   706  0008                     	;# 
   707  0009                     	;# 
   708  000A                     	;# 
   709  000B                     	;# 
   710  000C                     	;# 
   711  000E                     	;# 
   712  0011                     	;# 
   713  0012                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  001E                     	;# 
   724  001F                     	;# 
   725  008C                     	;# 
   726  008E                     	;# 
   727  0091                     	;# 
   728  0092                     	;# 
   729  0095                     	;# 
   730  0096                     	;# 
   731  0097                     	;# 
   732  0098                     	;# 
   733  0099                     	;# 
   734  009A                     	;# 
   735  009B                     	;# 
   736  009B                     	;# 
   737  009C                     	;# 
   738  009D                     	;# 
   739  009E                     	;# 
   740  010C                     	;# 
   741  010E                     	;# 
   742  0111                     	;# 
   743  0112                     	;# 
   744  0113                     	;# 
   745  0114                     	;# 
   746  0115                     	;# 
   747  0116                     	;# 
   748  0117                     	;# 
   749  0118                     	;# 
   750  0119                     	;# 
   751  011A                     	;# 
   752  011B                     	;# 
   753  011D                     	;# 
   754  011D                     	;# 
   755  018C                     	;# 
   756  018E                     	;# 
   757  0191                     	;# 
   758  0191                     	;# 
   759  0192                     	;# 
   760  0193                     	;# 
   761  0193                     	;# 
   762  0193                     	;# 
   763  0194                     	;# 
   764  0195                     	;# 
   765  0196                     	;# 
   766  0199                     	;# 
   767  019A                     	;# 
   768  019B                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  019C                     	;# 
   774  019D                     	;# 
   775  019E                     	;# 
   776  019F                     	;# 
   777  020C                     	;# 
   778  020E                     	;# 
   779  0211                     	;# 
   780  0211                     	;# 
   781  0212                     	;# 
   782  0212                     	;# 
   783  0213                     	;# 
   784  0213                     	;# 
   785  0214                     	;# 
   786  0214                     	;# 
   787  0215                     	;# 
   788  0215                     	;# 
   789  0215                     	;# 
   790  0216                     	;# 
   791  0216                     	;# 
   792  0217                     	;# 
   793  0217                     	;# 
   794  0291                     	;# 
   795  0291                     	;# 
   796  0292                     	;# 
   797  0293                     	;# 
   798  0294                     	;# 
   799  0295                     	;# 
   800  0295                     	;# 
   801  0296                     	;# 
   802  0391                     	;# 
   803  0392                     	;# 
   804  0393                     	;# 
   805  039A                     	;# 
   806  039C                     	;# 
   807  039D                     	;# 
   808  039E                     	;# 
   809  039F                     	;# 
   810  0FE4                     	;# 
   811  0FE5                     	;# 
   812  0FE6                     	;# 
   813  0FE7                     	;# 
   814  0FE8                     	;# 
   815  0FE9                     	;# 
   816  0FEA                     	;# 
   817  0FEB                     	;# 
   818  0FED                     	;# 
   819  0FEE                     	;# 
   820  0FEF                     	;# 
   821                           
   822                           	psect	idataBANK0
   823  0109                     __pidataBANK0:	
   824                           
   825                           ;initializer for NRF_Check@F2718
   826  0109  34E1               	retlw	225
   827  010A  34E2               	retlw	226
   828  010B  34E3               	retlw	227
   829  010C  34E4               	retlw	228
   830  010D  3405               	retlw	5
   831                           
   832                           ;initializer for _TX_ADDRESS
   833  010E  340F               	retlw	15
   834  010F  340E               	retlw	14
   835  0110  340D               	retlw	13
   836  0111  340C               	retlw	12
   837  0112  340B               	retlw	11
   838                           
   839                           ;initializer for _RX_ADDRESS_P5
   840  0113  340E               	retlw	14
   841  0114  3410               	retlw	16
   842  0115  3409               	retlw	9
   843  0116  3408               	retlw	8
   844  0117  3407               	retlw	7
   845                           
   846                           ;initializer for _RX_ADDRESS_P4
   847  0118  340D               	retlw	13
   848  0119  3410               	retlw	16
   849  011A  3409               	retlw	9
   850  011B  3408               	retlw	8
   851  011C  3407               	retlw	7
   852                           
   853                           ;initializer for _RX_ADDRESS_P3
   854  011D  340C               	retlw	12
   855  011E  3410               	retlw	16
   856  011F  3409               	retlw	9
   857  0120  3408               	retlw	8
   858  0121  3407               	retlw	7
   859                           
   860                           ;initializer for _RX_ADDRESS_P2
   861  0122  340B               	retlw	11
   862  0123  3410               	retlw	16
   863  0124  3409               	retlw	9
   864  0125  3408               	retlw	8
   865  0126  3407               	retlw	7
   866                           
   867                           ;initializer for _RX_ADDRESS_P1
   868  0127  340A               	retlw	10
   869  0128  3410               	retlw	16
   870  0129  3409               	retlw	9
   871  012A  3408               	retlw	8
   872  012B  3407               	retlw	7
   873                           
   874                           ;initializer for _RX_ADDRESS_P0
   875  012C  340F               	retlw	15
   876  012D  340E               	retlw	14
   877  012E  340D               	retlw	13
   878  012F  340C               	retlw	12
   879  0130  340B               	retlw	11
   880                           
   881                           ;initializer for _rx_addr_0
   882  0131  340F               	retlw	15
   883  0132  340E               	retlw	14
   884  0133  340D               	retlw	13
   885  0134  340C               	retlw	12
   886  0135  340B               	retlw	11
   887                           
   888                           	psect	stringtext1
   889  02FC                     __pstringtext1:	
   890  02FC                     _pad_aux_off:	
   891  02FC  3403               	retlw	3
   892  02FD  3403               	retlw	3
   893  02FE                     __end_of_pad_aux_off:	
   894                           
   895                           	psect	stringtext2
   896  02FE                     __pstringtext2:	
   897  02FE                     _pad_aux_on:	
   898  02FE  3402               	retlw	2
   899  02FF  3402               	retlw	2
   900  0300                     __end_of_pad_aux_on:	
   901                           
   902                           	psect	stringtext3
   903  0300                     __pstringtext3:	
   904  0300                     _tx_pad_bed:	
   905  0300  3498               	retlw	152
   906  0301  3458               	retlw	88
   907  0302                     __end_of_tx_pad_bed:	
   908                           
   909                           	psect	stringtext4
   910  0302                     __pstringtext4:	
   911  0302                     _tx_pad_potty:	
   912  0302  3488               	retlw	136
   913  0303  3468               	retlw	104
   914  0304                     __end_of_tx_pad_potty:	
   915                           
   916                           	psect	stringtext5
   917  0304                     __pstringtext5:	
   918  0304                     _tx_pad_nci:	
   919  0304  3486               	retlw	134
   920  0305  3466               	retlw	102
   921  0306                     __end_of_tx_pad_nci:	
   922                           
   923                           	psect	stringtext6
   924  0306                     __pstringtext6:	
   925  0306                     _tx_pad_chair:	
   926  0306  3468               	retlw	104
   927  0307  3486               	retlw	134
   928  0308                     __end_of_tx_pad_chair:	
   929                           
   930                           	psect	stringtext7
   931  0308                     __pstringtext7:	
   932  0308                     _tx_pad_aux:	
   933  0308  3466               	retlw	102
   934  0309  3488               	retlw	136
   935  030A                     __end_of_tx_pad_aux:	
   936                           
   937                           	psect	stringtext8
   938  030A                     __pstringtext8:	
   939  030A                     _pad_aux_ok:	
   940  030A  3401               	retlw	1
   941  030B  3401               	retlw	1
   942  030C                     __end_of_pad_aux_ok:	
   943  000E                     _PORTC	set	14
   944  000C                     _PORTA	set	12
   945  0072                     _RC2	set	114
   946  0070                     _RC0	set	112
   947  0071                     _RC1	set	113
   948  008B                     _SSP1IF	set	139
   949  0062                     _RA2	set	98
   950  0060                     _RA0	set	96
   951  0065                     _RA5	set	101
   952  0064                     _RA4	set	100
   953  0075                     _RC5	set	117
   954  0074                     _RC4	set	116
   955  008E                     _TRISC	set	142
   956  008C                     _TRISA	set	140
   957  0099                     _OSCCON	set	153
   958  0460                     _TRISA0	set	1120
   959  0462                     _TRISA2	set	1122
   960  0470                     _TRISC0	set	1136
   961  0472                     _TRISC2	set	1138
   962  0471                     _TRISC1	set	1137
   963  0465                     _TRISA5	set	1125
   964  0464                     _TRISA4	set	1124
   965  010E                     _LATC	set	270
   966  010C                     _LATA	set	268
   967  0191                     _EEADR	set	401
   968  018E                     _ANSELC	set	398
   969  018C                     _ANSELA	set	396
   970  0196                     _EECON2	set	406
   971  0193                     _EEDATA	set	403
   972  0CA8                     _RD	set	3240
   973  0CAA                     _WREN	set	3242
   974  0CAF                     _EEPGD	set	3247
   975  0CA9                     _WR	set	3241
   976  0215                     _SSP1CON1	set	533
   977  0211                     _SSP1BUF	set	529
   978  0214                     _SSP1STATbits	set	532
   979  0214                     _SSP1STAT	set	532
   980                           
   981                           ; #config settings
   982  0000                     
   983                           	psect	cinit
   984  0009                     start_initialization:	
   985  0009                     __initialization:	
   986                           
   987                           ; Initialize objects allocated to BANK0
   988  0009  3009               	movlw	low __pidataBANK0
   989  000A  0084               	movwf	4
   990  000B  3081               	movlw	(high __pidataBANK0)| (0+128)
   991  000C  0085               	movwf	5
   992  000D  3020               	movlw	low __pdataBANK0
   993  000E  0086               	movwf	6
   994  000F  3000               	movlw	high __pdataBANK0
   995  0010  0087               	movwf	7
   996  0011  302D               	movlw	45
   997  0012  3182  22DF  3180   	fcall	init_ram
   998                           
   999                           ; Clear objects allocated to BANK0
  1000  0015  01DC               	clrf	__pbssBANK0& (0+127)
  1001  0016  01DD               	clrf	(__pbssBANK0+1)& (0+127)
  1002  0017  01DE               	clrf	(__pbssBANK0+2)& (0+127)
  1003  0018  01DF               	clrf	(__pbssBANK0+3)& (0+127)
  1004  0019  01E0               	clrf	(__pbssBANK0+4)& (0+127)
  1005  001A  01E1               	clrf	(__pbssBANK0+5)& (0+127)
  1006  001B  01E2               	clrf	(__pbssBANK0+6)& (0+127)
  1007  001C  01E3               	clrf	(__pbssBANK0+7)& (0+127)
  1008  001D  01E4               	clrf	(__pbssBANK0+8)& (0+127)
  1009  001E                     end_of_initialization:	
  1010                           ;End of C runtime variable initialization code
  1011                           
  1012  001E                     __end_of__initialization:	
  1013  001E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1014  001F  0020               	movlb	0
  1015  0020  2A94               	ljmp	_main	;jump to C main() function
  1016                           
  1017                           	psect	bssBANK0
  1018  005C                     __pbssBANK0:	
  1019  005C                     NRF_Check@F2720:	
  1020  005C                     	ds	5
  1021  0061                     WirelessPad@F2712:	
  1022  0061                     	ds	2
  1023  0063                     _pad_aux_dat:	
  1024  0063                     	ds	2
  1025                           
  1026                           	psect	dataBANK0
  1027  0020                     __pdataBANK0:	
  1028  0020                     NRF_Check@F2718:	
  1029  0020                     	ds	5
  1030  0025                     _TX_ADDRESS:	
  1031  0025                     	ds	5
  1032  002A                     _RX_ADDRESS_P5:	
  1033  002A                     	ds	5
  1034  002F                     _RX_ADDRESS_P4:	
  1035  002F                     	ds	5
  1036  0034                     _RX_ADDRESS_P3:	
  1037  0034                     	ds	5
  1038  0039                     _RX_ADDRESS_P2:	
  1039  0039                     	ds	5
  1040  003E                     _RX_ADDRESS_P1:	
  1041  003E                     	ds	5
  1042  0043                     _RX_ADDRESS_P0:	
  1043  0043                     	ds	5
  1044  0048                     _rx_addr_0:	
  1045  0048                     	ds	5
  1046                           
  1047                           	psect	inittext
  1048  02DF                     init_ram:	
  1049  02DF  00FE               	movwf	btemp
  1050  02E0                     initloop:	
  1051  02E0  0012               	moviw fsr0++
  1052  02E1  001E               	movwi fsr1++
  1053  02E2  0BFE               	decfsz	btemp,f
  1054  02E3  2AE0               	goto	initloop
  1055  02E4  3400               	retlw	0
  1056                           
  1057                           	psect	cstackCOMMON
  1058  0070                     __pcstackCOMMON:	
  1059  0070                     ?_PORT_Init:	
  1060  0070                     ??_PORT_Init:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063  0070                     ?_NRF_IRQ_Init:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066  0070                     ??_NRF_IRQ_Init:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069  0070                     ?_WirelessPad:	
  1070                           ; 1 bytes @ 0x0
  1071                           
  1072  0070                     ?_NRF_On:	
  1073                           ; 1 bytes @ 0x0
  1074                           
  1075  0070                     ??_NRF_On:	
  1076                           ; 1 bytes @ 0x0
  1077                           
  1078  0070                     ?_NRF_Port_Init:	
  1079                           ; 1 bytes @ 0x0
  1080                           
  1081  0070                     ??_NRF_Port_Init:	
  1082                           ; 1 bytes @ 0x0
  1083                           
  1084  0070                     ?_NRF_SPI_Init:	
  1085                           ; 1 bytes @ 0x0
  1086                           
  1087  0070                     ??_NRF_SPI_Init:	
  1088                           ; 1 bytes @ 0x0
  1089                           
  1090  0070                     ?_NRF_Check:	
  1091                           ; 1 bytes @ 0x0
  1092                           
  1093  0070                     ?_NRF_Rx_Receive:	
  1094                           ; 1 bytes @ 0x0
  1095                           
  1096  0070                     ?_memcpy:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0070                     ?_NRF_RxPacket:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0070                     ?_NRF_Clear_IRQ:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0070                     ?_NRF_Get_Status:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0070                     ?_NRF_Read_RX_Pload:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0070                     ?_NRF_Flush_RX:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0070                     ?_PORTA_Init:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0070                     ??_PORTA_Init:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0070                     ?_PORTC_Init:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ??_PORTC_Init:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ?_LED_Red:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ??_LED_Red:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0070                     ?_LED_Blue:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0070                     ??_LED_Blue:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_main:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_ISR:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ??_ISR:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_NRF_SPI_RW:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ??_NRF_SPI_RW:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ?_NRF_Read_Reg:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_NRF_Get_Current_Pipenum:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     NRF_SPI_RW@dat:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     memcpy@s1:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x0
  1167  0070                     	ds	1
  1168  0071                     ??_NRF_Read_Reg:	
  1169  0071                     ?_NRF_Write_Reg:	
  1170                           ; 1 bytes @ 0x1
  1171                           
  1172  0071                     ?_NRF_Read_Buf:	
  1173                           ; 1 bytes @ 0x1
  1174                           
  1175  0071                     ?_NRF_Write_Buf:	
  1176                           ; 1 bytes @ 0x1
  1177                           
  1178  0071                     LED_Red@num:	
  1179                           ; 1 bytes @ 0x1
  1180                           
  1181  0071                     LED_Blue@num:	
  1182                           ; 1 bytes @ 0x1
  1183                           
  1184  0071                     NRF_Write_Reg@value:	
  1185                           ; 1 bytes @ 0x1
  1186                           
  1187  0071                     NRF_Read_Buf@pBuf:	
  1188                           ; 1 bytes @ 0x1
  1189                           
  1190  0071                     NRF_Write_Buf@pBuf:	
  1191                           ; 1 bytes @ 0x1
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x1
  1195  0071                     	ds	1
  1196  0072                     ??_NRF_Write_Reg:	
  1197  0072                     NRF_Read_Reg@reg:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200  0072                     NRF_Read_Buf@len:	
  1201                           ; 1 bytes @ 0x2
  1202                           
  1203  0072                     NRF_Write_Buf@len:	
  1204                           ; 1 bytes @ 0x2
  1205                           
  1206  0072                     memcpy@n:	
  1207                           ; 1 bytes @ 0x2
  1208                           
  1209                           
  1210                           ; 2 bytes @ 0x2
  1211  0072                     	ds	1
  1212  0073                     ??_NRF_Read_Buf:	
  1213  0073                     ??_NRF_Write_Buf:	
  1214                           ; 1 bytes @ 0x3
  1215                           
  1216  0073                     NRF_Read_Reg@status:	
  1217                           ; 1 bytes @ 0x3
  1218                           
  1219  0073                     NRF_Write_Reg@reg:	
  1220                           ; 1 bytes @ 0x3
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x3
  1224  0073                     	ds	1
  1225  0074                     ??_memcpy:	
  1226  0074                     ??_NRF_Get_Status:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229  0074                     ??_NRF_Get_Current_Pipenum:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0074                     NRF_Write_Reg@status:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x4
  1237  0074                     	ds	1
  1238  0075                     ?_NRF_Rx_Set:	
  1239  0075                     ??_NRF_Rx_Receive:	
  1240                           ; 1 bytes @ 0x5
  1241                           
  1242  0075                     ??_NRF_Clear_IRQ:	
  1243                           ; 1 bytes @ 0x5
  1244                           
  1245  0075                     ??_NRF_Flush_RX:	
  1246                           ; 1 bytes @ 0x5
  1247                           
  1248  0075                     NRF_Write_Buf@reg:	
  1249                           ; 1 bytes @ 0x5
  1250                           
  1251  0075                     NRF_Rx_Set@pipe:	
  1252                           ; 1 bytes @ 0x5
  1253                           
  1254  0075                     memcpy@s:	
  1255                           ; 1 bytes @ 0x5
  1256                           
  1257                           
  1258                           ; 2 bytes @ 0x5
  1259  0075                     	ds	1
  1260  0076                     ??_NRF_Rx_Set:	
  1261  0076                     NRF_Read_Buf@reg:	
  1262                           ; 1 bytes @ 0x6
  1263                           
  1264  0076                     NRF_Write_Buf@i:	
  1265                           ; 1 bytes @ 0x6
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x6
  1269  0076                     	ds	1
  1270  0077                     ?_NRF_Rx_Set_P0:	
  1271  0077                     NRF_Read_Buf@i:	
  1272                           ; 1 bytes @ 0x7
  1273                           
  1274  0077                     NRF_Rx_Set@ack:	
  1275                           ; 1 bytes @ 0x7
  1276                           
  1277  0077                     NRF_Rx_Set_P0@buf_len:	
  1278                           ; 1 bytes @ 0x7
  1279                           
  1280  0077                     memcpy@tmp:	
  1281                           ; 1 bytes @ 0x7
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x7
  1285  0077                     	ds	1
  1286  0078                     ??_NRF_Check:	
  1287  0078                     ??_NRF_Rx_Set_P0:	
  1288                           ; 1 bytes @ 0x8
  1289                           
  1290  0078                     ??_NRF_Read_RX_Pload:	
  1291                           ; 1 bytes @ 0x8
  1292                           
  1293  0078                     NRF_Clear_IRQ@temp:	
  1294                           ; 1 bytes @ 0x8
  1295                           
  1296  0078                     memcpy@d1:	
  1297                           ; 1 bytes @ 0x8
  1298                           
  1299                           
  1300                           ; 1 bytes @ 0x8
  1301  0078                     	ds	1
  1302  0079                     memcpy@d:	
  1303                           
  1304                           ; 1 bytes @ 0x9
  1305  0079                     	ds	1
  1306  007A                     NRF_Read_RX_Pload@width:	
  1307  007A                     NRF_Rx_Set_P0@addr:	
  1308                           ; 1 bytes @ 0xA
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0xA
  1312  007A                     	ds	1
  1313  007B                     NRF_Read_RX_Pload@pBuf:	
  1314                           
  1315                           ; 1 bytes @ 0xB
  1316  007B                     	ds	1
  1317  007C                     NRF_Read_RX_Pload@pipe:	
  1318                           
  1319                           ; 1 bytes @ 0xC
  1320  007C                     	ds	1
  1321  007D                     ??_NRF_RxPacket:	
  1322                           
  1323                           ; 1 bytes @ 0xD
  1324  007D                     	ds	1
  1325  007E                     ??_main:	
  1326                           
  1327                           	psect	cstackBANK0
  1328  004D                     __pcstackBANK0:	
  1329                           ; 1 bytes @ 0xE
  1330                           
  1331  004D                     NRF_RxPacket@rxbuf:	
  1332  004D                     NRF_Check@tuf:	
  1333                           ; 1 bytes @ 0x0
  1334                           
  1335                           
  1336                           ; 5 bytes @ 0x0
  1337  004D                     	ds	1
  1338  004E                     NRF_RxPacket@status:	
  1339                           
  1340                           ; 1 bytes @ 0x1
  1341  004E                     	ds	4
  1342  0052                     NRF_Check@buf:	
  1343                           
  1344                           ; 5 bytes @ 0x5
  1345  0052                     	ds	5
  1346  0057                     NRF_Check@i:	
  1347                           
  1348                           ; 1 bytes @ 0xA
  1349  0057                     	ds	1
  1350  0058                     ??_WirelessPad:	
  1351                           
  1352                           ; 1 bytes @ 0xB
  1353  0058                     	ds	2
  1354  005A                     WirelessPad@rxbuf:	
  1355                           
  1356                           ; 2 bytes @ 0xD
  1357  005A                     	ds	2
  1358                           
  1359                           	psect	maintext
  1360  0294                     __pmaintext:	
  1361 ;;
  1362 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1363 ;;
  1364 ;; *************** function _main *****************
  1365 ;; Defined at:
  1366 ;;		line 81 in file "main.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : B1F/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1
  1380 ;;      Params:         0       0       0
  1381 ;;      Locals:         0       0       0
  1382 ;;      Temps:          0       0       0
  1383 ;;      Totals:         0       0       0
  1384 ;;Total ram usage:        0 bytes
  1385 ;; Hardware stack levels required when called:    8
  1386 ;; This function calls:
  1387 ;;		_NRF_IRQ_Init
  1388 ;;		_PORT_Init
  1389 ;;		_WirelessPad
  1390 ;; This function is called by:
  1391 ;;		Startup code after reset
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _main
  1397  0294                     _main:	
  1398  0294                     l1732:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1401                           
  1402                           
  1403                           ;main.c: 83:     OSCCON = 0X28;
  1404  0294  3028               	movlw	40
  1405  0295  0021               	movlb	1	; select bank1
  1406  0296  0099               	movwf	25	;volatile
  1407  0297                     l1734:	
  1408                           
  1409                           ;main.c: 85:     PORT_Init();
  1410  0297  3182  22D8  3182   	fcall	_PORT_Init
  1411  029A                     l1736:	
  1412                           
  1413                           ;main.c: 87:     NRF_IRQ_Init();
  1414  029A  3182  22F9  3182   	fcall	_NRF_IRQ_Init
  1415  029D                     l1738:	
  1416                           
  1417                           ;main.c: 91:     WirelessPad();
  1418  029D  3180  2021  3182   	fcall	_WirelessPad
  1419  02A0                     l79:	
  1420                           ;main.c: 95:     while(1);
  1421                           
  1422  02A0                     l80:	
  1423  02A0  2AA0               	goto	l79
  1424  02A1  2808               	ljmp	start
  1425  02A2                     __end_of_main:	
  1426                           
  1427                           	psect	text1
  1428  0021                     __ptext1:	
  1429 ;; *************** function _WirelessPad *****************
  1430 ;; Defined at:
  1431 ;;		line 175 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  rxbuf           2   13[BANK0 ] unsigned char [2]
  1436 ;;  ledx            1    0        unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1
  1446 ;;      Params:         0       0       0
  1447 ;;      Locals:         0       3       0
  1448 ;;      Temps:          0       1       0
  1449 ;;      Totals:         0       4       0
  1450 ;;Total ram usage:        4 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    7
  1453 ;; This function calls:
  1454 ;;		_LED_Blue
  1455 ;;		_LED_Red
  1456 ;;		_NRF_Check
  1457 ;;		_NRF_Clear_IRQ
  1458 ;;		_NRF_On
  1459 ;;		_NRF_Port_Init
  1460 ;;		_NRF_RxPacket
  1461 ;;		_NRF_Rx_Receive
  1462 ;;		_NRF_Rx_Set
  1463 ;;		_NRF_Rx_Set_P0
  1464 ;;		_NRF_SPI_Init
  1465 ;;		_memcpy
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _WirelessPad
  1473  0021                     _WirelessPad:	
  1474  0021                     l1678:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _WirelessPad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;main.c: 177:     unsigned char ledx;;main.c: 178:     unsigned char rxbuf[2] ={0, 0};
  1480  0021  0020               	movlb	0	; select bank0
  1481  0022  01DA               	clrf	WirelessPad@rxbuf
  1482  0023  01DB               	clrf	WirelessPad@rxbuf+1
  1483  0024                     l1680:	
  1484                           
  1485                           ;main.c: 180:     NRF_On();
  1486  0024  3182  22F6  3180   	fcall	_NRF_On
  1487  0027                     l1682:	
  1488                           
  1489                           ;main.c: 181:     NRF_Port_Init();
  1490  0027  3182  22B0  3180   	fcall	_NRF_Port_Init
  1491  002A                     l1684:	
  1492                           
  1493                           ;main.c: 182:     NRF_SPI_Init();
  1494  002A  3182  22BC  3180   	fcall	_NRF_SPI_Init
  1495  002D                     l1686:	
  1496                           
  1497                           ;main.c: 184:     _delay((unsigned long)((500)*(125000/4000.0)));
  1498  002D  3015               	movlw	21
  1499  002E  0020               	movlb	0	; select bank0
  1500  002F  00D8               	movwf	??_WirelessPad
  1501  0030  3049               	movlw	73
  1502  0031                     u577:	
  1503  0031  0B89               	decfsz	9,f
  1504  0032  2831               	goto	u577
  1505  0033  0BD8               	decfsz	??_WirelessPad,f
  1506  0034  2831               	goto	u577
  1507  0035  0000               	nop
  1508  0036                     l1688:	
  1509                           
  1510                           ;main.c: 186:     if(NRF_Check()) {
  1511  0036  3180  2086  3180   	fcall	_NRF_Check
  1512  0039  3A00               	xorlw	0
  1513  003A  1903               	skipnz
  1514  003B  283D               	goto	u471
  1515  003C  283E               	goto	u470
  1516  003D                     u471:	
  1517  003D  2843               	goto	l1692
  1518  003E                     u470:	
  1519  003E                     l1690:	
  1520                           
  1521                           ;main.c: 188:             LED_Red(1);
  1522  003E  3001               	movlw	1
  1523  003F  3181  215F  3180   	fcall	_LED_Red
  1524  0042  283E               	goto	l1690
  1525  0043                     l1692:	
  1526                           
  1527                           ;main.c: 191:         LED_Blue(1);
  1528  0043  3001               	movlw	1
  1529  0044  3181  2185  3180   	fcall	_LED_Blue
  1530  0047                     l99:	
  1531                           ;main.c: 192:     }
  1532                           
  1533                           
  1534                           ;main.c: 194:     NRF_Rx_Set(0, 0x01);
  1535  0047  01F5               	clrf	NRF_Rx_Set@pipe
  1536  0048  0AF5               	incf	NRF_Rx_Set@pipe,f
  1537  0049  3000               	movlw	0
  1538  004A  3181  21AB  3180   	fcall	_NRF_Rx_Set
  1539  004D                     l1694:	
  1540                           
  1541                           ;main.c: 195:     NRF_Rx_Set_P0(rx_addr_0, 2);
  1542  004D  3002               	movlw	2
  1543  004E  0020               	movlb	0	; select bank0
  1544  004F  00D8               	movwf	??_WirelessPad
  1545  0050  0858               	movf	??_WirelessPad,w
  1546  0051  00F7               	movwf	NRF_Rx_Set_P0@buf_len
  1547  0052  3048               	movlw	(low (_rx_addr_0| 0))& (0+255)
  1548  0053  3182  2230  3180   	fcall	_NRF_Rx_Set_P0
  1549  0056                     l1696:	
  1550                           
  1551                           ;main.c: 196:     NRF_Rx_Receive();
  1552  0056  3182  2284  3180   	fcall	_NRF_Rx_Receive
  1553  0059                     l1698:	
  1554                           
  1555                           ;main.c: 198:     memcpy(pad_aux_dat, pad_aux_ok, 2);
  1556  0059  300A               	movlw	low (_pad_aux_ok| (0+32768))
  1557  005A  00F0               	movwf	memcpy@s1
  1558  005B  3083               	movlw	high (_pad_aux_ok| (0+32768))
  1559  005C  00F1               	movwf	memcpy@s1+1
  1560  005D  3002               	movlw	2
  1561  005E  00F2               	movwf	memcpy@n
  1562  005F  3000               	movlw	0
  1563  0060  00F3               	movwf	memcpy@n+1
  1564  0061  3063               	movlw	(low (_pad_aux_dat| 0))& (0+255)
  1565  0062  3180  20DB  3180   	fcall	_memcpy
  1566  0065                     l1700:	
  1567                           
  1568                           ;main.c: 202:         if(RA4 == 0) {
  1569  0065  0020               	movlb	0	; select bank0
  1570  0066  1A0C               	btfsc	12,4	;volatile
  1571  0067  2869               	goto	u481
  1572  0068  286A               	goto	u480
  1573  0069                     u481:	
  1574  0069  2877               	goto	l101
  1575  006A                     u480:	
  1576  006A                     l1702:	
  1577                           
  1578                           ;main.c: 203:             rxbuf[0] = 0;
  1579  006A  01DA               	clrf	WirelessPad@rxbuf
  1580  006B                     l1704:	
  1581  006B  305A               	movlw	(low (WirelessPad@rxbuf| 0))& (0+255)
  1582  006C  3181  2136  3180   	fcall	_NRF_RxPacket
  1583  006F                     l1706:	
  1584                           
  1585                           ;main.c: 205:             NRF_Clear_IRQ();
  1586  006F  3182  2248  3180   	fcall	_NRF_Clear_IRQ
  1587  0072                     l1708:	
  1588                           
  1589                           ;main.c: 207:             TRISA5 = 0; RA5 = 1;
  1590  0072  0021               	movlb	1	; select bank1
  1591  0073  128C               	bcf	12,5	;volatile
  1592  0074                     l1710:	
  1593  0074  0020               	movlb	0	; select bank0
  1594  0075  168C               	bsf	12,5	;volatile
  1595                           
  1596                           ;main.c: 208:         }else {
  1597  0076  287B               	goto	l1712
  1598  0077                     l101:	
  1599                           
  1600                           ;main.c: 209:             TRISA5 = 1; RA5 = 0;
  1601  0077  0021               	movlb	1	; select bank1
  1602  0078  168C               	bsf	12,5	;volatile
  1603  0079  0020               	movlb	0	; select bank0
  1604  007A  128C               	bcf	12,5	;volatile
  1605  007B                     l1712:	
  1606                           
  1607                           ;main.c: 211:         _delay((unsigned long)((100)*(125000/4000.0)));
  1608  007B  3005               	movlw	5
  1609  007C  0020               	movlb	0	; select bank0
  1610  007D  00D8               	movwf	??_WirelessPad
  1611  007E  300D               	movlw	13
  1612  007F                     u587:	
  1613  007F  0B89               	decfsz	9,f
  1614  0080  287F               	goto	u587
  1615  0081  0BD8               	decfsz	??_WirelessPad,f
  1616  0082  287F               	goto	u587
  1617  0083  0000               	nop
  1618  0084  2865               	goto	l1700
  1619  0085  0008               	return
  1620  0086                     __end_of_WirelessPad:	
  1621                           
  1622                           	psect	text2
  1623  00DB                     __ptext2:	
  1624 ;; *************** function _memcpy *****************
  1625 ;; Defined at:
  1626 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  d1              1    wreg     PTR void 
  1629 ;;		 -> pad_aux_dat(2), 
  1630 ;;  s1              2    0[COMMON] PTR const void 
  1631 ;;		 -> pad_aux_ok(2), 
  1632 ;;  n               2    2[COMMON] unsigned int 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  d1              1    8[COMMON] PTR void 
  1635 ;;		 -> pad_aux_dat(2), 
  1636 ;;  s               2    5[COMMON] PTR const unsigned char 
  1637 ;;		 -> pad_aux_ok(2), 
  1638 ;;  d               1    9[COMMON] PTR unsigned char 
  1639 ;;		 -> pad_aux_dat(2), 
  1640 ;;  tmp             1    7[COMMON] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      PTR void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1
  1650 ;;      Params:         4       0       0
  1651 ;;      Locals:         5       0       0
  1652 ;;      Temps:          1       0       0
  1653 ;;      Totals:        10       0       0
  1654 ;;Total ram usage:       10 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    1
  1657 ;; This function calls:
  1658 ;;		Nothing
  1659 ;; This function is called by:
  1660 ;;		_WirelessPad
  1661 ;; This function uses a non-reentrant model
  1662 ;;
  1663                           
  1664                           
  1665                           ;psect for function _memcpy
  1666  00DB                     _memcpy:	
  1667                           
  1668                           ;incstack = 0
  1669                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  1670                           ;memcpy@d1 stored from wreg
  1671  00DB  00F8               	movwf	memcpy@d1
  1672  00DC                     l1632:	
  1673  00DC  0871               	movf	memcpy@s1+1,w
  1674  00DD  00F6               	movwf	memcpy@s+1
  1675  00DE  0870               	movf	memcpy@s1,w
  1676  00DF  00F5               	movwf	memcpy@s
  1677  00E0  0878               	movf	memcpy@d1,w
  1678  00E1  00F4               	movwf	??_memcpy
  1679  00E2  0874               	movf	??_memcpy,w
  1680  00E3  00F9               	movwf	memcpy@d
  1681  00E4  28FC               	goto	l1642
  1682  00E5                     l1634:	
  1683  00E5  0875               	movf	memcpy@s,w
  1684  00E6  0084               	movwf	4
  1685  00E7  0876               	movf	memcpy@s+1,w
  1686  00E8  0085               	movwf	5
  1687  00E9  0800               	movf	0,w	;code access
  1688  00EA  00F4               	movwf	??_memcpy
  1689  00EB  0874               	movf	??_memcpy,w
  1690  00EC  00F7               	movwf	memcpy@tmp
  1691  00ED                     l1636:	
  1692  00ED  3001               	movlw	1
  1693  00EE  07F5               	addwf	memcpy@s,f
  1694  00EF  3000               	movlw	0
  1695  00F0  3DF6               	addwfc	memcpy@s+1,f
  1696  00F1                     l1638:	
  1697  00F1  0877               	movf	memcpy@tmp,w
  1698  00F2  00F4               	movwf	??_memcpy
  1699  00F3  0879               	movf	memcpy@d,w
  1700  00F4  0086               	movwf	6
  1701  00F5  0187               	clrf	7
  1702  00F6  0874               	movf	??_memcpy,w
  1703  00F7  0081               	movwf	1
  1704  00F8                     l1640:	
  1705  00F8  3001               	movlw	1
  1706  00F9  00F4               	movwf	??_memcpy
  1707  00FA  0874               	movf	??_memcpy,w
  1708  00FB  07F9               	addwf	memcpy@d,f
  1709  00FC                     l1642:	
  1710  00FC  3001               	movlw	1
  1711  00FD  02F2               	subwf	memcpy@n,f
  1712  00FE  3000               	movlw	0
  1713  00FF  3BF3               	subwfb	memcpy@n+1,f
  1714  0100  0A72               	incf	memcpy@n,w
  1715  0101  1D03               	skipz
  1716  0102  2907               	goto	u421
  1717  0103  0A73               	incf	memcpy@n+1,w
  1718  0104  1D03               	btfss	3,2
  1719  0105  2907               	goto	u421
  1720  0106  2908               	goto	u420
  1721  0107                     u421:	
  1722  0107  28E5               	goto	l1634
  1723  0108                     u420:	
  1724  0108                     l994:	
  1725  0108  0008               	return
  1726  0109                     __end_of_memcpy:	
  1727                           
  1728                           	psect	text3
  1729  02BC                     __ptext3:	
  1730 ;; *************** function _NRF_SPI_Init *****************
  1731 ;; Defined at:
  1732 ;;		line 70 in file "../library/nrf24l01.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         0       0       0
  1747 ;;      Locals:         0       0       0
  1748 ;;      Temps:          0       0       0
  1749 ;;      Totals:         0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_WirelessPad
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _NRF_SPI_Init
  1762  02BC                     _NRF_SPI_Init:	
  1763  02BC                     l1574:	
  1764                           ;incstack = 0
  1765                           ; Regs used in _NRF_SPI_Init: [wreg+status,2]
  1766                           
  1767                           
  1768                           ;../library/nrf24l01.c: 71:     SSP1STAT = 0x00;
  1769  02BC  0024               	movlb	4	; select bank4
  1770  02BD  0194               	clrf	20	;volatile
  1771  02BE                     l1576:	
  1772                           
  1773                           ;../library/nrf24l01.c: 72:     SSP1STATbits.CKE = 1;
  1774  02BE  1714               	bsf	20,6	;volatile
  1775                           
  1776                           ;../library/nrf24l01.c: 74:     SSP1BUF = 0;
  1777  02BF  0191               	clrf	17	;volatile
  1778  02C0                     l1578:	
  1779                           
  1780                           ;../library/nrf24l01.c: 75:     SSP1IF = 0;
  1781  02C0  0020               	movlb	0	; select bank0
  1782  02C1  1191               	bcf	17,3	;volatile
  1783  02C2                     l1580:	
  1784                           
  1785                           ;../library/nrf24l01.c: 76:     SSP1CON1 = 0x20;
  1786  02C2  3020               	movlw	32
  1787  02C3  0024               	movlb	4	; select bank4
  1788  02C4  0095               	movwf	21	;volatile
  1789  02C5                     l199:	
  1790  02C5  0008               	return
  1791  02C6                     __end_of_NRF_SPI_Init:	
  1792                           
  1793                           	psect	text4
  1794  0230                     __ptext4:	
  1795 ;; *************** function _NRF_Rx_Set_P0 *****************
  1796 ;; Defined at:
  1797 ;;		line 426 in file "../library/nrf24l01.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  addr            1    wreg     PTR unsigned char 
  1800 ;;		 -> rx_addr_0(5), 
  1801 ;;  buf_len         1    7[COMMON] unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  addr            1   10[COMMON] PTR unsigned char 
  1804 ;;		 -> rx_addr_0(5), 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1
  1814 ;;      Params:         1       0       0
  1815 ;;      Locals:         1       0       0
  1816 ;;      Temps:          2       0       0
  1817 ;;      Totals:         4       0       0
  1818 ;;Total ram usage:        4 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		_NRF_Write_Buf
  1823 ;;		_NRF_Write_Reg
  1824 ;; This function is called by:
  1825 ;;		_WirelessPad
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _NRF_Rx_Set_P0
  1831  0230                     _NRF_Rx_Set_P0:	
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in _NRF_Rx_Set_P0: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1835                           ;NRF_Rx_Set_P0@addr stored from wreg
  1836  0230  00FA               	movwf	NRF_Rx_Set_P0@addr
  1837  0231                     l1618:	
  1838                           
  1839                           ;../library/nrf24l01.c: 427:     RA0 = 0;
  1840  0231  0020               	movlb	0	; select bank0
  1841  0232  100C               	bcf	12,0	;volatile
  1842  0233                     l1620:	
  1843                           
  1844                           ;../library/nrf24l01.c: 428:     NRF_Write_Buf(0x20 + 0x0A, addr, 5);
  1845  0233  087A               	movf	NRF_Rx_Set_P0@addr,w
  1846  0234  00F8               	movwf	??_NRF_Rx_Set_P0
  1847  0235  0878               	movf	??_NRF_Rx_Set_P0,w
  1848  0236  00F1               	movwf	NRF_Write_Buf@pBuf
  1849  0237  3005               	movlw	5
  1850  0238  00F9               	movwf	??_NRF_Rx_Set_P0+1
  1851  0239  0879               	movf	??_NRF_Rx_Set_P0+1,w
  1852  023A  00F2               	movwf	NRF_Write_Buf@len
  1853  023B  302A               	movlw	42
  1854  023C  3181  21F2  3182   	fcall	_NRF_Write_Buf
  1855  023F                     l1622:	
  1856                           
  1857                           ;../library/nrf24l01.c: 429:     NRF_Write_Reg(0x20 + 0x11, buf_len);
  1858  023F  0877               	movf	NRF_Rx_Set_P0@buf_len,w
  1859  0240  00F8               	movwf	??_NRF_Rx_Set_P0
  1860  0241  0878               	movf	??_NRF_Rx_Set_P0,w
  1861  0242  00F1               	movwf	NRF_Write_Reg@value
  1862  0243  3031               	movlw	49
  1863  0244  3182  2272  3182   	fcall	_NRF_Write_Reg
  1864  0247                     l301:	
  1865  0247  0008               	return
  1866  0248                     __end_of_NRF_Rx_Set_P0:	
  1867                           
  1868                           	psect	text5
  1869  01AB                     __ptext5:	
  1870 ;; *************** function _NRF_Rx_Set *****************
  1871 ;; Defined at:
  1872 ;;		line 417 in file "../library/nrf24l01.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  ack             1    wreg     unsigned char 
  1875 ;;  pipe            1    5[COMMON] unsigned char 
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  ack             1    7[COMMON] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, pclath, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMMON   BANK0   BANK1
  1887 ;;      Params:         1       0       0
  1888 ;;      Locals:         1       0       0
  1889 ;;      Temps:          1       0       0
  1890 ;;      Totals:         3       0       0
  1891 ;;Total ram usage:        3 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    3
  1894 ;; This function calls:
  1895 ;;		_NRF_Write_Reg
  1896 ;; This function is called by:
  1897 ;;		_WirelessPad
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _NRF_Rx_Set
  1903  01AB                     _NRF_Rx_Set:	
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _NRF_Rx_Set: [wreg+status,2+status,0+pclath+cstack]
  1907                           ;NRF_Rx_Set@ack stored from wreg
  1908  01AB  00F7               	movwf	NRF_Rx_Set@ack
  1909  01AC                     l1614:	
  1910                           
  1911                           ;../library/nrf24l01.c: 418:     RA0 = 0;
  1912  01AC  0020               	movlb	0	; select bank0
  1913  01AD  100C               	bcf	12,0	;volatile
  1914  01AE                     l1616:	
  1915                           
  1916                           ;../library/nrf24l01.c: 419:     NRF_Write_Reg(0x20 + 0x01, ack);
  1917  01AE  0877               	movf	NRF_Rx_Set@ack,w
  1918  01AF  00F6               	movwf	??_NRF_Rx_Set
  1919  01B0  0876               	movf	??_NRF_Rx_Set,w
  1920  01B1  00F1               	movwf	NRF_Write_Reg@value
  1921  01B2  3021               	movlw	33
  1922  01B3  3182  2272  3181   	fcall	_NRF_Write_Reg
  1923                           
  1924                           ;../library/nrf24l01.c: 420:     NRF_Write_Reg(0x20 + 0x02, pipe);
  1925  01B6  0875               	movf	NRF_Rx_Set@pipe,w
  1926  01B7  00F6               	movwf	??_NRF_Rx_Set
  1927  01B8  0876               	movf	??_NRF_Rx_Set,w
  1928  01B9  00F1               	movwf	NRF_Write_Reg@value
  1929  01BA  3022               	movlw	34
  1930  01BB  3182  2272  3181   	fcall	_NRF_Write_Reg
  1931                           
  1932                           ;../library/nrf24l01.c: 422:     NRF_Write_Reg(0x20 + 0x05, 40);
  1933  01BE  3028               	movlw	40
  1934  01BF  00F6               	movwf	??_NRF_Rx_Set
  1935  01C0  0876               	movf	??_NRF_Rx_Set,w
  1936  01C1  00F1               	movwf	NRF_Write_Reg@value
  1937  01C2  3025               	movlw	37
  1938  01C3  3182  2272  3181   	fcall	_NRF_Write_Reg
  1939                           
  1940                           ;../library/nrf24l01.c: 423:     NRF_Write_Reg(0x20 + 0x06, 0x0f);
  1941  01C6  300F               	movlw	15
  1942  01C7  00F6               	movwf	??_NRF_Rx_Set
  1943  01C8  0876               	movf	??_NRF_Rx_Set,w
  1944  01C9  00F1               	movwf	NRF_Write_Reg@value
  1945  01CA  3026               	movlw	38
  1946  01CB  3182  2272  3181   	fcall	_NRF_Write_Reg
  1947  01CE                     l298:	
  1948  01CE  0008               	return
  1949  01CF                     __end_of_NRF_Rx_Set:	
  1950                           
  1951                           	psect	text6
  1952  0284                     __ptext6:	
  1953 ;; *************** function _NRF_Rx_Receive *****************
  1954 ;; Defined at:
  1955 ;;		line 456 in file "../library/nrf24l01.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1
  1969 ;;      Params:         0       0       0
  1970 ;;      Locals:         0       0       0
  1971 ;;      Temps:          1       0       0
  1972 ;;      Totals:         1       0       0
  1973 ;;Total ram usage:        1 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    3
  1976 ;; This function calls:
  1977 ;;		_NRF_Write_Reg
  1978 ;; This function is called by:
  1979 ;;		_WirelessPad
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _NRF_Rx_Receive
  1985  0284                     _NRF_Rx_Receive:	
  1986  0284                     l1624:	
  1987                           ;incstack = 0
  1988                           ; Regs used in _NRF_Rx_Receive: [wreg+status,2+status,0+pclath+cstack]
  1989                           
  1990                           
  1991                           ;../library/nrf24l01.c: 457:     RA0 = 0;
  1992  0284  0020               	movlb	0	; select bank0
  1993  0285  100C               	bcf	12,0	;volatile
  1994  0286                     l1626:	
  1995                           
  1996                           ;../library/nrf24l01.c: 458:     NRF_Write_Reg(0x20 + 0x00, 0x0f);
  1997  0286  300F               	movlw	15
  1998  0287  00F5               	movwf	??_NRF_Rx_Receive
  1999  0288  0875               	movf	??_NRF_Rx_Receive,w
  2000  0289  00F1               	movwf	NRF_Write_Reg@value
  2001  028A  3020               	movlw	32
  2002  028B  3182  2272  3182   	fcall	_NRF_Write_Reg
  2003  028E                     l1628:	
  2004                           
  2005                           ;../library/nrf24l01.c: 459:     RA0 = 1;
  2006  028E  0020               	movlb	0	; select bank0
  2007  028F  140C               	bsf	12,0	;volatile
  2008  0290                     l1630:	
  2009                           
  2010                           ;../library/nrf24l01.c: 460:     _delay((unsigned long)((200)*(125000/4000000.0)));
  2011  0290  3200               	nop2	;2 cycle nop
  2012  0291  3200               	nop2	;2 cycle nop
  2013  0292  3200               	nop2	;2 cycle nop
  2014  0293                     l316:	
  2015  0293  0008               	return
  2016  0294                     __end_of_NRF_Rx_Receive:	
  2017                           
  2018                           	psect	text7
  2019  0136                     __ptext7:	
  2020 ;; *************** function _NRF_RxPacket *****************
  2021 ;; Defined at:
  2022 ;;		line 264 in file "../library/nrf24l01.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  rxbuf           1    wreg     PTR unsigned char 
  2025 ;;		 -> WirelessPad@rxbuf(2), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  rxbuf           1    0[BANK0 ] PTR unsigned char 
  2028 ;;		 -> WirelessPad@rxbuf(2), 
  2029 ;;  status          1    1[BANK0 ] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      unsigned char 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1
  2039 ;;      Params:         0       0       0
  2040 ;;      Locals:         0       2       0
  2041 ;;      Temps:          1       0       0
  2042 ;;      Totals:         1       2       0
  2043 ;;Total ram usage:        3 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    6
  2046 ;; This function calls:
  2047 ;;		_NRF_Flush_RX
  2048 ;;		_NRF_Get_Status
  2049 ;;		_NRF_Read_RX_Pload
  2050 ;;		_NRF_Write_Reg
  2051 ;; This function is called by:
  2052 ;;		_WirelessPad
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _NRF_RxPacket
  2058  0136                     _NRF_RxPacket:	
  2059                           
  2060                           ;incstack = 0
  2061                           ; Regs used in _NRF_RxPacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2062                           ;NRF_RxPacket@rxbuf stored from wreg
  2063  0136  0020               	movlb	0	; select bank0
  2064  0137  00CD               	movwf	NRF_RxPacket@rxbuf
  2065  0138                     l1644:	
  2066  0138                     l1646:	
  2067                           
  2068                           ;../library/nrf24l01.c: 268:     if(NRF_Get_Status() & 0X40) {
  2069  0138  3182  22F1  3181   	fcall	_NRF_Get_Status
  2070  013B  3940               	andlw	64
  2071  013C  1903               	btfsc	3,2
  2072  013D  293F               	goto	u431
  2073  013E  2940               	goto	u430
  2074  013F                     u431:	
  2075  013F  295B               	goto	l1656
  2076  0140                     u430:	
  2077  0140                     l1648:	
  2078                           
  2079                           ;../library/nrf24l01.c: 269:         status = NRF_Read_RX_Pload(rxbuf);
  2080  0140  0020               	movlb	0	; select bank0
  2081  0141  084D               	movf	NRF_RxPacket@rxbuf,w
  2082  0142  3182  2213  3181   	fcall	_NRF_Read_RX_Pload
  2083  0145  00FD               	movwf	??_NRF_RxPacket
  2084  0146  087D               	movf	??_NRF_RxPacket,w
  2085  0147  0020               	movlb	0	; select bank0
  2086  0148  00CE               	movwf	NRF_RxPacket@status
  2087  0149                     l1650:	
  2088                           
  2089                           ;../library/nrf24l01.c: 270:         NRF_Write_Reg(0x20 + 0x07, 0xff);
  2090  0149  30FF               	movlw	255
  2091  014A  00FD               	movwf	??_NRF_RxPacket
  2092  014B  087D               	movf	??_NRF_RxPacket,w
  2093  014C  00F1               	movwf	NRF_Write_Reg@value
  2094  014D  3027               	movlw	39
  2095  014E  3182  2272  3181   	fcall	_NRF_Write_Reg
  2096  0151                     l1652:	
  2097                           
  2098                           ;../library/nrf24l01.c: 271:         NRF_Flush_RX();
  2099  0151  3182  22EB  3181   	fcall	_NRF_Flush_RX
  2100  0154                     l1654:	
  2101                           
  2102                           ;../library/nrf24l01.c: 272:         status = status + 1;
  2103  0154  0020               	movlb	0	; select bank0
  2104  0155  084E               	movf	NRF_RxPacket@status,w
  2105  0156  3E01               	addlw	1
  2106  0157  00FD               	movwf	??_NRF_RxPacket
  2107  0158  087D               	movf	??_NRF_RxPacket,w
  2108  0159  00CE               	movwf	NRF_RxPacket@status
  2109                           
  2110                           ;../library/nrf24l01.c: 273:     }else {
  2111  015A  295D               	goto	l1658
  2112  015B                     l1656:	
  2113                           
  2114                           ;../library/nrf24l01.c: 274:         status = 0;
  2115  015B  0020               	movlb	0	; select bank0
  2116  015C  01CE               	clrf	NRF_RxPacket@status
  2117  015D                     l1658:	
  2118                           
  2119                           ;../library/nrf24l01.c: 277:  return status;
  2120  015D  084E               	movf	NRF_RxPacket@status,w
  2121  015E                     l258:	
  2122  015E  0008               	return
  2123  015F                     __end_of_NRF_RxPacket:	
  2124                           
  2125                           	psect	text8
  2126  0213                     __ptext8:	
  2127 ;; *************** function _NRF_Read_RX_Pload *****************
  2128 ;; Defined at:
  2129 ;;		line 293 in file "../library/nrf24l01.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  pBuf            1    wreg     PTR unsigned char 
  2132 ;;		 -> WirelessPad@rxbuf(2), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  pBuf            1   11[COMMON] PTR unsigned char 
  2135 ;;		 -> WirelessPad@rxbuf(2), 
  2136 ;;  pipe            1   12[COMMON] unsigned char 
  2137 ;;  width           1   10[COMMON] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      unsigned char 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1
  2147 ;;      Params:         0       0       0
  2148 ;;      Locals:         3       0       0
  2149 ;;      Temps:          2       0       0
  2150 ;;      Totals:         5       0       0
  2151 ;;Total ram usage:        5 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    5
  2154 ;; This function calls:
  2155 ;;		_NRF_Get_Current_Pipenum
  2156 ;;		_NRF_Read_Buf
  2157 ;;		_NRF_Read_Reg
  2158 ;; This function is called by:
  2159 ;;		_NRF_RxPacket
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _NRF_Read_RX_Pload
  2165  0213                     _NRF_Read_RX_Pload:	
  2166                           
  2167                           ;incstack = 0
  2168                           ; Regs used in _NRF_Read_RX_Pload: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2169                           ;NRF_Read_RX_Pload@pBuf stored from wreg
  2170  0213  00FB               	movwf	NRF_Read_RX_Pload@pBuf
  2171  0214                     l1540:	
  2172                           
  2173                           ;../library/nrf24l01.c: 294:     unsigned char pipe, width;;../library/nrf24l01.c: 295: 
      +                              pipe = NRF_Get_Current_Pipenum();
  2174  0214  3182  22E5  3182   	fcall	_NRF_Get_Current_Pipenum
  2175  0217  00F8               	movwf	??_NRF_Read_RX_Pload
  2176  0218  0878               	movf	??_NRF_Read_RX_Pload,w
  2177  0219  00FC               	movwf	NRF_Read_RX_Pload@pipe
  2178                           
  2179                           ;../library/nrf24l01.c: 296:     width = NRF_Read_Reg(0x11 + pipe);
  2180  021A  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2181  021B  3E11               	addlw	17
  2182  021C  3182  2260  3182   	fcall	_NRF_Read_Reg
  2183  021F  00F8               	movwf	??_NRF_Read_RX_Pload
  2184  0220  0878               	movf	??_NRF_Read_RX_Pload,w
  2185  0221  00FA               	movwf	NRF_Read_RX_Pload@width
  2186  0222                     l1542:	
  2187                           
  2188                           ;../library/nrf24l01.c: 297:     NRF_Read_Buf(0x61, pBuf, width);
  2189  0222  087B               	movf	NRF_Read_RX_Pload@pBuf,w
  2190  0223  00F8               	movwf	??_NRF_Read_RX_Pload
  2191  0224  0878               	movf	??_NRF_Read_RX_Pload,w
  2192  0225  00F1               	movwf	NRF_Read_Buf@pBuf
  2193  0226  087A               	movf	NRF_Read_RX_Pload@width,w
  2194  0227  00F9               	movwf	??_NRF_Read_RX_Pload+1
  2195  0228  0879               	movf	??_NRF_Read_RX_Pload+1,w
  2196  0229  00F2               	movwf	NRF_Read_Buf@len
  2197  022A  3061               	movlw	97
  2198  022B  3181  21CF  3182   	fcall	_NRF_Read_Buf
  2199  022E                     l1544:	
  2200                           
  2201                           ;../library/nrf24l01.c: 298:     return pipe;
  2202  022E  087C               	movf	NRF_Read_RX_Pload@pipe,w
  2203  022F                     l264:	
  2204  022F  0008               	return
  2205  0230                     __end_of_NRF_Read_RX_Pload:	
  2206                           
  2207                           	psect	text9
  2208  02E5                     __ptext9:	
  2209 ;; *************** function _NRF_Get_Current_Pipenum *****************
  2210 ;; Defined at:
  2211 ;;		line 284 in file "../library/nrf24l01.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1
  2225 ;;      Params:         0       0       0
  2226 ;;      Locals:         0       0       0
  2227 ;;      Temps:          0       0       0
  2228 ;;      Totals:         0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    4
  2232 ;; This function calls:
  2233 ;;		_NRF_Get_Status
  2234 ;; This function is called by:
  2235 ;;		_NRF_Read_RX_Pload
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _NRF_Get_Current_Pipenum
  2241  02E5                     _NRF_Get_Current_Pipenum:	
  2242  02E5                     l1522:	
  2243                           ;incstack = 0
  2244                           ; Regs used in _NRF_Get_Current_Pipenum: [wreg+status,2+status,0+pclath+cstack]
  2245                           
  2246                           
  2247                           ;../library/nrf24l01.c: 285:   return ((NRF_Get_Status() & 0x0E) >> 1);
  2248  02E5  3182  22F1  3182   	fcall	_NRF_Get_Status
  2249  02E8  3689               	lsrf	9,f
  2250  02E9  3907               	andlw	7
  2251  02EA                     l261:	
  2252  02EA  0008               	return
  2253  02EB                     __end_of_NRF_Get_Current_Pipenum:	
  2254                           
  2255                           	psect	text10
  2256  02F1                     __ptext10:	
  2257 ;; *************** function _NRF_Get_Status *****************
  2258 ;; Defined at:
  2259 ;;		line 304 in file "../library/nrf24l01.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      unsigned char 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1
  2273 ;;      Params:         0       0       0
  2274 ;;      Locals:         0       0       0
  2275 ;;      Temps:          0       0       0
  2276 ;;      Totals:         0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    3
  2280 ;; This function calls:
  2281 ;;		_NRF_Read_Reg
  2282 ;; This function is called by:
  2283 ;;		_NRF_RxPacket
  2284 ;;		_NRF_Get_Current_Pipenum
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _NRF_Get_Status
  2290  02F1                     _NRF_Get_Status:	
  2291  02F1                     l1494:	
  2292                           ;incstack = 0
  2293                           ; Regs used in _NRF_Get_Status: [wreg+status,2+status,0+pclath+cstack]
  2294                           
  2295                           
  2296                           ;../library/nrf24l01.c: 305:     return NRF_Read_Reg(0x07);
  2297  02F1  3007               	movlw	7
  2298  02F2  3182  2260  3182   	fcall	_NRF_Read_Reg
  2299  02F5                     l267:	
  2300  02F5  0008               	return
  2301  02F6                     __end_of_NRF_Get_Status:	
  2302                           
  2303                           	psect	text11
  2304  0260                     __ptext11:	
  2305 ;; *************** function _NRF_Read_Reg *****************
  2306 ;; Defined at:
  2307 ;;		line 87 in file "../library/nrf24l01.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  reg             1    wreg     unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  reg             1    2[COMMON] unsigned char 
  2312 ;;  status          1    3[COMMON] unsigned char 
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      unsigned char 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1
  2322 ;;      Params:         0       0       0
  2323 ;;      Locals:         2       0       0
  2324 ;;      Temps:          1       0       0
  2325 ;;      Totals:         3       0       0
  2326 ;;Total ram usage:        3 bytes
  2327 ;; Hardware stack levels used:    1
  2328 ;; Hardware stack levels required when called:    2
  2329 ;; This function calls:
  2330 ;;		_NRF_SPI_RW
  2331 ;; This function is called by:
  2332 ;;		_NRF_Read_RX_Pload
  2333 ;;		_NRF_Get_Status
  2334 ;;		_NRF_TxPacket
  2335 ;;		_NRF_Tx_CheckACK
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _NRF_Read_Reg
  2341  0260                     _NRF_Read_Reg:	
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _NRF_Read_Reg: [wreg+status,2+status,0+pclath+cstack]
  2345                           ;NRF_Read_Reg@reg stored from wreg
  2346  0260  00F2               	movwf	NRF_Read_Reg@reg
  2347  0261                     l1482:	
  2348                           
  2349                           ;../library/nrf24l01.c: 88:  unsigned char status;;../library/nrf24l01.c: 89:    RA2 = 0
      +                          ;
  2350  0261  0020               	movlb	0	; select bank0
  2351  0262  110C               	bcf	12,2	;volatile
  2352  0263                     l1484:	
  2353                           
  2354                           ;../library/nrf24l01.c: 90:    NRF_SPI_RW(reg);
  2355  0263  0872               	movf	NRF_Read_Reg@reg,w
  2356  0264  3182  22A2  3182   	fcall	_NRF_SPI_RW
  2357  0267                     l1486:	
  2358                           
  2359                           ;../library/nrf24l01.c: 91:    status = NRF_SPI_RW(0xFF);
  2360  0267  30FF               	movlw	255
  2361  0268  3182  22A2  3182   	fcall	_NRF_SPI_RW
  2362  026B  00F1               	movwf	??_NRF_Read_Reg
  2363  026C  0871               	movf	??_NRF_Read_Reg,w
  2364  026D  00F3               	movwf	NRF_Read_Reg@status
  2365  026E                     l1488:	
  2366                           
  2367                           ;../library/nrf24l01.c: 92:    RA2 = 1;
  2368  026E  0020               	movlb	0	; select bank0
  2369  026F  150C               	bsf	12,2	;volatile
  2370  0270                     l1490:	
  2371                           
  2372                           ;../library/nrf24l01.c: 93:    return(status);
  2373  0270  0873               	movf	NRF_Read_Reg@status,w
  2374  0271                     l208:	
  2375  0271  0008               	return
  2376  0272                     __end_of_NRF_Read_Reg:	
  2377                           
  2378                           	psect	text12
  2379  02EB                     __ptext12:	
  2380 ;; *************** function _NRF_Flush_RX *****************
  2381 ;; Defined at:
  2382 ;;		line 318 in file "../library/nrf24l01.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1
  2396 ;;      Params:         0       0       0
  2397 ;;      Locals:         0       0       0
  2398 ;;      Temps:          0       0       0
  2399 ;;      Totals:         0       0       0
  2400 ;;Total ram usage:        0 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    3
  2403 ;; This function calls:
  2404 ;;		_NRF_Write_Reg
  2405 ;; This function is called by:
  2406 ;;		_NRF_RxPacket
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function _NRF_Flush_RX
  2412  02EB                     _NRF_Flush_RX:	
  2413  02EB                     l1548:	
  2414                           ;incstack = 0
  2415                           ; Regs used in _NRF_Flush_RX: [wreg+status,2+status,0+pclath+cstack]
  2416                           
  2417                           
  2418                           ;../library/nrf24l01.c: 319:     NRF_Write_Reg(0xE2, 0);
  2419  02EB  01F1               	clrf	NRF_Write_Reg@value
  2420  02EC  30E2               	movlw	226
  2421  02ED  3182  2272  3182   	fcall	_NRF_Write_Reg
  2422  02F0                     l273:	
  2423  02F0  0008               	return
  2424  02F1                     __end_of_NRF_Flush_RX:	
  2425                           
  2426                           	psect	text13
  2427  02B0                     __ptext13:	
  2428 ;; *************** function _NRF_Port_Init *****************
  2429 ;; Defined at:
  2430 ;;		line 44 in file "../library/nrf24l01.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;		None
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;		None
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  1    wreg      void 
  2437 ;; Registers used:
  2438 ;;		None
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1
  2444 ;;      Params:         0       0       0
  2445 ;;      Locals:         0       0       0
  2446 ;;      Temps:          0       0       0
  2447 ;;      Totals:         0       0       0
  2448 ;;Total ram usage:        0 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_WirelessPad
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _NRF_Port_Init
  2460  02B0                     _NRF_Port_Init:	
  2461  02B0                     l1572:	
  2462                           ;incstack = 0
  2463                           ; Regs used in _NRF_Port_Init: []
  2464                           
  2465                           
  2466                           ;../library/nrf24l01.c: 45:     TRISC1 = 1;
  2467  02B0  0021               	movlb	1	; select bank1
  2468  02B1  148E               	bsf	14,1	;volatile
  2469                           
  2470                           ;../library/nrf24l01.c: 46:     TRISC2 = 0;
  2471  02B2  110E               	bcf	14,2	;volatile
  2472                           
  2473                           ;../library/nrf24l01.c: 47:     TRISC0 = 0;
  2474  02B3  100E               	bcf	14,0	;volatile
  2475                           
  2476                           ;../library/nrf24l01.c: 48:     TRISA2 = 0;
  2477  02B4  110C               	bcf	12,2	;volatile
  2478                           
  2479                           ;../library/nrf24l01.c: 49:     TRISA0 = 0;
  2480  02B5  100C               	bcf	12,0	;volatile
  2481                           
  2482                           ;../library/nrf24l01.c: 51:     TRISA4 = 1;
  2483  02B6  160C               	bsf	12,4	;volatile
  2484                           
  2485                           ;../library/nrf24l01.c: 52:     TRISA5 = 0;
  2486  02B7  128C               	bcf	12,5	;volatile
  2487                           
  2488                           ;../library/nrf24l01.c: 54:     RA0 = 0;
  2489  02B8  0020               	movlb	0	; select bank0
  2490  02B9  100C               	bcf	12,0	;volatile
  2491                           
  2492                           ;../library/nrf24l01.c: 55:     RA2 = 1;
  2493  02BA  150C               	bsf	12,2	;volatile
  2494  02BB                     l190:	
  2495  02BB  0008               	return
  2496  02BC                     __end_of_NRF_Port_Init:	
  2497                           
  2498                           	psect	text14
  2499  02F6                     __ptext14:	
  2500 ;; *************** function _NRF_On *****************
  2501 ;; Defined at:
  2502 ;;		line 58 in file "../library/nrf24l01.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		None
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1
  2516 ;;      Params:         0       0       0
  2517 ;;      Locals:         0       0       0
  2518 ;;      Temps:          0       0       0
  2519 ;;      Totals:         0       0       0
  2520 ;;Total ram usage:        0 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_WirelessPad
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           
  2531                           ;psect for function _NRF_On
  2532  02F6                     _NRF_On:	
  2533  02F6                     l1570:	
  2534                           ;incstack = 0
  2535                           ; Regs used in _NRF_On: []
  2536                           
  2537                           
  2538                           ;../library/nrf24l01.c: 59:     RA5 = 0;
  2539  02F6  0020               	movlb	0	; select bank0
  2540  02F7  128C               	bcf	12,5	;volatile
  2541  02F8                     l193:	
  2542  02F8  0008               	return
  2543  02F9                     __end_of_NRF_On:	
  2544                           
  2545                           	psect	text15
  2546  0248                     __ptext15:	
  2547 ;; *************** function _NRF_Clear_IRQ *****************
  2548 ;; Defined at:
  2549 ;;		line 322 in file "../library/nrf24l01.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  buf             2    0        PTR unsigned char 
  2554 ;;  temp            1    8[COMMON] unsigned char 
  2555 ;;  IRQ_FLAG        1    0        unsigned char 
  2556 ;;  rx_pw           1    0        unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      unsigned char 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1
  2566 ;;      Params:         0       0       0
  2567 ;;      Locals:         2       0       0
  2568 ;;      Temps:          2       0       0
  2569 ;;      Totals:         4       0       0
  2570 ;;Total ram usage:        4 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    3
  2573 ;; This function calls:
  2574 ;;		_NRF_Write_Reg
  2575 ;; This function is called by:
  2576 ;;		_WirelessPad
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _NRF_Clear_IRQ
  2582  0248                     _NRF_Clear_IRQ:	
  2583  0248                     l1662:	
  2584                           ;incstack = 0
  2585                           ; Regs used in _NRF_Clear_IRQ: [wreg+status,2+status,0+pclath+cstack]
  2586                           
  2587                           
  2588                           ;../library/nrf24l01.c: 324:     unsigned char IRQ_FLAG;;../library/nrf24l01.c: 326:    
      +                           unsigned char temp, rx_pw;;../library/nrf24l01.c: 327:     unsigned char* buf;;../libra
      +                          ry/nrf24l01.c: 329:     temp = NRF_Write_Reg(0x20 + 0x07, 0x70);
  2589  0248  3070               	movlw	112
  2590  0249  00F5               	movwf	??_NRF_Clear_IRQ
  2591  024A  0875               	movf	??_NRF_Clear_IRQ,w
  2592  024B  00F1               	movwf	NRF_Write_Reg@value
  2593  024C  3027               	movlw	39
  2594  024D  3182  2272  3182   	fcall	_NRF_Write_Reg
  2595  0250  00F6               	movwf	??_NRF_Clear_IRQ+1
  2596  0251  0876               	movf	??_NRF_Clear_IRQ+1,w
  2597  0252  00F8               	movwf	NRF_Clear_IRQ@temp
  2598  0253                     l1664:	
  2599                           
  2600                           ;../library/nrf24l01.c: 331:     if(temp & 0X10) IRQ_FLAG = 0X10;
  2601  0253  1E78               	btfss	NRF_Clear_IRQ@temp,4
  2602  0254  2A56               	goto	u441
  2603  0255  2A57               	goto	u440
  2604  0256                     u441:	
  2605  0256  2A57               	goto	l1668
  2606  0257                     u440:	
  2607  0257                     l1666:	
  2608  0257                     l1668:	
  2609                           
  2610                           ;../library/nrf24l01.c: 332:     if(temp & 0X20) IRQ_FLAG = 0X20;
  2611  0257  1EF8               	btfss	NRF_Clear_IRQ@temp,5
  2612  0258  2A5A               	goto	u451
  2613  0259  2A5B               	goto	u450
  2614  025A                     u451:	
  2615  025A  2A5B               	goto	l1672
  2616  025B                     u450:	
  2617  025B                     l1670:	
  2618  025B                     l1672:	
  2619                           
  2620                           ;../library/nrf24l01.c: 334:     if(temp & 0X40)
  2621  025B  1F78               	btfss	NRF_Clear_IRQ@temp,6
  2622  025C  2A5E               	goto	u461
  2623  025D  2A5F               	goto	u460
  2624  025E                     u461:	
  2625  025E  2A5F               	goto	l279
  2626  025F                     u460:	
  2627  025F                     l1674:	
  2628  025F                     l279:	
  2629  025F  0008               	return
  2630  0260                     __end_of_NRF_Clear_IRQ:	
  2631                           
  2632                           	psect	text16
  2633  0272                     __ptext16:	
  2634 ;; *************** function _NRF_Write_Reg *****************
  2635 ;; Defined at:
  2636 ;;		line 103 in file "../library/nrf24l01.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  reg             1    wreg     unsigned char 
  2639 ;;  value           1    1[COMMON] unsigned char 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  reg             1    3[COMMON] unsigned char 
  2642 ;;  status          1    4[COMMON] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      unsigned char 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0, pclath, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMMON   BANK0   BANK1
  2652 ;;      Params:         1       0       0
  2653 ;;      Locals:         2       0       0
  2654 ;;      Temps:          1       0       0
  2655 ;;      Totals:         4       0       0
  2656 ;;Total ram usage:        4 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    2
  2659 ;; This function calls:
  2660 ;;		_NRF_SPI_RW
  2661 ;; This function is called by:
  2662 ;;		_NRF_RxPacket
  2663 ;;		_NRF_Flush_RX
  2664 ;;		_NRF_Clear_IRQ
  2665 ;;		_NRF_Rx_Set
  2666 ;;		_NRF_Rx_Set_P0
  2667 ;;		_NRF_Rx_Receive
  2668 ;;		_NRF_Power_off
  2669 ;;		_NRF_TX_Mode
  2670 ;;		_NRF_TxPacket
  2671 ;;		_NRF_RX_Mode
  2672 ;;		_NRF_Flush_TX
  2673 ;;		_NRF_Tx_Set
  2674 ;;		_NRF_Tx_CheckACK
  2675 ;;		_NRF_Rx_Set_P1
  2676 ;;		_NRF_Rx_Set_P3
  2677 ;;		_NRF_Rx_Set_P4
  2678 ;;		_NRF_Rx_Set_P5
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _NRF_Write_Reg
  2684  0272                     _NRF_Write_Reg:	
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _NRF_Write_Reg: [wreg+status,2+status,0+pclath+cstack]
  2688                           ;NRF_Write_Reg@reg stored from wreg
  2689  0272  00F3               	movwf	NRF_Write_Reg@reg
  2690  0273                     l1498:	
  2691                           
  2692                           ;../library/nrf24l01.c: 104:  unsigned char status;;../library/nrf24l01.c: 105:    RA2 =
      +                           0;
  2693  0273  0020               	movlb	0	; select bank0
  2694  0274  110C               	bcf	12,2	;volatile
  2695  0275                     l1500:	
  2696                           
  2697                           ;../library/nrf24l01.c: 106:    status = NRF_SPI_RW(reg);
  2698  0275  0873               	movf	NRF_Write_Reg@reg,w
  2699  0276  3182  22A2  3182   	fcall	_NRF_SPI_RW
  2700  0279  00F2               	movwf	??_NRF_Write_Reg
  2701  027A  0872               	movf	??_NRF_Write_Reg,w
  2702  027B  00F4               	movwf	NRF_Write_Reg@status
  2703  027C                     l1502:	
  2704                           
  2705                           ;../library/nrf24l01.c: 107:    NRF_SPI_RW(value);
  2706  027C  0871               	movf	NRF_Write_Reg@value,w
  2707  027D  3182  22A2  3182   	fcall	_NRF_SPI_RW
  2708  0280                     l1504:	
  2709                           
  2710                           ;../library/nrf24l01.c: 108:    RA2 = 1;
  2711  0280  0020               	movlb	0	; select bank0
  2712  0281  150C               	bsf	12,2	;volatile
  2713  0282                     l1506:	
  2714                           
  2715                           ;../library/nrf24l01.c: 109:    return(status);
  2716  0282  0874               	movf	NRF_Write_Reg@status,w
  2717  0283                     l211:	
  2718  0283  0008               	return
  2719  0284                     __end_of_NRF_Write_Reg:	
  2720                           
  2721                           	psect	text17
  2722  0086                     __ptext17:	
  2723 ;; *************** function _NRF_Check *****************
  2724 ;; Defined at:
  2725 ;;		line 158 in file "../library/nrf24l01.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  buf             5    5[BANK0 ] unsigned char [5]
  2730 ;;  tuf             5    0[BANK0 ] unsigned char [5]
  2731 ;;  i               1   10[BANK0 ] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      unsigned char 
  2734 ;; Registers used:
  2735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMMON   BANK0   BANK1
  2741 ;;      Params:         0       0       0
  2742 ;;      Locals:         0      11       0
  2743 ;;      Temps:          2       0       0
  2744 ;;      Totals:         2      11       0
  2745 ;;Total ram usage:       13 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    3
  2748 ;; This function calls:
  2749 ;;		_NRF_Read_Buf
  2750 ;;		_NRF_Write_Buf
  2751 ;; This function is called by:
  2752 ;;		_WirelessPad
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _NRF_Check
  2758  0086                     _NRF_Check:	
  2759  0086                     l1582:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _NRF_Check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2762                           
  2763                           
  2764                           ;../library/nrf24l01.c: 159:     unsigned char tuf[5] = {0xE1, 0xE2, 0xE3, 0xE4, 0x05};
  2765  0086  3020               	movlw	low NRF_Check@F2718
  2766  0087  0086               	movwf	6
  2767  0088  3000               	movlw	high NRF_Check@F2718
  2768  0089  0087               	movwf	7
  2769  008A  304D               	movlw	low NRF_Check@tuf
  2770  008B  0084               	movwf	4
  2771  008C  3000               	movlw	high NRF_Check@tuf
  2772  008D  0085               	movwf	5
  2773  008E  3005               	movlw	5
  2774  008F  00F8               	movwf	??_NRF_Check
  2775  0090                     u370:	
  2776  0090  0016               	moviw fsr1++
  2777  0091  001A               	movwi fsr0++
  2778  0092  0BF8               	decfsz	??_NRF_Check,f
  2779  0093  2890               	goto	u370
  2780  0094                     l1584:	
  2781                           
  2782                           ;../library/nrf24l01.c: 160:  unsigned char buf[5] = {0, 0, 0, 0, 0};
  2783  0094  3052               	movlw	low NRF_Check@buf
  2784  0095  0086               	movwf	6
  2785  0096  3000               	movlw	high NRF_Check@buf
  2786  0097  0087               	movwf	7
  2787  0098  3005               	movlw	5
  2788  0099  00F8               	movwf	??_NRF_Check
  2789  009A  3000               	movlw	0
  2790  009B                     u380:	
  2791  009B  001E               	movwi fsr1++
  2792  009C  0BF8               	decfsz	??_NRF_Check,f
  2793  009D  289B               	goto	u380
  2794  009E                     l1586:	
  2795                           
  2796                           ;../library/nrf24l01.c: 161:  unsigned char i;;../library/nrf24l01.c: 162:     NRF_Write
      +                          _Buf(0x20 + 0x10, tuf, 5);
  2797  009E  304D               	movlw	(low (NRF_Check@tuf| 0))& (0+255)
  2798  009F  00F8               	movwf	??_NRF_Check
  2799  00A0  0878               	movf	??_NRF_Check,w
  2800  00A1  00F1               	movwf	NRF_Write_Buf@pBuf
  2801  00A2  3005               	movlw	5
  2802  00A3  00F9               	movwf	??_NRF_Check+1
  2803  00A4  0879               	movf	??_NRF_Check+1,w
  2804  00A5  00F2               	movwf	NRF_Write_Buf@len
  2805  00A6  3030               	movlw	48
  2806  00A7  3181  21F2  3180   	fcall	_NRF_Write_Buf
  2807  00AA                     l1588:	
  2808                           
  2809                           ;../library/nrf24l01.c: 163:  NRF_Read_Buf(0x10, buf, 5);
  2810  00AA  3052               	movlw	(low (NRF_Check@buf| 0))& (0+255)
  2811  00AB  00F8               	movwf	??_NRF_Check
  2812  00AC  0878               	movf	??_NRF_Check,w
  2813  00AD  00F1               	movwf	NRF_Read_Buf@pBuf
  2814  00AE  3005               	movlw	5
  2815  00AF  00F9               	movwf	??_NRF_Check+1
  2816  00B0  0879               	movf	??_NRF_Check+1,w
  2817  00B1  00F2               	movwf	NRF_Read_Buf@len
  2818  00B2  3010               	movlw	16
  2819  00B3  3181  21CF  3180   	fcall	_NRF_Read_Buf
  2820  00B6                     l1590:	
  2821                           
  2822                           ;../library/nrf24l01.c: 164:  for(i = 0; i < 5; i++) if(tuf[i] != buf[i]) break;
  2823  00B6  0020               	movlb	0	; select bank0
  2824  00B7  01D7               	clrf	NRF_Check@i
  2825  00B8                     l1596:	
  2826  00B8  0857               	movf	NRF_Check@i,w
  2827  00B9  3E52               	addlw	(low (NRF_Check@buf| 0))& (0+255)
  2828  00BA  0086               	movwf	6
  2829  00BB  0187               	clrf	7
  2830  00BC  0857               	movf	NRF_Check@i,w
  2831  00BD  3E4D               	addlw	(low (NRF_Check@tuf| 0))& (0+255)
  2832  00BE  0084               	movwf	4
  2833  00BF  0185               	clrf	5
  2834  00C0  0800               	movf	0,w
  2835  00C1  0601               	xorwf	1,w
  2836  00C2  1903               	skipnz
  2837  00C3  28C5               	goto	u391
  2838  00C4  28C6               	goto	u390
  2839  00C5                     u391:	
  2840  00C5  28C7               	goto	l1600
  2841  00C6                     u390:	
  2842  00C6  28D1               	goto	l1604
  2843  00C7                     l1600:	
  2844  00C7  3001               	movlw	1
  2845  00C8  00F8               	movwf	??_NRF_Check
  2846  00C9  0878               	movf	??_NRF_Check,w
  2847  00CA  07D7               	addwf	NRF_Check@i,f
  2848  00CB                     l1602:	
  2849  00CB  3005               	movlw	5
  2850  00CC  0257               	subwf	NRF_Check@i,w
  2851  00CD  1C03               	skipc
  2852  00CE  28D0               	goto	u401
  2853  00CF  28D1               	goto	u400
  2854  00D0                     u401:	
  2855  00D0  28B8               	goto	l1596
  2856  00D1                     u400:	
  2857  00D1                     l1604:	
  2858                           
  2859                           ;../library/nrf24l01.c: 165:  if(i != 5) return 1;
  2860  00D1  3005               	movlw	5
  2861  00D2  0657               	xorwf	NRF_Check@i,w
  2862  00D3  1903               	btfsc	3,2
  2863  00D4  28D6               	goto	u411
  2864  00D5  28D7               	goto	u410
  2865  00D6                     u411:	
  2866  00D6  28D9               	goto	l1610
  2867  00D7                     u410:	
  2868  00D7                     l1606:	
  2869  00D7  3001               	movlw	1
  2870  00D8  28DA               	goto	l237
  2871  00D9                     l1610:	
  2872                           
  2873                           ;../library/nrf24l01.c: 166:  return 0;
  2874  00D9  3000               	movlw	0
  2875  00DA                     l237:	
  2876  00DA  0008               	return
  2877  00DB                     __end_of_NRF_Check:	
  2878                           
  2879                           	psect	text18
  2880  01F2                     __ptext18:	
  2881 ;; *************** function _NRF_Write_Buf *****************
  2882 ;; Defined at:
  2883 ;;		line 138 in file "../library/nrf24l01.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  reg             1    wreg     unsigned char 
  2886 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  2887 ;;		 -> RX_ADDRESS_P5(5), RX_ADDRESS_P4(5), RX_ADDRESS_P3(5), RX_ADDRESS_P2(5), 
  2888 ;;		 -> RX_ADDRESS_P1(5), RX_ADDRESS_P0(5), NRF_Check@tuf(5), rx_addr_0(5), 
  2889 ;;  len             1    2[COMMON] unsigned char 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  reg             1    5[COMMON] unsigned char 
  2892 ;;  i               1    6[COMMON] unsigned char 
  2893 ;;  status          1    0        unsigned char 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1    wreg      unsigned char 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1
  2903 ;;      Params:         2       0       0
  2904 ;;      Locals:         3       0       0
  2905 ;;      Temps:          1       0       0
  2906 ;;      Totals:         6       0       0
  2907 ;;Total ram usage:        6 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    2
  2910 ;; This function calls:
  2911 ;;		_NRF_SPI_RW
  2912 ;; This function is called by:
  2913 ;;		_NRF_Check
  2914 ;;		_NRF_Rx_Set_P0
  2915 ;;		_NRF_TX_Mode
  2916 ;;		_NRF_RX_Mode
  2917 ;;		_NRF_Tx_Set
  2918 ;;		_NRF_Tx_Send
  2919 ;;		_NRF_Rx_Set_P1
  2920 ;;		_NRF_Rx_Set_P3
  2921 ;;		_NRF_Rx_Set_P4
  2922 ;;		_NRF_Rx_Set_P5
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _NRF_Write_Buf
  2928  01F2                     _NRF_Write_Buf:	
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in _NRF_Write_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2932                           ;NRF_Write_Buf@reg stored from wreg
  2933  01F2  00F5               	movwf	NRF_Write_Buf@reg
  2934  01F3                     l1526:	
  2935                           
  2936                           ;../library/nrf24l01.c: 138: unsigned char NRF_Write_Buf(unsigned char reg, unsigned cha
      +                          r *pBuf, unsigned char len);../library/nrf24l01.c: 139: {;../library/nrf24l01.c: 140:  u
      +                          nsigned char status, i;;../library/nrf24l01.c: 141:    RA2 = 0;
  2937  01F3  0020               	movlb	0	; select bank0
  2938  01F4  110C               	bcf	12,2	;volatile
  2939  01F5                     l1528:	
  2940  01F5  0875               	movf	NRF_Write_Buf@reg,w
  2941  01F6  3182  22A2  3181   	fcall	_NRF_SPI_RW
  2942  01F9                     l1530:	
  2943                           
  2944                           ;../library/nrf24l01.c: 143:    for(i = 0; i < len; i++) {
  2945  01F9  01F6               	clrf	NRF_Write_Buf@i
  2946  01FA  2A0A               	goto	l1538
  2947  01FB                     l1532:	
  2948                           
  2949                           ;../library/nrf24l01.c: 144:      NRF_SPI_RW(*pBuf++);
  2950  01FB  0871               	movf	NRF_Write_Buf@pBuf,w
  2951  01FC  0086               	movwf	6
  2952  01FD  0187               	clrf	7
  2953  01FE  0801               	movf	1,w
  2954  01FF  3182  22A2  3181   	fcall	_NRF_SPI_RW
  2955  0202                     l1534:	
  2956  0202  3001               	movlw	1
  2957  0203  00F3               	movwf	??_NRF_Write_Buf
  2958  0204  0873               	movf	??_NRF_Write_Buf,w
  2959  0205  07F1               	addwf	NRF_Write_Buf@pBuf,f
  2960  0206                     l1536:	
  2961                           
  2962                           ;../library/nrf24l01.c: 145:  }
  2963  0206  3001               	movlw	1
  2964  0207  00F3               	movwf	??_NRF_Write_Buf
  2965  0208  0873               	movf	??_NRF_Write_Buf,w
  2966  0209  07F6               	addwf	NRF_Write_Buf@i,f
  2967  020A                     l1538:	
  2968  020A  0872               	movf	NRF_Write_Buf@len,w
  2969  020B  0276               	subwf	NRF_Write_Buf@i,w
  2970  020C  1C03               	skipc
  2971  020D  2A0F               	goto	u341
  2972  020E  2A10               	goto	u340
  2973  020F                     u341:	
  2974  020F  29FB               	goto	l1532
  2975  0210                     u340:	
  2976  0210                     l222:	
  2977                           
  2978                           ;../library/nrf24l01.c: 146:    RA2 = 1;
  2979  0210  0020               	movlb	0	; select bank0
  2980  0211  150C               	bsf	12,2	;volatile
  2981  0212                     l223:	
  2982                           ;../library/nrf24l01.c: 147:    return(status);;	Return value of _NRF_Write_Buf is never
      +                           used
  2983                           
  2984  0212  0008               	return
  2985  0213                     __end_of_NRF_Write_Buf:	
  2986                           
  2987                           	psect	text19
  2988  01CF                     __ptext19:	
  2989 ;; *************** function _NRF_Read_Buf *****************
  2990 ;; Defined at:
  2991 ;;		line 119 in file "../library/nrf24l01.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;  reg             1    wreg     unsigned char 
  2994 ;;  pBuf            1    1[COMMON] PTR unsigned char 
  2995 ;;		 -> NRF_Check@buf(5), WirelessPad@rxbuf(2), 
  2996 ;;  len             1    2[COMMON] unsigned char 
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;  reg             1    6[COMMON] unsigned char 
  2999 ;;  i               1    7[COMMON] unsigned char 
  3000 ;;  status          1    0        unsigned char 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      unsigned char 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1
  3010 ;;      Params:         2       0       0
  3011 ;;      Locals:         3       0       0
  3012 ;;      Temps:          2       0       0
  3013 ;;      Totals:         7       0       0
  3014 ;;Total ram usage:        7 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    2
  3017 ;; This function calls:
  3018 ;;		_NRF_SPI_RW
  3019 ;; This function is called by:
  3020 ;;		_NRF_Check
  3021 ;;		_NRF_Read_RX_Pload
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _NRF_Read_Buf
  3027  01CF                     _NRF_Read_Buf:	
  3028                           
  3029                           ;incstack = 0
  3030                           ; Regs used in _NRF_Read_Buf: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3031                           ;NRF_Read_Buf@reg stored from wreg
  3032  01CF  00F6               	movwf	NRF_Read_Buf@reg
  3033  01D0                     l1510:	
  3034                           
  3035                           ;../library/nrf24l01.c: 119: unsigned char NRF_Read_Buf(unsigned char reg, unsigned char
      +                           *pBuf, unsigned char len);../library/nrf24l01.c: 120: {;../library/nrf24l01.c: 121:  un
      +                          signed char status,i;;../library/nrf24l01.c: 122:    RA2 = 0;
  3036  01D0  0020               	movlb	0	; select bank0
  3037  01D1  110C               	bcf	12,2	;volatile
  3038  01D2                     l1512:	
  3039  01D2  0876               	movf	NRF_Read_Buf@reg,w
  3040  01D3  3182  22A2  3181   	fcall	_NRF_SPI_RW
  3041  01D6                     l1514:	
  3042                           
  3043                           ;../library/nrf24l01.c: 124:    for(i = 0; i < len; i++)
  3044  01D6  01F7               	clrf	NRF_Read_Buf@i
  3045  01D7  29E9               	goto	l1520
  3046  01D8                     l1516:	
  3047                           
  3048                           ;../library/nrf24l01.c: 125:  {;../library/nrf24l01.c: 126:      pBuf[i] = NRF_SPI_RW(0x
      +                          FF);
  3049  01D8  30FF               	movlw	255
  3050  01D9  3182  22A2  3181   	fcall	_NRF_SPI_RW
  3051  01DC  00F3               	movwf	??_NRF_Read_Buf
  3052  01DD  0877               	movf	NRF_Read_Buf@i,w
  3053  01DE  0771               	addwf	NRF_Read_Buf@pBuf,w
  3054  01DF  00F4               	movwf	??_NRF_Read_Buf+1
  3055  01E0  0874               	movf	??_NRF_Read_Buf+1,w
  3056  01E1  0086               	movwf	6
  3057  01E2  0187               	clrf	7
  3058  01E3  0873               	movf	??_NRF_Read_Buf,w
  3059  01E4  0081               	movwf	1
  3060  01E5                     l1518:	
  3061                           
  3062                           ;../library/nrf24l01.c: 127:    }
  3063  01E5  3001               	movlw	1
  3064  01E6  00F3               	movwf	??_NRF_Read_Buf
  3065  01E7  0873               	movf	??_NRF_Read_Buf,w
  3066  01E8  07F7               	addwf	NRF_Read_Buf@i,f
  3067  01E9                     l1520:	
  3068  01E9  0872               	movf	NRF_Read_Buf@len,w
  3069  01EA  0277               	subwf	NRF_Read_Buf@i,w
  3070  01EB  1C03               	skipc
  3071  01EC  29EE               	goto	u331
  3072  01ED  29EF               	goto	u330
  3073  01EE                     u331:	
  3074  01EE  29D8               	goto	l1516
  3075  01EF                     u330:	
  3076  01EF                     l216:	
  3077                           
  3078                           ;../library/nrf24l01.c: 128:  RA2 = 1;
  3079  01EF  0020               	movlb	0	; select bank0
  3080  01F0  150C               	bsf	12,2	;volatile
  3081  01F1                     l217:	
  3082                           ;../library/nrf24l01.c: 129:    return(status);;	Return value of _NRF_Read_Buf is never 
      +                          used
  3083                           
  3084  01F1  0008               	return
  3085  01F2                     __end_of_NRF_Read_Buf:	
  3086                           
  3087                           	psect	text20
  3088  02A2                     __ptext20:	
  3089 ;; *************** function _NRF_SPI_RW *****************
  3090 ;; Defined at:
  3091 ;;		line 79 in file "../library/nrf24l01.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;  dat             1    wreg     unsigned char 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  dat             1    0[COMMON] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      unsigned char 
  3098 ;; Registers used:
  3099 ;;		wreg
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1
  3105 ;;      Params:         0       0       0
  3106 ;;      Locals:         1       0       0
  3107 ;;      Temps:          0       0       0
  3108 ;;      Totals:         1       0       0
  3109 ;;Total ram usage:        1 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_NRF_Read_Reg
  3116 ;;		_NRF_Write_Reg
  3117 ;;		_NRF_Read_Buf
  3118 ;;		_NRF_Write_Buf
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _NRF_SPI_RW
  3124  02A2                     _NRF_SPI_RW:	
  3125                           
  3126                           ;incstack = 0
  3127                           ; Regs used in _NRF_SPI_RW: [wreg]
  3128                           ;NRF_SPI_RW@dat stored from wreg
  3129  02A2  00F0               	movwf	NRF_SPI_RW@dat
  3130  02A3                     l1474:	
  3131                           
  3132                           ;../library/nrf24l01.c: 80:     SSP1IF = 0;
  3133  02A3  0020               	movlb	0	; select bank0
  3134  02A4  1191               	bcf	17,3	;volatile
  3135  02A5                     l1476:	
  3136                           
  3137                           ;../library/nrf24l01.c: 81:     SSP1BUF = dat;
  3138  02A5  0870               	movf	NRF_SPI_RW@dat,w
  3139  02A6  0024               	movlb	4	; select bank4
  3140  02A7  0091               	movwf	17	;volatile
  3141  02A8                     l202:	
  3142                           ;../library/nrf24l01.c: 82:     while(!SSP1IF);
  3143                           
  3144  02A8  0020               	movlb	0	; select bank0
  3145  02A9  1D91               	btfss	17,3	;volatile
  3146  02AA  2AAC               	goto	u321
  3147  02AB  2AAD               	goto	u320
  3148  02AC                     u321:	
  3149  02AC  2AA8               	goto	l202
  3150  02AD                     u320:	
  3151  02AD                     l1478:	
  3152                           
  3153                           ;../library/nrf24l01.c: 84:     return(SSP1BUF);
  3154  02AD  0024               	movlb	4	; select bank4
  3155  02AE  0811               	movf	17,w	;volatile
  3156  02AF                     l205:	
  3157  02AF  0008               	return
  3158  02B0                     __end_of_NRF_SPI_RW:	
  3159                           
  3160                           	psect	text21
  3161  015F                     __ptext21:	
  3162 ;; *************** function _LED_Red *****************
  3163 ;; Defined at:
  3164 ;;		line 61 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  num             1    wreg     unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  num             1    1[COMMON] unsigned char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1
  3178 ;;      Params:         0       0       0
  3179 ;;      Locals:         1       0       0
  3180 ;;      Temps:          1       0       0
  3181 ;;      Totals:         2       0       0
  3182 ;;Total ram usage:        2 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_WirelessPad
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           
  3193                           ;psect for function _LED_Red
  3194  015F                     _LED_Red:	
  3195                           
  3196                           ;incstack = 0
  3197                           ; Regs used in _LED_Red: [wreg+status,2+status,0]
  3198                           ;LED_Red@num stored from wreg
  3199  015F  00F1               	movwf	LED_Red@num
  3200  0160                     l1550:	
  3201                           
  3202                           ;main.c: 62:     while(num--) {
  3203  0160  2975               	goto	l1556
  3204  0161                     l66:	
  3205                           
  3206                           ;main.c: 63:         RC4 = 1;;
  3207  0161  0020               	movlb	0	; select bank0
  3208  0162  160E               	bsf	14,4	;volatile
  3209  0163                     l1552:	
  3210                           
  3211                           ;main.c: 64:         _delay((unsigned long)((200)*(125000/4000.0)));
  3212  0163  3009               	movlw	9
  3213  0164  00F0               	movwf	??_LED_Red
  3214  0165  301C               	movlw	28
  3215  0166                     u597:	
  3216  0166  0B89               	decfsz	9,f
  3217  0167  2966               	goto	u597
  3218  0168  0BF0               	decfsz	??_LED_Red,f
  3219  0169  2966               	goto	u597
  3220  016A  3200               	nop2
  3221  016B                     l1554:	
  3222                           
  3223                           ;main.c: 65:         RC4 = 0;
  3224  016B  0020               	movlb	0	; select bank0
  3225  016C  120E               	bcf	14,4	;volatile
  3226                           
  3227                           ;main.c: 66:         _delay((unsigned long)((200)*(125000/4000.0)));
  3228  016D  3009               	movlw	9
  3229  016E  00F0               	movwf	??_LED_Red
  3230  016F  301C               	movlw	28
  3231  0170                     u607:	
  3232  0170  0B89               	decfsz	9,f
  3233  0171  2970               	goto	u607
  3234  0172  0BF0               	decfsz	??_LED_Red,f
  3235  0173  2970               	goto	u607
  3236  0174  3200               	nop2
  3237  0175                     l1556:	
  3238                           
  3239                           ;main.c: 62:     while(num--) {
  3240  0175  3001               	movlw	1
  3241  0176  02F1               	subwf	LED_Red@num,f
  3242  0177  0A71               	incf	LED_Red@num,w
  3243  0178  1D03               	btfss	3,2
  3244  0179  297B               	goto	u351
  3245  017A  297C               	goto	u350
  3246  017B                     u351:	
  3247  017B  2961               	goto	l66
  3248  017C                     u350:	
  3249  017C                     l1558:	
  3250                           
  3251                           ;main.c: 68:     _delay((unsigned long)((1000)*(125000/4000.0)));
  3252  017C  3029               	movlw	41
  3253  017D  00F0               	movwf	??_LED_Red
  3254  017E  3094               	movlw	148
  3255  017F                     u617:	
  3256  017F  0B89               	decfsz	9,f
  3257  0180  297F               	goto	u617
  3258  0181  0BF0               	decfsz	??_LED_Red,f
  3259  0182  297F               	goto	u617
  3260  0183  3200               	nop2
  3261  0184                     l68:	
  3262  0184  0008               	return
  3263  0185                     __end_of_LED_Red:	
  3264                           
  3265                           	psect	text22
  3266  0185                     __ptext22:	
  3267 ;; *************** function _LED_Blue *****************
  3268 ;; Defined at:
  3269 ;;		line 71 in file "main.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;  num             1    wreg     unsigned char 
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  num             1    1[COMMON] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1
  3283 ;;      Params:         0       0       0
  3284 ;;      Locals:         1       0       0
  3285 ;;      Temps:          1       0       0
  3286 ;;      Totals:         2       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_WirelessPad
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _LED_Blue
  3299  0185                     _LED_Blue:	
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _LED_Blue: [wreg+status,2+status,0]
  3303                           ;LED_Blue@num stored from wreg
  3304  0185  00F1               	movwf	LED_Blue@num
  3305  0186                     l1560:	
  3306                           
  3307                           ;main.c: 72:     while(num--) {
  3308  0186  299B               	goto	l1566
  3309  0187                     l72:	
  3310                           
  3311                           ;main.c: 73:         RC5 = 1;;
  3312  0187  0020               	movlb	0	; select bank0
  3313  0188  168E               	bsf	14,5	;volatile
  3314  0189                     l1562:	
  3315                           
  3316                           ;main.c: 74:         _delay((unsigned long)((200)*(125000/4000.0)));
  3317  0189  3009               	movlw	9
  3318  018A  00F0               	movwf	??_LED_Blue
  3319  018B  301C               	movlw	28
  3320  018C                     u627:	
  3321  018C  0B89               	decfsz	9,f
  3322  018D  298C               	goto	u627
  3323  018E  0BF0               	decfsz	??_LED_Blue,f
  3324  018F  298C               	goto	u627
  3325  0190  3200               	nop2
  3326  0191                     l1564:	
  3327                           
  3328                           ;main.c: 75:         RC5 = 0;
  3329  0191  0020               	movlb	0	; select bank0
  3330  0192  128E               	bcf	14,5	;volatile
  3331                           
  3332                           ;main.c: 76:         _delay((unsigned long)((200)*(125000/4000.0)));
  3333  0193  3009               	movlw	9
  3334  0194  00F0               	movwf	??_LED_Blue
  3335  0195  301C               	movlw	28
  3336  0196                     u637:	
  3337  0196  0B89               	decfsz	9,f
  3338  0197  2996               	goto	u637
  3339  0198  0BF0               	decfsz	??_LED_Blue,f
  3340  0199  2996               	goto	u637
  3341  019A  3200               	nop2
  3342  019B                     l1566:	
  3343                           
  3344                           ;main.c: 72:     while(num--) {
  3345  019B  3001               	movlw	1
  3346  019C  02F1               	subwf	LED_Blue@num,f
  3347  019D  0A71               	incf	LED_Blue@num,w
  3348  019E  1D03               	btfss	3,2
  3349  019F  29A1               	goto	u361
  3350  01A0  29A2               	goto	u360
  3351  01A1                     u361:	
  3352  01A1  2987               	goto	l72
  3353  01A2                     u360:	
  3354  01A2                     l1568:	
  3355                           
  3356                           ;main.c: 78:     _delay((unsigned long)((1000)*(125000/4000.0)));
  3357  01A2  3029               	movlw	41
  3358  01A3  00F0               	movwf	??_LED_Blue
  3359  01A4  3094               	movlw	148
  3360  01A5                     u647:	
  3361  01A5  0B89               	decfsz	9,f
  3362  01A6  29A5               	goto	u647
  3363  01A7  0BF0               	decfsz	??_LED_Blue,f
  3364  01A8  29A5               	goto	u647
  3365  01A9  3200               	nop2
  3366  01AA                     l74:	
  3367  01AA  0008               	return
  3368  01AB                     __end_of_LED_Blue:	
  3369                           
  3370                           	psect	text23
  3371  02D8                     __ptext23:	
  3372 ;; *************** function _PORT_Init *****************
  3373 ;; Defined at:
  3374 ;;		line 4 in file "../library/port.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;		None
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;		None
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  1    wreg      void 
  3381 ;; Registers used:
  3382 ;;		status,2, status,0, pclath, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1
  3388 ;;      Params:         0       0       0
  3389 ;;      Locals:         0       0       0
  3390 ;;      Temps:          0       0       0
  3391 ;;      Totals:         0       0       0
  3392 ;;Total ram usage:        0 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    2
  3395 ;; This function calls:
  3396 ;;		_PORTA_Init
  3397 ;;		_PORTC_Init
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _PORT_Init
  3405  02D8                     _PORT_Init:	
  3406  02D8                     l1210:	
  3407                           ;incstack = 0
  3408                           ; Regs used in _PORT_Init: [status,2+status,0+pclath+cstack]
  3409                           
  3410                           
  3411                           ;../library/port.c: 5:     PORTA_Init();
  3412  02D8  3182  22CF  3182   	fcall	_PORTA_Init
  3413                           
  3414                           ;../library/port.c: 6:     PORTC_Init();
  3415  02DB  3182  22C6  3182   	fcall	_PORTC_Init
  3416  02DE                     l339:	
  3417  02DE  0008               	return
  3418  02DF                     __end_of_PORT_Init:	
  3419                           
  3420                           	psect	text24
  3421  02C6                     __ptext24:	
  3422 ;; *************** function _PORTC_Init *****************
  3423 ;; Defined at:
  3424 ;;		line 16 in file "../library/port.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		status,2
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1
  3438 ;;      Params:         0       0       0
  3439 ;;      Locals:         0       0       0
  3440 ;;      Temps:          0       0       0
  3441 ;;      Totals:         0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_PORT_Init
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _PORTC_Init
  3454  02C6                     _PORTC_Init:	
  3455  02C6                     l1208:	
  3456                           ;incstack = 0
  3457                           ; Regs used in _PORTC_Init: [status,2]
  3458                           
  3459                           
  3460                           ;../library/port.c: 17:     PORTC = 0;
  3461  02C6  0020               	movlb	0	; select bank0
  3462  02C7  018E               	clrf	14	;volatile
  3463                           
  3464                           ;../library/port.c: 18:     LATC = 0;
  3465  02C8  0022               	movlb	2	; select bank2
  3466  02C9  018E               	clrf	14	;volatile
  3467                           
  3468                           ;../library/port.c: 19:     ANSELC = 0;
  3469  02CA  0023               	movlb	3	; select bank3
  3470  02CB  018E               	clrf	14	;volatile
  3471                           
  3472                           ;../library/port.c: 20:     TRISC = 0;
  3473  02CC  0021               	movlb	1	; select bank1
  3474  02CD  018E               	clrf	14	;volatile
  3475  02CE                     l345:	
  3476  02CE  0008               	return
  3477  02CF                     __end_of_PORTC_Init:	
  3478                           
  3479                           	psect	text25
  3480  02CF                     __ptext25:	
  3481 ;; *************** function _PORTA_Init *****************
  3482 ;; Defined at:
  3483 ;;		line 9 in file "../library/port.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;		None
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;		None
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  1    wreg      void 
  3490 ;; Registers used:
  3491 ;;		status,2
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1
  3497 ;;      Params:         0       0       0
  3498 ;;      Locals:         0       0       0
  3499 ;;      Temps:          0       0       0
  3500 ;;      Totals:         0       0       0
  3501 ;;Total ram usage:        0 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; Hardware stack levels required when called:    1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_PORT_Init
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _PORTA_Init
  3513  02CF                     _PORTA_Init:	
  3514  02CF                     l1206:	
  3515                           ;incstack = 0
  3516                           ; Regs used in _PORTA_Init: [status,2]
  3517                           
  3518                           
  3519                           ;../library/port.c: 10:     PORTA = 0;
  3520  02CF  0020               	movlb	0	; select bank0
  3521  02D0  018C               	clrf	12	;volatile
  3522                           
  3523                           ;../library/port.c: 11:     LATA = 0;
  3524  02D1  0022               	movlb	2	; select bank2
  3525  02D2  018C               	clrf	12	;volatile
  3526                           
  3527                           ;../library/port.c: 12:     ANSELA = 0;
  3528  02D3  0023               	movlb	3	; select bank3
  3529  02D4  018C               	clrf	12	;volatile
  3530                           
  3531                           ;../library/port.c: 13:     TRISA = 0;
  3532  02D5  0021               	movlb	1	; select bank1
  3533  02D6  018C               	clrf	12	;volatile
  3534  02D7                     l342:	
  3535  02D7  0008               	return
  3536  02D8                     __end_of_PORTA_Init:	
  3537                           
  3538                           	psect	text26
  3539  02F9                     __ptext26:	
  3540 ;; *************** function _NRF_IRQ_Init *****************
  3541 ;; Defined at:
  3542 ;;		line 99 in file "main.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;		None
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		None
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1
  3556 ;;      Params:         0       0       0
  3557 ;;      Locals:         0       0       0
  3558 ;;      Temps:          0       0       0
  3559 ;;      Totals:         0       0       0
  3560 ;;Total ram usage:        0 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_main
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _NRF_IRQ_Init
  3572  02F9                     _NRF_IRQ_Init:	
  3573  02F9                     l1212:	
  3574                           ;incstack = 0
  3575                           ; Regs used in _NRF_IRQ_Init: []
  3576                           
  3577                           
  3578                           ;main.c: 100:     TRISA4 = 1;
  3579  02F9  0021               	movlb	1	; select bank1
  3580  02FA  160C               	bsf	12,4	;volatile
  3581  02FB                     l85:	
  3582  02FB  0008               	return
  3583  02FC                     __end_of_NRF_IRQ_Init:	
  3584                           
  3585                           	psect	intentry
  3586  0004                     __pintentry:	
  3587 ;; *************** function _ISR *****************
  3588 ;; Defined at:
  3589 ;;		line 114 in file "main.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		None
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1
  3603 ;;      Params:         0       0       0
  3604 ;;      Locals:         0       0       0
  3605 ;;      Temps:          0       0       0
  3606 ;;      Totals:         0       0       0
  3607 ;;Total ram usage:        0 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		Interrupt level 1
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616  0004                     _ISR:	
  3617                           
  3618                           ;incstack = 0
  3619  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3620                           
  3621                           ; Regs used in _ISR: []
  3622  0005  3180               	pagesel	$
  3623  0006                     i1l90:	
  3624  0006  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3625  0007  0009               	retfie
  3626  0008                     __end_of_ISR:	
  3627  007E                     btemp	set	126	;btemp
  3628  007E                     int$flags	set	126
  3629  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        45
    BSS         9
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      69
    BANK1            32      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2
		 -> pad_aux_ok(CODE[2]), 

    NRF_Rx_Set_P0@addr	PTR unsigned char  size(1) Largest target is 5
		 -> rx_addr_0(BANK0[5]), 

    NRF_Read_RX_Pload@pBuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_RxPacket@rxbuf	PTR unsigned char  size(1) Largest target is 2
		 -> WirelessPad@rxbuf(BANK0[2]), 

    NRF_Write_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> RX_ADDRESS_P5(BANK0[5]), RX_ADDRESS_P4(BANK0[5]), RX_ADDRESS_P3(BANK0[5]), RX_ADDRESS_P2(BANK0[5]), 
		 -> RX_ADDRESS_P1(BANK0[5]), RX_ADDRESS_P0(BANK0[5]), NRF_Check@tuf(BANK0[5]), rx_addr_0(BANK0[5]), 

    NRF_Read_Buf@pBuf	PTR unsigned char  size(1) Largest target is 5
		 -> NRF_Check@buf(BANK0[5]), WirelessPad@rxbuf(BANK0[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 2
		 -> pad_aux_dat(BANK0[2]), 


Critical Paths under _main in COMMON

    _WirelessPad->_NRF_RxPacket
    _NRF_Rx_Set_P0->_NRF_Write_Buf
    _NRF_Rx_Set->_NRF_Write_Reg
    _NRF_Rx_Receive->_NRF_Write_Reg
    _NRF_RxPacket->_NRF_Read_RX_Pload
    _NRF_Read_RX_Pload->_NRF_Read_Buf
    _NRF_Get_Status->_NRF_Read_Reg
    _NRF_Read_Reg->_NRF_SPI_RW
    _NRF_Flush_RX->_NRF_Write_Reg
    _NRF_Clear_IRQ->_NRF_Write_Reg
    _NRF_Write_Reg->_NRF_SPI_RW
    _NRF_Check->_NRF_Read_Buf
    _NRF_Write_Buf->_NRF_SPI_RW
    _NRF_Read_Buf->_NRF_SPI_RW

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_WirelessPad
    _WirelessPad->_NRF_Check

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27214
                       _NRF_IRQ_Init
                          _PORT_Init
                        _WirelessPad
 ---------------------------------------------------------------------------------
 (1) _WirelessPad                                          4     4      0   27214
                                             11 BANK0      4     4      0
                           _LED_Blue
                            _LED_Red
                          _NRF_Check
                      _NRF_Clear_IRQ
                             _NRF_On
                      _NRF_Port_Init
                       _NRF_RxPacket
                     _NRF_Rx_Receive
                         _NRF_Rx_Set
                      _NRF_Rx_Set_P0
                       _NRF_SPI_Init
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              10     6      4     328
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) _NRF_SPI_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set_P0                                        4     3      1    6214
                                              7 COMMON     4     3      1
                      _NRF_Write_Buf
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Set                                           3     2      1    3325
                                              5 COMMON     3     2      1
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Rx_Receive                                       1     1      0    3205
                                              5 COMMON     1     1      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_RxPacket                                         3     3      0    7282
                                             13 COMMON     1     1      0
                                              0 BANK0      2     2      0
                       _NRF_Flush_RX
                     _NRF_Get_Status
                  _NRF_Read_RX_Pload
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Read_RX_Pload                                    5     5      0     702
                                              8 COMMON     5     5      0
            _NRF_Get_Current_Pipenum
                       _NRF_Read_Buf
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Get_Current_Pipenum                              0     0      0      67
                     _NRF_Get_Status
 ---------------------------------------------------------------------------------
 (5) _NRF_Get_Status                                       0     0      0      67
                       _NRF_Read_Reg
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Reg                                         3     3      0      67
                                              1 COMMON     3     3      0
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (3) _NRF_Flush_RX                                         0     0      0    3205
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (2) _NRF_Port_Init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NRF_Clear_IRQ                                        7     7      0    3281
                                              5 COMMON     4     4      0
                      _NRF_Write_Reg
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Reg                                        4     3      1    3205
                                              1 COMMON     4     3      1
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (2) _NRF_Check                                           13    13      0    3508
                                              8 COMMON     2     2      0
                                              0 BANK0     11    11      0
                       _NRF_Read_Buf
                      _NRF_Write_Buf
 ---------------------------------------------------------------------------------
 (3) _NRF_Write_Buf                                        6     4      2    2856
                                              1 COMMON     6     4      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_Read_Buf                                         7     5      2     445
                                              1 COMMON     7     5      2
                         _NRF_SPI_RW
 ---------------------------------------------------------------------------------
 (4) _NRF_SPI_RW                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Red                                              2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_Blue                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PORT_Init                                            0     0      0       0
                         _PORTA_Init
                         _PORTC_Init
 ---------------------------------------------------------------------------------
 (2) _PORTC_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PORTA_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _NRF_IRQ_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _NRF_IRQ_Init
   _PORT_Init
     _PORTA_Init
     _PORTC_Init
   _WirelessPad
     _LED_Blue
     _LED_Red
     _NRF_Check
       _NRF_Read_Buf
         _NRF_SPI_RW
       _NRF_Write_Buf
         _NRF_SPI_RW
     _NRF_Clear_IRQ
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_On
     _NRF_Port_Init
     _NRF_RxPacket
       _NRF_Flush_RX
         _NRF_Write_Reg
           _NRF_SPI_RW
       _NRF_Get_Status
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Read_RX_Pload
         _NRF_Get_Current_Pipenum
           _NRF_Get_Status
             _NRF_Read_Reg
               _NRF_SPI_RW
         _NRF_Read_Buf
           _NRF_SPI_RW
         _NRF_Read_Reg
           _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Receive
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_Rx_Set_P0
       _NRF_Write_Buf
         _NRF_SPI_RW
       _NRF_Write_Reg
         _NRF_SPI_RW
     _NRF_SPI_Init
     _memcpy

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      53       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      45       6       86.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      53       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Sep 09 08:21:37 2019

      __size_of_NRF_Read_RX_Pload 001D                       __CFG_CP$OFF 0000                                l72 0187  
                              l80 02A0                                l74 01AA                                l66 0161  
                              l68 0184                                l85 02FB                                l79 02A0  
                              l99 0047                                _RD 0CA8                                _WR 0CA9  
                  NRF_Check@F2720 005C                    NRF_Check@F2718 0020                       __CFG_LVP$ON 0000  
                             l101 0077                               l202 02A8                               l211 0283  
                             l205 02AF                               l301 0247                               l222 0210  
                             l223 0212                               l216 01EF                               l208 0271  
                             l217 01F1                               l316 0293                               l237 00DA  
                             l261 02EA                               l342 02D7                               l190 02BB  
                             l264 022F                               l345 02CE                               l193 02F8  
                             l273 02F0                               l258 015E                               l339 02DE  
                             l267 02F5                               l279 025F                               l199 02C5  
                             l298 01CE                               l994 0108                               _RA0 0060  
                             _RA2 0062                               _RA4 0064                               _RC0 0070  
                             _RA5 0065                               _RC1 0071                               _RC2 0072  
                             _RC4 0074                               _RC5 0075                               u320 02AD  
                             u400 00D1                               u321 02AC                               u401 00D0  
                             u330 01EF                               u410 00D7                               u331 01EE  
                             u411 00D6                               u340 0210                               u420 0108  
                             u341 020F                               u421 0107                               u350 017C  
                             u430 0140                               u351 017B                               u431 013F  
                             u360 01A2                               u440 0257                               u361 01A1  
                             u441 0256                               u370 0090                               u450 025B  
                    __CFG_CPD$OFF 0000                               u451 025A                               u380 009B  
                             u460 025F                               _ISR 0004                               u461 025E  
                             u390 00C6                               u470 003E                               u607 0170  
                             u391 00C5                               u471 003D                               u480 006A  
                             u617 017F                               u481 0069                               u627 018C  
                             u637 0196                               u647 01A5                               u577 0031  
                             u587 007F                               u597 0166                      __CFG_BORV$LO 0000  
                             wreg 0009                      __CFG_IESO$ON 0000                        _TX_ADDRESS 0025  
               NRF_Rx_Set_P0@addr 007A                              ?_ISR 0070                   __end_of_LED_Red 0185  
                            l1210 02D8                              l1212 02F9                              l1206 02CF  
                            l1208 02C6                              l1500 0275                              l1510 01D0  
                            l1502 027C                              l1520 01E9                              l1512 01D2  
                            l1600 00C7                              l1504 0280                              l1514 01D6  
                            l1530 01F9                              l1610 00D9                              l1602 00CB  
                            l1506 0282                              l1522 02E5                              l1516 01D8  
                            l1532 01FB                              l1604 00D1                              l1540 0214  
                            l1620 0233                              l1700 0065                              l1550 0160  
                            l1518 01E5                              l1534 0202                              l1526 01F3  
                            l1606 00D7                              l1542 0222                              l1630 0290  
                            l1614 01AC                              l1622 023F                              l1710 0074  
                            l1702 006A                              l1560 0186                              l1552 0163  
                            l1536 0206                              l1528 01F5                              l1544 022E  
                            l1624 0284                              l1616 01AE                              l1640 00F8  
                            l1632 00DC                              l1712 007B                              l1704 006B  
                            l1562 0189                              l1554 016B                              l1474 02A3  
                            l1538 020A                              l1570 02F6                              l1490 0270  
                            l1482 0261                              l1650 0149                              l1626 0286  
                            l1618 0231                              l1634 00E5                              l1642 00FC  
                            l1706 006F                              l1564 0191                              l1556 0175  
                            l1476 02A5                              l1572 02B0                              l1548 02EB  
                            l1484 0263                              l1652 0151                              l1644 0138  
                            l1628 028E                              l1580 02C2                              l1636 00ED  
                            l1708 0072                              l1732 0294                              l1566 019B  
                            l1558 017C                              l1478 02AD                              l1590 00B6  
                            l1582 0086                              l1670 025B                              l1662 0248  
                            l1486 0267                              l1494 02F1                              l1654 0154  
                            l1646 0138                              l1574 02BC                              l1638 00F1  
                            l1734 0297                              l1568 01A2                              l1584 0094  
                            l1672 025B                              l1664 0253                              l1488 026E  
                            l1648 0140                              l1656 015B                              l1576 02BE  
                            l1680 0024                              l1736 029A                              l1586 009E  
                            l1498 0273                              l1674 025F                              l1666 0257  
                            l1658 015D                              l1578 02C0                              l1690 003E  
                            l1682 0027                              l1738 029D                              l1596 00B8  
                            l1588 00AA                              l1668 0257                              l1692 0043  
                            l1684 002A                              l1694 004D                              l1686 002D  
                            l1678 0021                              l1696 0056                              l1688 0036  
                            l1698 0059                              _LATA 010C                              _LATC 010E  
                            i1l90 0006                              _WREN 0CAA                      __CFG_WRT$OFF 0000  
                   __CFG_FCMEN$ON 0000                  WirelessPad@F2712 0061                              _main 0294  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            btemp 007E                     __CFG_BOREN$ON 0000                              start 0008  
                NRF_Write_Buf@len 0072                  NRF_Write_Buf@reg 0075                     __CFG_MCLRE$ON 0000  
                NRF_Write_Reg@reg 0073                             ??_ISR 0070                  WirelessPad@rxbuf 005A  
                   __CFG_PLLEN$ON 0000                  __end_of_LED_Blue 01AB                       ?_NRF_SPI_RW 0070  
                    _tx_pad_chair 0306                       LED_Blue@num 0071                             ?_main 0070  
                           _EEADR 0191                     __CFG_WDTE$OFF 0000                             _EEPGD 0CAF  
                    _tx_pad_potty 0302                             _PORTA 000C                             _PORTC 000E  
                           _TRISA 008C                             _TRISC 008E                __size_of_NRF_Check 0055  
                     ?_NRF_Rx_Set 0075           _NRF_Get_Current_Pipenum 02E5                       ?_PORTA_Init 0070  
                     ?_PORTC_Init 0070           __size_of_NRF_Get_Status 0005             NRF_Read_RX_Pload@pBuf 007B  
              __size_of_PORT_Init 0007             NRF_Read_RX_Pload@pipe 007C                             status 0003  
                           wtemp0 007E                 NRF_Write_Buf@pBuf 0071                   __initialization 0009  
                    __end_of_main 02A2                            ??_main 007E                     _RX_ADDRESS_P0 0043  
                   _RX_ADDRESS_P1 003E                     _RX_ADDRESS_P2 0039                     _RX_ADDRESS_P3 0034  
                   _RX_ADDRESS_P4 002F                     _RX_ADDRESS_P5 002A                         ??_LED_Red 0070  
           __end_of_NRF_Clear_IRQ 0260                            _EEDATA 0193                            _EECON2 0196  
                          _ANSELA 018C                            _ANSELC 018E                            _OSCCON 0099  
                          _NRF_On 02F6                            _SSP1IF 008B                            _TRISA0 0460  
                          _TRISA2 0462                            _TRISA4 0464                            _TRISC0 0470  
                          _TRISA5 0465                            _TRISC1 0471                            _TRISC2 0472  
             __size_of_NRF_SPI_RW 000E                    __CFG_PWRTE$OFF 0000                 __end_of_NRF_Check 00DB  
             __size_of_NRF_Rx_Set 0024               __size_of_PORTA_Init 0009               __size_of_PORTC_Init 0009  
                  __CFG_STVREN$ON 0000                 __end_of_PORT_Init 02DF                            _memcpy 00DB  
       ??_NRF_Get_Current_Pipenum 0074           __size_of_NRF_Rx_Receive 0010            NRF_Read_RX_Pload@width 007A  
           __end_of_NRF_Rx_Set_P0 0248             __end_of_NRF_Port_Init 02BC           __end_of__initialization 001E  
                       ?_LED_Blue 0070                    __pcstackCOMMON 0070                      __pidataBANK0 0109  
           __end_of_NRF_Write_Buf 0213             __end_of_NRF_Write_Reg 0284                NRF_Write_Reg@value 0071  
                   ??_WirelessPad 0058                    _NRF_Get_Status 02F1                        __pbssBANK0 005C  
                         ?_NRF_On 0070                        ??_LED_Blue 0070                     ?_NRF_IRQ_Init 0070  
            NRF_Rx_Set_P0@buf_len 0077                        __pmaintext 0294                     ?_NRF_SPI_Init 0070  
                      __pintentry 0004                           ?_memcpy 0070                      ??_NRF_SPI_RW 0070  
          __end_of_NRF_Get_Status 02F6                           _LED_Red 015F                      ??_NRF_Rx_Set 0076  
                    ??_PORTA_Init 0070                      ??_PORTC_Init 0070                     ?_NRF_Flush_RX 0070  
                   ?_NRF_Read_Buf 0071                     ?_NRF_Read_Reg 0070                           _SSP1BUF 0211  
             __end_of_WirelessPad 0086                    NRF_Rx_Set@pipe 0075                     ?_NRF_RxPacket 0070  
                  ??_NRF_IRQ_Init 0070                   __size_of_NRF_On 0003                        _pad_aux_ok 030A  
                      _pad_aux_on 02FE                __end_of_NRF_SPI_RW 02B0                    ??_NRF_SPI_Init 0070  
              __end_of_NRF_Rx_Set 01CF                __end_of_PORTA_Init 02D8                __end_of_PORTC_Init 02CF  
                 __size_of_memcpy 002E                           __ptext1 0021                           __ptext2 00DB  
                         __ptext3 02BC                           __ptext4 0230                           __ptext5 01AB  
                         __ptext6 0284                           __ptext7 0136                           __ptext8 0213  
                         __ptext9 02E5                    _NRF_Rx_Receive 0284                      __size_of_ISR 0004  
                 ?_NRF_Get_Status 0070                    ??_NRF_Flush_RX 0075                    ??_NRF_Read_Buf 0073  
                  ??_NRF_Read_Reg 0071              end_of_initialization 001E                    ??_NRF_RxPacket 007D  
                         memcpy@d 0079                           memcpy@n 0072                           memcpy@s 0075  
                         init_ram 02DF                           initloop 02E0                         _NRF_Check 0086  
                   NRF_SPI_RW@dat 0070            __end_of_NRF_Rx_Receive 0294                   NRF_Read_Buf@len 0072  
                 NRF_Read_Buf@reg 0076                         _PORT_Init 02D8                   NRF_Read_Reg@reg 0072  
                __CFG_FOSC$INTOSC 0000                       _WirelessPad 0021                    NRF_Write_Buf@i 0076  
                      _tx_pad_bed 0300                        _tx_pad_aux 0308                        _tx_pad_nci 0304  
                  __end_of_NRF_On 02F9                 __size_of_LED_Blue 0026            __size_of_NRF_Clear_IRQ 0018  
                      ?_NRF_Check 0070                   ?_NRF_Rx_Receive 0070                        LED_Red@num 0071  
                  __end_of_memcpy 0109              __end_of_NRF_IRQ_Init 02FC                        ?_PORT_Init 0070  
             start_initialization 0009                       __end_of_ISR 0008              __end_of_NRF_SPI_Init 02C6  
              NRF_RxPacket@status 004E               NRF_Write_Reg@status 0074                          ??_NRF_On 0070  
            __end_of_NRF_Flush_RX 02F1              __end_of_NRF_Read_Buf 01F2              __end_of_NRF_Read_Reg 0272  
        ?_NRF_Get_Current_Pipenum 0070                       __pdataBANK0 0020            __size_of_NRF_Rx_Set_P0 0018  
                        ??_memcpy 0074              __end_of_NRF_RxPacket 015F            __size_of_NRF_Port_Init 000C  
                   NRF_Read_Buf@i 0077                          ?_LED_Red 0070                         ___latbits 0000  
                   __pcstackBANK0 004D                 NRF_Clear_IRQ@temp 0078                     _NRF_Clear_IRQ 0248  
          __size_of_NRF_Write_Buf 0021            __size_of_NRF_Write_Reg 0012               __end_of_pad_aux_off 02FE  
                     ??_NRF_Check 0078                  ??_NRF_Get_Status 0074                       ??_PORT_Init 0070  
                   NRF_Rx_Set@ack 0077                        NRF_Check@i 0057                    ?_NRF_Clear_IRQ 0070  
                   _NRF_Rx_Set_P0 0230                     _NRF_Port_Init 02B0                          _LED_Blue 0185  
 __end_of_NRF_Get_Current_Pipenum 02EB             __size_of_NRF_IRQ_Init 0003                          _SSP1CON1 0215  
                        _SSP1STAT 0214                     _NRF_Write_Buf 01F2                     _NRF_Write_Reg 0272  
                       _rx_addr_0 0048             __size_of_NRF_SPI_Init 000A                      NRF_Check@buf 0052  
                    NRF_Check@tuf 004D                      ?_WirelessPad 0070                  __size_of_LED_Red 0026  
                  ?_NRF_Rx_Set_P0 0077                    ?_NRF_Port_Init 0070                       _pad_aux_dat 0063  
                     _pad_aux_off 02FC             __size_of_NRF_Flush_RX 0006             __size_of_NRF_Read_Buf 0023  
                    _NRF_IRQ_Init 02F9             __size_of_NRF_Read_Reg 0012                 NRF_RxPacket@rxbuf 004D  
                ??_NRF_Rx_Receive 0075                         memcpy@tmp 0077             __size_of_NRF_RxPacket 0029  
                    _NRF_SPI_Init 02BC                    ?_NRF_Write_Buf 0071                    ?_NRF_Write_Reg 0071  
               _NRF_Read_RX_Pload 0213                ?_NRF_Read_RX_Pload 0070                   ??_NRF_Clear_IRQ 0075  
              __end_of_pad_aux_ok 030C                __end_of_pad_aux_on 0300               ??_NRF_Read_RX_Pload 0078  
                    _NRF_Flush_RX 02EB                          __ptext10 02F1                          __ptext11 0260  
                        __ptext20 02A2                          __ptext12 02EB                          __ptext21 015F  
                        __ptext13 02B0                          __ptext22 0185                          __ptext14 02F6  
                        __ptext23 02D8                          __ptext15 0248                          __ptext24 02C6  
                        __ptext16 0272                          __ptext25 02CF                          __ptext17 0086  
                        __ptext26 02F9                          __ptext18 01F2                          __ptext19 01CF  
                    _NRF_Read_Buf 01CF                      _NRF_Read_Reg 0260              __end_of_tx_pad_chair 0308  
                    _NRF_RxPacket 0136                     __size_of_main 000E              __end_of_tx_pad_potty 0304  
       __end_of_NRF_Read_RX_Pload 0230                          int$flags 007E                      _SSP1STATbits 0214  
                        memcpy@d1 0078                          memcpy@s1 0070                   ??_NRF_Rx_Set_P0 0078  
__size_of_NRF_Get_Current_Pipenum 0006                   ??_NRF_Port_Init 0070                          intlevel1 0000  
               __CFG_CLKOUTEN$OFF 0000                   ??_NRF_Write_Buf 0073                   ??_NRF_Write_Reg 0072  
                      _NRF_SPI_RW 02A2                     __pstringtext1 02FC                     __pstringtext2 02FE  
                   __pstringtext3 0300                     __pstringtext4 0302                     __pstringtext5 0304  
                   __pstringtext6 0306                     __pstringtext7 0308                     __pstringtext8 030A  
              NRF_Read_Reg@status 0073                __end_of_tx_pad_bed 0302                __end_of_tx_pad_aux 030A  
              __end_of_tx_pad_nci 0306                        _NRF_Rx_Set 01AB                        _PORTA_Init 02CF  
                      _PORTC_Init 02C6                  NRF_Read_Buf@pBuf 0071              __size_of_WirelessPad 0065  
